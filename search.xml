<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决no supported authentication methods avaiable</title>
      <link href="/2021/08/20/jie-jue-no-supported-authentication-methods-avaiable/"/>
      <url>/2021/08/20/jie-jue-no-supported-authentication-methods-avaiable/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>解决no supported authentication methods avaiable</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>使用TortoiseGit向github和gitee远程推送文件的时候，报错 no supported authentication methods avaiable</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>因为TortoiseGit和Git的冲突我们需要把乌龟git设置改正如下：</p><ul><li>在Git仓库文件夹下单击右键，依次打开TortoiseGit–&gt;Settings–&gt;Network，如下：<br><img src="/2021/08/20/jie-jue-no-supported-authentication-methods-avaiable/1.png?v=1&amp;type=image" alt=""></li><li>上图红色方框处，将SSH client指向C:\Program Files\Git\usr\bin\ssh.exe （此处的路径是我的Git安装路径，请根据自己Git安装路径填写）</li><li>再次尝试推送，成功！<br><img src="/2021/08/20/jie-jue-no-supported-authentication-methods-avaiable/2.png?v=1&amp;type=image" alt=""></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> TortoiseGit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载、学习】Java刷题常用API</title>
      <link href="/2021/08/19/java-shua-ti-chang-yong-api/"/>
      <url>/2021/08/19/java-shua-ti-chang-yong-api/</url>
      
        <content type="html"><![CDATA[<p>  </p>     <meta charset="UTF-8">   <meta http-equiv="x-ua-compatible" content="IE=edge">   <meta name="viewport" content="width=device-width, initial-scale=1">   <title>Title</title>  <meta name="generator" content="Hexo 4.2.0"><link rel="alternate" href="/atom.xml" title="小杨同学のBlog" type="application/atom+xml"><link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css">    <div class="post">   <h1 class="postTitle">   [Java刷题常用API](https://www.cnblogs.com/chzhyang/p/13494554.html) </h1>   <div class="clear"></div>   <div class="postBody">   <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">   <p></p>   <div class="toc">   <div class="toc-container-header">目录</div>   <ul>   <li><a href="#输入输出">输入输出</a></li>   <li><a href="#快速查看">快速查看</a></li>   <li><a href="#最大最小值">最大最小值</a></li>   <li><a href="#string">string</a>   <ul>   <li><a href="#stringbuilder">stringbuilder</a></li>   </ul>   </li>   <li><a href="#集合">集合</a>   <ul>   <li><a href="#map">map</a></li>   <li><a href="#queue">queue</a></li>   <li><a href="#stack">stack</a></li>   <li><a href="#set">set</a></li>   <li><a href="#优先队列-priorityqueue-heap">优先队列 PriorityQueue (Heap)</a></li>   </ul>   </li>   <li><a href="#数组">数组</a>   <ul>   <li><a href="#静态数组">静态数组</a></li>   <li><a href="#动态数组">动态数组</a></li>   </ul>   </li>   <li><a href="#math">Math</a></li>   </ul>   </div>   <p></p>   <h1 id="输入输出">输入输出</h1>   <pre class="line-numbers language-language-java hljs">Scanner sc = <span class="hljs-keyword"><code class="language-language-java hljs">Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);  String s = sc.next();<span class="hljs-comment">//字符串</span>  <span class="hljs-keyword">double</span> t = sc.nextDouble(); <span class="hljs-comment">//浮点数</span>  String s = sc.nextLine();<span class="hljs-comment">//一行</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>   <p>判断是否有下一个输入，用sc.hasNext()或sc.hasNextInt()或sc.hasNextDouble()或sc.hasNextLine()</p>   <pre class="line-numbers language-language-java hljs"><span class="hljs-comment"><code class="language-language-java hljs"><span class="hljs-comment">//循环输入整数</span>  <span class="hljs-keyword">while</span>(in.hasNextInt()){     <span class="hljs-keyword">int</span> n = sc.nextInt();  }  <span class="hljs-comment">//循环输入字符</span>  <span class="hljs-keyword">while</span>(in.hasNext()){  <p>}<br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br> <blockquote><br> <p><br>  注意，如果使用nextInt()或next()之后，要用nextLine()，需手动调用.nextLine()吸收掉回车符或空格。但是如果不是交叉使用，比如连续使用next()或next()是可以自动吸收掉空格或回车符的。</p><br> </blockquote><br> <p>nextInt() 只读取整数类型数据，读取完输入后把<strong>光标放在同一行该数据的后面</strong>。</p><br> <p>next() 只读取到空格，不能读取被空格分开的两个单词，读取完后把光标位置<strong>同上</strong>。</p><br> <p>nextLine() 读取整行的数据包括单词间的空格和结束的回车符，读取结束后把<strong>光标放在下一行开头。</strong></p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-comment">/**<br>input:<br>2 3<br>1 2 3<br>4 5 6<br>avd<br>dvd<br>abcdf fsfd<br>output：<br>123<br>456<br>avd<br>dvd<br>abcdf fsfd<br>*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title"><code class="language-language-java hljs"><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-comment">/**<br>input:<br>2 3<br>1 2 3<br>4 5 6<br>avd<br>dvd<br>abcdf fsfd<br>output：<br>123<br>456<br>avd<br>dvd<br>abcdf fsfd<br>*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{  <p></p><pre><code><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>  class="hljs-keyword"&gt;void <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> {<br>        Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<br>        <span class="hljs-keyword">int</span> n = sc.nextInt();<br>        <span class="hljs-keyword">int</span> m = sc.nextInt();<br>        List&lt;List&lt;Integer&gt;&gt; lists = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>; i&lt;n; i++){<br>            List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>; j&lt;m; j++){<br>                list.add(sc.nextInt());<br>            }<br>            lists.add(list);<br>        }<br>        String s1 = sc.next();<br>        <span class="hljs-keyword">char</span>[] c = sc.next().toCharArray();<br>        sc.nextLine();<span class="hljs-comment">//手动 调用.nextLine()越过“/n“</span><br>  String s2 = sc.nextLine();<br>        <span class="hljs-comment">//output</span><br> <span class="hljs-keyword">for</span>(List&lt;Integer&gt; list:lists){<br>            <span class="hljs-keyword">for</span>(Integer a: list){<br>                System.out.print(a);<br>            }<br>            System.out.println();<br>        }<br>        System.out.println(s1);<br>        System.out.println(c);<br>        System.out.println(s2);<br>    }<br>}  </p><p></p></code></pre><br> <p>循环中hasNext()无法结束， 可以在循环中加入break条件，也可以手动设置终止符</p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-comment">//例：以“0”作为终止符</span><br>Scanner in = <span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">while</span> (!in.hasNext(<span class="hljs-string">"0"</span>)) {<br>System.out.println(in.next());<br>}<br></code></pre><br> <p>输出</p><br> <pre><code class="hljs css"><span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>();<br><span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.printf</span>();<br></code></pre><br> <h1 id="快速查看">快速查看</h1><br> <p><img src="https://i.loli.net/2020/08/12/K12bdj8I3BMANoJ.png" alt="截屏2020-08-12 16.46.36" loading="lazy"><br> </p><br> <h1 id="最大最小值">最大最小值</h1><br> <p>fmax = Float.MAX_VALUE;</p><br> <p>fmin = Float.MIN_VALUE;</p><br> <p>dmax = Double.MAX_VALUE;</p><br> <p>dmin = Double.MIN_VALUE;</p><br> <p>bmax = Byte.MAX_VALUE;</p><br> <p>bmin = Byte.MIN_VALUE;</p><br> <p>cmax = Character.MAX_VALUE;</p><br> <p>cmin = Character.MIN_VALUE;</p><br> <p>shmax = Short.MAX_VALUE;</p><br> <p>shmin = Short.MIN_VALUE;</p><br> <p>imax = Integer.MAX_VALUE;</p><br> <p>imin = Integer.MIN_VALUE;</p><br> <p>lmax = Long.MAX_VALUE;</p><br> <p>lmin = Long.MIN_VALUE;</p><br> <h1 id="string">string</h1><br> <p>不可变量, 每个位置元素是个char</p><br> <p>初始化</p><br> <pre><code class="language-java hljs">String s = <span class="hljs-string"><code class="language-language-java hljs"><span class="hljs-comment">//例：以“0”作为终止符</span><br>Scanner in = <span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">while</span> (!in.hasNext(<span class="hljs-string">"0"</span>)) {<br>System.out.println(in.next());<br>}<br></code></pre><br> <p>输出</p><br> <pre><code class="hljs css"><span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>();<br><span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.printf</span>();<br></code></pre><br> <h1 id="快速查看">快速查看</h1><br> <p><img src="https://i.loli.net/2020/08/12/K12bdj8I3BMANoJ.png" alt="截屏2020-08-12 16.46.36" loading="lazy"><br> </p><br> <h1 id="最大最小值">最大最小值</h1><br> <p>fmax = Float.MAX_VALUE;</p><br> <p>fmin = Float.MIN_VALUE;</p><br> <p>dmax = Double.MAX_VALUE;</p><br> <p>dmin = Double.MIN_VALUE;</p><br> <p>bmax = Byte.MAX_VALUE;</p><br> <p>bmin = Byte.MIN_VALUE;</p><br> <p>cmax = Character.MAX_VALUE;</p><br> <p>cmin = Character.MIN_VALUE;</p><br> <p>shmax = Short.MAX_VALUE;</p><br> <p>shmin = Short.MIN_VALUE;</p><br> <p>imax = Integer.MAX_VALUE;</p><br> <p>imin = Integer.MIN_VALUE;</p><br> <p>lmax = Long.MAX_VALUE;</p><br> <p>lmin = Long.MIN_VALUE;</p><br> <h1 id="string">string</h1><br> <p>不可变量, 每个位置元素是个char</p><br> <p>初始化</p><br> <pre><code class="language-java hljs">String s = <span class="hljs-string">"abc"</span>;  <p></p><p>s = <span class="hljs-string">"abc"</span><br>String s2 = <span class="hljs-keyword">new</span> String(s);  </p><p>s = <span class="hljs-string">"abc"</span>;<br><span class="hljs-keyword">char</span>[] c = s.toCharArray();<br>String s3 = <span class="hljs-keyword">new</span> String(c);  </p><p>String s4 = <span class="hljs-keyword">new</span> String(c, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>);    <span class="hljs-comment">// [offset, offset + count) [)</span>  </p><p></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br> <p>String.valueOf( 一个参数Object/基本数据类型 ) 返回传入参数obj的toString(),若为空返回字符串”null”。 若为基本类型调用其<br> 包装类的toString方法（Integer.toString(i)）</p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-keyword">char</span>[] ch = {<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-string">'c'</span>};<br>String s5 = String.valueOf(ch);<span class="hljs-comment">//char数组转换成string</span><br></code></pre><br> <p>方法: charAt, length, substring, equals, indexOf, lastIndexOf, replace, toCharArray, trim, split,<br>                toLowerCase, toUpperCase</p><br> <pre><code class="language-java hljs">.substring(<span class="hljs-keyword">int</span> beginIndex, <span class="hljs-keyword">int</span> endIndex);    <span class="hljs-comment">// 返回字符片段[beginIndex, endIndex) --- O(n)</span><br>.substring(<span class="hljs-keyword">int</span> beginIndex);    <span class="hljs-comment"><code class="language-language-java hljs"><span class="hljs-keyword">char</span>[] ch = {<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-string">'c'</span>};<br>String s5 = String.valueOf(ch);<span class="hljs-comment">//char数组转换成string</span><br></code></pre><br> <p>方法: charAt, length, substring, equals, indexOf, lastIndexOf, replace, toCharArray, trim, split,<br>                toLowerCase, toUpperCase</p><br> <pre><code class="language-java hljs">.substring(<span class="hljs-keyword">int</span> beginIndex, <span class="hljs-keyword">int</span> endIndex);    <span class="hljs-comment">// 返回字符片段[beginIndex, endIndex) --- O(n)</span><br>.substring(<span class="hljs-keyword">int</span> beginIndex);    <span class="hljs-comment">// 返回字符片段[beginIndex, end_of_String) 就是从beginIndex开始后面的 ---- O(n)</span>  <p></p><p><span class="hljs-comment">//indexOf 是（暴力查找字符串，不是KMP）</span><br>.indexOf(String str)    <span class="hljs-comment">// 返回str第一个出现的位置(int)，没找到则返回-1。 --- O(m * n) m为原串长度， n为str长度</span><br>s.indexOf(String str, <span class="hljs-keyword">int</span> fromIndex);    <span class="hljs-comment">// 同上，但从fromIndex开始找 --- O(m * n)</span>  </p><p>.lastIndexOf(String str);    <span class="hljs-comment">// 返回str最后出现的位置(int)，没找到则返回-1。 --- O(m * n) m为原串长度， n为str长度</span><br><span class="hljs-comment">// (假如要找一个字符char c，str可以表示成String.valueOf(c),然后作为参数传进去.</span><br>.lastIndexOf(String str, <span class="hljs-keyword">int</span> fromIndex);    <span class="hljs-comment">//从fromIndex开始从后往前找 [0 <- fromIndex] --- O(m * n)</span>  </p><p>.replace(<span class="hljs-keyword">char</span> oldChar, <span class="hljs-keyword">char</span> newChar);    <span class="hljs-comment">// 返回一个新字符串String，其oldChar全部变成newChar --- O(n)</span><br>replaceAll(String s1,String s2);<span class="hljs-comment">//用s2替换目标字符串中出现的所有s1</span><br>replaceFirst(String s1,String s2);<span class="hljs-comment">//用s2替换目标字符串中出现的第一个s1</span>  </p><p>.toCharArray();    <span class="hljs-comment">// 返回char[] 数组。 把String转换成字符数组 --- O(n)</span>  </p><p>.trim();    <span class="hljs-comment">// 返回去除前后空格的新字符串 --- O(n)</span>  </p><p>.split(String regex);    <span class="hljs-comment">// 返回 String[]，以regex(正则表达式)拆分 ---- O(n)</span><br><span class="hljs-comment">// 从非"/"算起 若"/a/c" -> 会变成"" "a" "c"</span><br>String[] date = str.split(<span class="hljs-string">"/"</span>);     <span class="hljs-comment">// date[0]:1995 date[1]:12 date[2]:18 --- O(n)</span>  </p><p><span class="hljs-comment">//转换大小写</span><br>s = s.toLowerCase();    <span class="hljs-comment">// 返回一个新的字符串全部转成小写 --- O(n)</span><br>s = s.toUpperCase();    <span class="hljs-comment">// 返回一个新的字符串全部转成大写 --- O(n)</span><br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br> <p>string的比较</p><br> <pre class="line-numbers language-language-java hljs">compareTo(String anotherString)<span class="hljs-comment">//按字典顺序比较两个字符串</span><br>compareToIgnoreCase(String anotherString)<span class="hljs-comment">//按字典顺序且不区分大小写比较两个字符串</span><br>equals(String anotherString)<span class="hljs-comment">//判断两个字符串是否相等，相等返回true否则返回false</span><br>equalsIgnoreCase(String str)<span class="hljs-comment">//同上，不区分大小写。</span><br></code></pre><br> <blockquote><br> <p>如果a &gt; b 返回大于0的整数， 如果a == b 返回0， 如果a &lt; b 返回小于0的整数<br><br>  其实是返回a和b第一个不同字符的差值。</p><br> </blockquote><br> <p>搜索子串</p><br> <pre><code class="language-java hljs">indexOf(String str);<span class="hljs-comment">//返回子串在此字符串中第一次出现的索引</span><br>indexOf(String str, <span class="hljs-keyword">int</span> fromindex);<span class="hljs-comment"><code class="language-language-java hljs">compareTo(String anotherString)<span class="hljs-comment">//按字典顺序比较两个字符串</span><br>compareToIgnoreCase(String anotherString)<span class="hljs-comment">//按字典顺序且不区分大小写比较两个字符串</span><br>equals(String anotherString)<span class="hljs-comment">//判断两个字符串是否相等，相等返回true否则返回false</span><br>equalsIgnoreCase(String str)<span class="hljs-comment">//同上，不区分大小写。</span><br></code></pre><br> <blockquote><br> <p>如果a &gt; b 返回大于0的整数， 如果a == b 返回0， 如果a &lt; b 返回小于0的整数<br><br>  其实是返回a和b第一个不同字符的差值。</p><br> </blockquote><br> <p>搜索子串</p><br> <pre><code class="language-java hljs">indexOf(String str);<span class="hljs-comment">//返回子串在此字符串中第一次出现的索引</span><br>indexOf(String str, <span class="hljs-keyword">int</span> fromindex);<span class="hljs-comment">//同上，从指定索引开始搜索</span>  <p></p><p>lastIndexOf(<span class="hljs-keyword">int</span> ch);<span class="hljs-comment">//返回指定字符在此字符串最后一次出现的索引</span><br>lastIndexOf(<span class="hljs-keyword">int</span> ch, <span class="hljs-keyword">int</span> fromindex);<span class="hljs-comment">//同上， 从指定索引开始搜索</span><br>lastIndexOf(String str);<span class="hljs-comment">//返回子串在此字符串最后一次出现的索引</span><br>lastIndexOf(String str, <span class="hljs-keyword">int</span> fromindex);<span class="hljs-comment">//同上， 从指定索引开始搜索</span>  </p><p>startsWith(String prefix);<span class="hljs-comment">// 检查是否以某一前缀开始</span><br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br> <p>其他类型转换为string</p><br> <pre class="line-numbers language-language-java hljs">String.valueOf(<span class="hljs-keyword">char</span>[] data);<span class="hljs-comment">//返回 char数组的字符串表示形式</span><br>String.valueOf(<span class="hljs-keyword">char</span>[] data,<span class="hljs-keyword">int</span> offset, <span class="hljs-keyword">int</span> count)<span class="hljs-comment">//返回 char 数组参数的特定子数组的字符串表示形式</span><br>String.valueOf(<span class="hljs-keyword">int</span> i);<span class="hljs-comment">//返回 int 参数的字符串表示形式</span><br></code></pre><br> <p>string转换为其他类型</p><br> <pre><code class="language-java hljs">String sInt = <span class="hljs-string">"123"</span>;<br><span class="hljs-keyword">int</span> s = Integer.parseInt(sInt);<br><span class="hljs-keyword">long</span> ls = Long.parseLong(sInt);<br><span class="hljs-keyword">char</span>[] c = s.toCharArray();<br></code></pre><br> <h2 id="stringbuilder">stringbuilder</h2><br> <p>非线程安全</p><br> <p>方法: append, charAt, length, setCharAt, insert, deleteCharAt, delete, reverse, toString</p><br> <pre><code class="language-java hljs">StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();<br>StringBuilder sb = StringBuilder(String str);<span class="hljs-comment">//构建一个值为str的可变字符串。</span><br>.setCharAt(<span class="hljs-keyword">int</span> index, <span class="hljs-keyword">char</span> ch);    <span class="hljs-comment">// 设置index位置的char为ch --- O(1)</span><br>.insert(<span class="hljs-keyword">int</span> offset, String str);    <span class="hljs-comment">// 在offer位置的插入字符串str--- O(m + n)</span><br>.deleteCharAt(<span class="hljs-keyword">int</span> index);    <span class="hljs-comment">// 删除index位置的char --- O(n)</span><br>.deleteCharAt(sb.length() - <span class="hljs-number">1</span>);    <span class="hljs-comment">// 删除最后一个char --- O(1)</span><br>.delete(<span class="hljs-keyword">int</span> start, <span class="hljs-keyword">int</span> end);    <span class="hljs-comment">// 删除[start, end)位置的char --- O(n)</span><br>.delete(<span class="hljs-keyword">int</span> start, <span class="hljs-keyword">int</span> end);<span class="hljs-comment">//移除此序列从start到end-1的字符串</span><br>.reverse();    <span class="hljs-comment">// 反转缓存字符串 --- O(n)</span><br>.toString();    <span class="hljs-comment"><code class="language-language-java hljs">String.valueOf(<span class="hljs-keyword">char</span>[] data);<span class="hljs-comment">//返回 char数组的字符串表示形式</span><br>String.valueOf(<span class="hljs-keyword">char</span>[] data,<span class="hljs-keyword">int</span> offset, <span class="hljs-keyword">int</span> count)<span class="hljs-comment">//返回 char 数组参数的特定子数组的字符串表示形式</span><br>String.valueOf(<span class="hljs-keyword">int</span> i);<span class="hljs-comment">//返回 int 参数的字符串表示形式</span><br></code></pre><br> <p>string转换为其他类型</p><br> <pre><code class="language-java hljs">String sInt = <span class="hljs-string">"123"</span>;<br><span class="hljs-keyword">int</span> s = Integer.parseInt(sInt);<br><span class="hljs-keyword">long</span> ls = Long.parseLong(sInt);<br><span class="hljs-keyword">char</span>[] c = s.toCharArray();<br></code></pre><br> <h2 id="stringbuilder">stringbuilder</h2><br> <p>非线程安全</p><br> <p>方法: append, charAt, length, setCharAt, insert, deleteCharAt, delete, reverse, toString</p><br> <pre><code class="language-java hljs">StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();<br>StringBuilder sb = StringBuilder(String str);<span class="hljs-comment">//构建一个值为str的可变字符串。</span><br>.setCharAt(<span class="hljs-keyword">int</span> index, <span class="hljs-keyword">char</span> ch);    <span class="hljs-comment">// 设置index位置的char为ch --- O(1)</span><br>.insert(<span class="hljs-keyword">int</span> offset, String str);    <span class="hljs-comment">// 在offer位置的插入字符串str--- O(m + n)</span><br>.deleteCharAt(<span class="hljs-keyword">int</span> index);    <span class="hljs-comment">// 删除index位置的char --- O(n)</span><br>.deleteCharAt(sb.length() - <span class="hljs-number">1</span>);    <span class="hljs-comment">// 删除最后一个char --- O(1)</span><br>.delete(<span class="hljs-keyword">int</span> start, <span class="hljs-keyword">int</span> end);    <span class="hljs-comment">// 删除[start, end)位置的char --- O(n)</span><br>.delete(<span class="hljs-keyword">int</span> start, <span class="hljs-keyword">int</span> end);<span class="hljs-comment">//移除此序列从start到end-1的字符串</span><br>.reverse();    <span class="hljs-comment">// 反转缓存字符串 --- O(n)</span><br>.toString();    <span class="hljs-comment">// 返回一个与构建起或缓冲器内容相同的字符串 --- O(n)</span>  <p></p><p>append(String str);<span class="hljs-comment">//在此字符串追加str。</span><br>append(StringBuilder str);<span class="hljs-comment">//在此字符串追加str。</span><br>append(<span class="hljs-keyword">char</span>[] str, <span class="hljs-keyword">int</span> offset, <span class="hljs-keyword">int</span> len);<span class="hljs-comment">//将char的子数组追加到此字符串</span><br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br> <p>查找</p><br> <pre class="line-numbers language-language-java hljs">indexOf(String str);<span class="hljs-comment">//返回子字符串第一次出现的索引</span><br>indexOf(String str, <span class="hljs-keyword">int</span> fromIndex);<span class="hljs-comment"><code class="language-language-java hljs">indexOf(String str);<span class="hljs-comment">//返回子字符串第一次出现的索引</span><br>indexOf(String str, <span class="hljs-keyword">int</span> fromIndex);<span class="hljs-comment">//同上，从指定位置查找</span>  <p></p><p>lastIndexOf(String str);<span class="hljs-comment">//返回子字符串最后一次出现的索引</span><br>lastIndexOf(String str, <span class="hljs-keyword">int</span> fromIndex);<span class="hljs-comment">//同上，从指定位置查找</span><br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br> <h1 id="集合">集合</h1><br> <h2 id="map">map</h2><br> <p>方法：put, get, getOrDefault, containsKey, containsValue, keySet, values, isEmpty, size</p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Iterator;<br><span class="hljs-keyword"><code class="language-language-java hljs"><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Iterator;<br><span class="hljs-keyword">import</span> java.util.Map;  <p></p><p><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestMap</span> </span>{<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<br>                Map<String, String> map = <span class="hljs-keyword">new</span> HashMap<String, String>();<br>                map.put(<span class="hljs-string">"1"</span>, <span class="hljs-string">"a"</span>);<br>                map.put(<span class="hljs-string">"2"</span>, <span class="hljs-string">"b"</span>);<br>                map.put(<span class="hljs-string">"3"</span>, <span class="hljs-string">"c"</span>);  </p><pre><code>            <span class="hljs-comment">//最简洁、最通用的遍历方式 </span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> <span class="hljs-keyword">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) {<br>                        System.out.println(entry.getKey() + <span class="hljs-string">" = "</span> + entry.getValue());<br>                }  </p><pre><code>      &lt;span class="hljs-comment"&gt;//.keySet();    // 返回一个Set,这个Set中包含Map中所有的Key --- O(1)&lt;/span&gt;  </code></pre><p> <span class="hljs-keyword">for</span> (Character key : map.keySet()) {<br>             <span class="hljs-comment">// Operate with each key</span><br>  }<br>          <span class="hljs-comment">//.values();    // 返回一个Collection&lt;v&gt;,里面全是对应的每一个value --- O(1)</span><br> <span class="hljs-keyword">for</span> (Integer value : map.values()) {<br>             <span class="hljs-comment">// Operate with each values</span><br>  }<br>        }<br>}<br></p></code></pre><br> <h2 id="queue">queue</h2><br> <p>方法：offer, poll, peek, isEmpty, size</p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-keyword">import</span> java.util.Queue;<br><span class="hljs-keyword"><code class="language-language-java hljs"><span class="hljs-keyword">import</span> java.util.Queue;<br><span class="hljs-keyword">import</span> java.util.concurrent.LinkedBlockingQueue;  <p></p><p><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestQueue</span> </span>{<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<br>                Queue<Integer> q = <span class="hljs-keyword">new</span> LinkedBlockingQueue<Integer>(); <span class="hljs-comment">//初始化</span><br> <span class="hljs-comment">//把把集合如Stack、Set、List等Collection作为参数</span><br>  Set<Integer> s = <span class="hljs-keyword">new</span> HashSet<>();<br>                        Queue<Integer> q = <span class="hljs-keyword">new</span> LinkedList<>(s);<br>                <span class="hljs-comment">//初始化队列 </span><br> <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i < <span class="hljs-number">5</span>; i++) {<br>                        q.offer(i); <span class="hljs-comment">//入队</span><br>  }<br>                System.out.println(<span class="hljs-string">"-------1-----"</span>);<br>                <span class="hljs-comment">//集合方式遍历，元素不会被移除 </span><br> <span class="hljs-keyword">for</span> (Integer x : q) {<br>                        System.out.println(x);<br>                }<br>                System.out.println(<span class="hljs-string">"-------2-----"</span>);<br>                <span class="hljs-comment">//队列方式遍历，元素逐个被移除 </span><br> <span class="hljs-keyword">while</span> (q.peek() != <span class="hljs-keyword">null</span>) {<br>                        System.out.println(q.poll()); <span class="hljs-comment">//出队</span><br>  }<br>        }<br>}<br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br> <h2 id="stack">stack</h2><br> <p>方法：push, pop, peek, isEmpty, size</p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-keyword"><code class="language-language-java hljs"><span class="hljs-keyword">import</span> java.util.Stack;  <p></p><p><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestStack</span> </span>{<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<br>                Stack<Integer> s = <span class="hljs-keyword">new</span> Stack<Integer>();<span class="hljs-comment">//初始化</span><br> <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i < <span class="hljs-number">10</span>; i++) {<br>                        s.push(i); <span class="hljs-comment">//入栈</span><br>  }<br>                <span class="hljs-comment">//集合遍历方式 </span><br> <span class="hljs-keyword">for</span> (Integer x : s) {<br>                        System.out.println(x);<br>                }<br>                System.out.println(<span class="hljs-string">"------1-----"</span>);<br>                <span class="hljs-comment">//栈弹出遍历方式 </span><br><span class="hljs-comment">//                while (s.peek()!=null) {     //不健壮的判断方式，容易抛异常，正确写法是下面的 </span><br> <span class="hljs-keyword">while</span> (!s.isEmpty()) {<br>                        System.out.println(s.pop()); <span class="hljs-comment">//出栈</span><br>  }<br>                System.out.println(<span class="hljs-string">"------2-----"</span>);<br>                <span class="hljs-comment">//错误的遍历方式 </span><br><span class="hljs-comment">//                for (Integer x : s) { </span><br><span class="hljs-comment">//                        System.out.println(s.pop()); </span><br><span class="hljs-comment">//                } </span><br>  }<br>}<br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br> <h2 id="set">set</h2><br> <p>初始化</p><br> <pre class="line-numbers language-language-java hljs">Set&lt;Integer&gt; set = <span class="hljs-keyword">new</span> HashSet&lt;&gt;();<br><span class="hljs-comment">//把集合如Stack、Queue、List等Collection作为参数</span><br>List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;....;<br>Set&lt;Integer&gt; set = <span class="hljs-keyword">new</span> HashSet&lt;&gt;(list);<br></code></pre><br> <p>方法：add, remove, contains, isEmpty, size</p><br> <h2 id="优先队列-priorityqueue-heap">优先队列 PriorityQueue (Heap)</h2><br> <p>底层是一颗数， 以小根堆为例</p><br> <p>初始化</p><br> <pre><code class="language-java hljs"><span class="hljs-comment">//小根堆</span><br>Queue&lt;Integer&gt; minH = <span class="hljs-keyword">new</span> PriorityQueue&lt;&gt;();    <span class="hljs-comment">// 小根堆，默认大小为11 相当于 new PriorityQueue&lt;&gt;(11)</span><br>Queue&lt;Integer&gt; minH = <span class="hljs-keyword">new</span> PriorityQueue&lt;&gt;(<span class="hljs-number">100</span>);  <span class="hljs-comment"><code class="language-language-java hljs">Set&lt;Integer&gt; set = <span class="hljs-keyword">new</span> HashSet&lt;&gt;();<br><span class="hljs-comment">//把集合如Stack、Queue、List等Collection作为参数</span><br>List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;....;<br>Set&lt;Integer&gt; set = <span class="hljs-keyword">new</span> HashSet&lt;&gt;(list);<br></code></pre><br> <p>方法：add, remove, contains, isEmpty, size</p><br> <h2 id="优先队列-priorityqueue-heap">优先队列 PriorityQueue (Heap)</h2><br> <p>底层是一颗数， 以小根堆为例</p><br> <p>初始化</p><br> <pre><code class="language-java hljs"><span class="hljs-comment">//小根堆</span><br>Queue&lt;Integer&gt; minH = <span class="hljs-keyword">new</span> PriorityQueue&lt;&gt;();    <span class="hljs-comment">// 小根堆，默认大小为11 相当于 new PriorityQueue&lt;&gt;(11)</span><br>Queue&lt;Integer&gt; minH = <span class="hljs-keyword">new</span> PriorityQueue&lt;&gt;(<span class="hljs-number">100</span>);  <span class="hljs-comment">// 定义一个默认容量有100的小根堆。在当中增加元素会扩容，只是开始指定大小。不是size，是capacity</span>  <p></p><p><span class="hljs-comment">//大根堆</span><br>Queue<Integer> maxH = <span class="hljs-keyword">new</span> PriorityQueue<>((i1, i2) -> i2 - i1);    <span class="hljs-comment">// 大根堆，默认大小为11 相当于 new PriorityQueue<>(11, (i1, i2) -> i2 - i1)</span><br>Queue<Integer> maxH = <span class="hljs-keyword">new</span> PriorityQueue<>(<span class="hljs-number">100</span>, (i1, i2) -> i2 - i1);    <span class="hljs-comment">// 定义一个默认容量有100的大根堆。在当中增加元素会扩容，只是开始指定大小</span><br></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br> <p>方法：offer, poll, peek, isEmpty, size</p><br> <h1 id="数组">数组</h1><br> <h2 id="静态数组">静态数组</h2><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-comment">//一维</span><br>String[] s = <span class="hljs-keyword">new</span> String[<span class="hljs-number">3</span>];<br><span class="hljs-keyword">char</span>[] b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[]{<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>};<br><span class="hljs-comment">//二维</span><br><span class="hljs-comment">// 二维</span><br><span class="hljs-keyword">int</span>[][] c = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">10</span>][<span class="hljs-number">10</span>];<br></code></pre><br> <p><code>.length</code> <em>记得是属性而不是方法 <code>arr.length</code> 没有()</em></p><br> <p>Arrays.sort从小到大排序</p><br> <pre><code class="language-java hljs">Arrays.sort(<span class="hljs-keyword">int</span>[] arr) <span class="hljs-comment">//从小到大排序</span><br>Arrays.sort(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> fromIndex, <span class="hljs-keyword">int</span> toIndex) <span class="hljs-comment">// [)</span><br>Arrays.sort(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> fromIndex, <span class="hljs-keyword">int</span> toIndex, 比较器); <span class="hljs-comment">//一定是需要泛型</span><br>Arrays.sort(arr, (o1, o2) -&gt; o2 - o1); <span class="hljs-comment">//数组全部 从大到小排序 跟Collections.sort()一样</span><br>Arrays.sort(arr, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, (o1, o2) -&gt; o2 - o1); <span class="hljs-comment"><code class="language-language-java hljs"><span class="hljs-comment">//一维</span><br>String[] s = <span class="hljs-keyword">new</span> String[<span class="hljs-number">3</span>];<br><span class="hljs-keyword">char</span>[] b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[]{<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>};<br><span class="hljs-comment">//二维</span><br><span class="hljs-comment">// 二维</span><br><span class="hljs-keyword">int</span>[][] c = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">10</span>][<span class="hljs-number">10</span>];<br></code></pre><br> <p><code>.length</code> <em>记得是属性而不是方法 <code>arr.length</code> 没有()</em></p><br> <p>Arrays.sort从小到大排序</p><br> <pre><code class="language-java hljs">Arrays.sort(<span class="hljs-keyword">int</span>[] arr) <span class="hljs-comment">//从小到大排序</span><br>Arrays.sort(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> fromIndex, <span class="hljs-keyword">int</span> toIndex) <span class="hljs-comment">// [)</span><br>Arrays.sort(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> fromIndex, <span class="hljs-keyword">int</span> toIndex, 比较器); <span class="hljs-comment">//一定是需要泛型</span><br>Arrays.sort(arr, (o1, o2) -&gt; o2 - o1); <span class="hljs-comment">//数组全部 从大到小排序 跟Collections.sort()一样</span><br>Arrays.sort(arr, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, (o1, o2) -&gt; o2 - o1); <span class="hljs-comment">//从大到小排序，只排序[0, 3)</span>  <p></p><p></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br> <p>Arrays.fill填满一个数组</p><br> <pre class="line-numbers language-language-java hljs"><span class="hljs-keyword">int</span>[] a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">5</span>];<br>Arrays.fill(a, <span class="hljs-number">1</span>);<br></code></pre><br> <p>Arrays.copyOf / arr.clone()复制一个数组(二维数组也可以)</p><br> <pre><code class="language-java hljs"><span class="hljs-keyword">int</span> [] a =  <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [ <span class="hljs-number">5</span> ];<br><span class="hljs-keyword">int</span> [] newA = Array.copyOf(a,  <span class="hljs-number">5</span> );<br><span class="hljs-comment">// or</span><br><span class="hljs-keyword">int</span> [][] a = {{ <span class="hljs-number">1</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> , <span class="hljs-number">3</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> , <span class="hljs-number">3</span> , <span class="hljs-number">4</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> , <span class="hljs-number">3</span> , <span class="hljs-number">4</span> , <span class="hljs-number">5</span> }};  <span class="hljs-comment">// 不是5<em>5，第一维1 2 3 4 5</em></span><br><span class="hljs-keyword">int</span> [][] newa = a.clone();  <span class="hljs-comment">// 不是5<em>5矩阵</em></span><br></code></pre><br> <p>相等比较</p><br> <p><code>System.out.println(Arrays.equals(arr1,arr2))</code></p><br> <blockquote><br> <p>arr1.equals(arr2)比较的是两个对象的地址，不是里面的数，而Arrays.equals重写了equals，所以，这里能比较元素是否相等。</p><br> </blockquote><br> <p>二分查找法找指定元素的索引值（下标）</p><br> <pre><code class="language-java hljs"><span class="hljs-keyword">int</span> []arr = {<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>};<br>System.out.println(Arrays.binarySearch(arr, <span class="hljs-number">20</span>));<span class="hljs-comment">//找不到的话返回-x</span><br></code></pre><br> <p>截取数组：copeOf和copeOfRange</p><br> <pre><code class="language-java hljs"><span class="hljs-keyword">int</span> []arr = {<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>};<br><span class="hljs-keyword">int</span> []arr1 = Arrays.copyOf(arr, <span class="hljs-number">3</span>);<span class="hljs-comment">//截取arr数组的3个元素赋值给姓数组arr1  10 20 30 </span><br><span class="hljs-keyword">int</span> []arr = {<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>};<br><span class="hljs-keyword">int</span> []arr1 = Arrays.copyOfRange(arr,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);<span class="hljs-comment">// [) 10 20</span><br></code></pre><br> <h2 id="动态数组">动态数组</h2><br> <pre><code class="language-java hljs">List&lt;Integer&gt; array = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();    <span class="hljs-comment">// 数组</span><br>List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> LinkedList&lt;&gt;();    <span class="hljs-comment">// 链表</span><br>List&lt;List&lt;Integer&gt;&gt; = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();   <span class="hljs-comment">//二维数组</span><br></code></pre><br> <p>List接口方法:<strong>get, size, add, remove, subList</strong></p><br> <pre><code class="language-java hljs">.get(<span class="hljs-keyword">int</span> index)<br>.size()<br>.add(E e)    <span class="hljs-comment">// 在尾部添加一个元素e --- O(1)</span><br>.add(<span class="hljs-keyword">int</span> index, E e)    <span class="hljs-comment">// 在index位置插一个元素e --- O(n)</span><br>.remove(<span class="hljs-keyword">int</span> index)    <span class="hljs-comment">// 删除位于index的元素，并返回删除元素e</span><br>list.remove(list.size() - <span class="hljs-number">1</span>);<br>.subList(<span class="hljs-keyword">int</span> from, <span class="hljs-keyword">int</span> to)    <span class="hljs-comment">// 相当于返回原数组的一个片段,但不要对其进行改动，改动会影响原数组</span><br></code></pre><br> <p><code>Collections.sort(list);</code> 从小到大排序<br><br> <code>Collections.sort(list, (o1, o2) -&gt; o2 - o1);</code> 从大到小排序， 第二个参数为一个比较器</p><br> <h1 id="math">Math</h1><br> <pre><code class="hljs cpp">Math.max(<span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> b)<br>Math.<span class="hljs-built_in">sqrt</span>(<span class="hljs-keyword">double</span> a)<br>Math.<span class="hljs-built_in">abs</span>(<span class="hljs-keyword">double</span> a) <span class="hljs-comment">//返回一个类型和参数类型一致的绝对值</span><br>Math.<span class="hljs-built_in">pow</span>(<span class="hljs-keyword">double</span> a, <span class="hljs-keyword">double</span> b)<br></code></pre><br> <p>取整</p><br> <pre><code class="hljs cpp">Math.<span class="hljs-built_in">ceil</span>(<span class="hljs-keyword">double</span> x);<span class="hljs-comment">//向上取整</span><br>Math.<span class="hljs-built_in">floor</span>(<span class="hljs-keyword">double</span> x);<span class="hljs-comment">//向下取整</span><br>Math.round(<span class="hljs-keyword">double</span> x);<span class="hljs-comment">//四舍五入</span><br></code></pre><br> <p>随机数，生成一个[0,1)之间的double类型的伪随机数</p><br> <pre><code class="hljs cpp">Math.random()<br><span class="hljs-keyword">int</span> a = (<span class="hljs-keyword">int</span>)(Math.random()b + <span class="hljs-number">1</span>); <span class="hljs-comment">// [1, b]</span><br><span class="hljs-keyword">int</span> a = (<span class="hljs-keyword">int</span>)(Math.random()(b - a + <span class="hljs-number">1</span>) + a);    <span class="hljs-comment"><code class="language-language-java hljs"><span class="hljs-keyword">int</span>[] a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">5</span>];<br>Arrays.fill(a, <span class="hljs-number">1</span>);<br></code></pre><br> <p>Arrays.copyOf / arr.clone()复制一个数组(二维数组也可以)</p><br> <pre><code class="language-java hljs"><span class="hljs-keyword">int</span> [] a =  <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [ <span class="hljs-number">5</span> ];<br><span class="hljs-keyword">int</span> [] newA = Array.copyOf(a,  <span class="hljs-number">5</span> );<br><span class="hljs-comment">// or</span><br><span class="hljs-keyword">int</span> [][] a = {{ <span class="hljs-number">1</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> , <span class="hljs-number">3</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> , <span class="hljs-number">3</span> , <span class="hljs-number">4</span> }, { <span class="hljs-number">1</span> , <span class="hljs-number">2</span> , <span class="hljs-number">3</span> , <span class="hljs-number">4</span> , <span class="hljs-number">5</span> }};  <span class="hljs-comment">// 不是5<em>5，第一维1 2 3 4 5</em></span><br><span class="hljs-keyword">int</span> [][] newa = a.clone();  <span class="hljs-comment">// 不是5<em>5矩阵</em></span><br></code></pre><br> <p>相等比较</p><br> <p><code>System.out.println(Arrays.equals(arr1,arr2))</code></p><br> <blockquote><br> <p>arr1.equals(arr2)比较的是两个对象的地址，不是里面的数，而Arrays.equals重写了equals，所以，这里能比较元素是否相等。</p><br> </blockquote><br> <p>二分查找法找指定元素的索引值（下标）</p><br> <pre><code class="language-java hljs"><span class="hljs-keyword">int</span> []arr = {<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>};<br>System.out.println(Arrays.binarySearch(arr, <span class="hljs-number">20</span>));<span class="hljs-comment">//找不到的话返回-x</span><br></code></pre><br> <p>截取数组：copeOf和copeOfRange</p><br> <pre><code class="language-java hljs"><span class="hljs-keyword">int</span> []arr = {<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>};<br><span class="hljs-keyword">int</span> []arr1 = Arrays.copyOf(arr, <span class="hljs-number">3</span>);<span class="hljs-comment">//截取arr数组的3个元素赋值给姓数组arr1  10 20 30 </span><br><span class="hljs-keyword">int</span> []arr = {<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>};<br><span class="hljs-keyword">int</span> []arr1 = Arrays.copyOfRange(arr,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);<span class="hljs-comment">// [) 10 20</span><br></code></pre><br> <h2 id="动态数组">动态数组</h2><br> <pre><code class="language-java hljs">List&lt;Integer&gt; array = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();    <span class="hljs-comment">// 数组</span><br>List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> LinkedList&lt;&gt;();    <span class="hljs-comment">// 链表</span><br>List&lt;List&lt;Integer&gt;&gt; = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();   <span class="hljs-comment">//二维数组</span><br></code></pre><br> <p>List接口方法:<strong>get, size, add, remove, subList</strong></p><br> <pre><code class="language-java hljs">.get(<span class="hljs-keyword">int</span> index)<br>.size()<br>.add(E e)    <span class="hljs-comment">// 在尾部添加一个元素e --- O(1)</span><br>.add(<span class="hljs-keyword">int</span> index, E e)    <span class="hljs-comment">// 在index位置插一个元素e --- O(n)</span><br>.remove(<span class="hljs-keyword">int</span> index)    <span class="hljs-comment">// 删除位于index的元素，并返回删除元素e</span><br>list.remove(list.size() - <span class="hljs-number">1</span>);<br>.subList(<span class="hljs-keyword">int</span> from, <span class="hljs-keyword">int</span> to)    <span class="hljs-comment">// 相当于返回原数组的一个片段,但不要对其进行改动，改动会影响原数组</span><br></code></pre><br> <p><code>Collections.sort(list);</code> 从小到大排序<br><br> <code>Collections.sort(list, (o1, o2) -&gt; o2 - o1);</code> 从大到小排序， 第二个参数为一个比较器</p><br> <h1 id="math">Math</h1><br> <pre><code class="hljs cpp">Math.max(<span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> b)<br>Math.<span class="hljs-built_in">sqrt</span>(<span class="hljs-keyword">double</span> a)<br>Math.<span class="hljs-built_in">abs</span>(<span class="hljs-keyword">double</span> a) <span class="hljs-comment">//返回一个类型和参数类型一致的绝对值</span><br>Math.<span class="hljs-built_in">pow</span>(<span class="hljs-keyword">double</span> a, <span class="hljs-keyword">double</span> b)<br></code></pre><br> <p>取整</p><br> <pre><code class="hljs cpp">Math.<span class="hljs-built_in">ceil</span>(<span class="hljs-keyword">double</span> x);<span class="hljs-comment">//向上取整</span><br>Math.<span class="hljs-built_in">floor</span>(<span class="hljs-keyword">double</span> x);<span class="hljs-comment">//向下取整</span><br>Math.round(<span class="hljs-keyword">double</span> x);<span class="hljs-comment">//四舍五入</span><br></code></pre><br> <p>随机数，生成一个[0,1)之间的double类型的伪随机数</p><br> <pre><code class="hljs cpp">Math.random()<br><span class="hljs-keyword">int</span> a = (<span class="hljs-keyword">int</span>)(Math.random()b + <span class="hljs-number">1</span>); <span class="hljs-comment">// [1, b]</span><br><span class="hljs-keyword">int</span> a = (<span class="hljs-keyword">int</span>)(Math.random()(b - a + <span class="hljs-number">1</span>) + a);    <span class="hljs-comment">//[a, b]</span><br><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  <p></p> </div>   <div class="clear"></div>   </div>  </div>  <script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"log":false,"model":{"jsonPath":"/live2dw/assets/haruto.model.json"},"display":{"superSample":2,"position":"right","width":150,"height":300,"hOffset":30,"vOffset":-20},"mobile":{"show":true,"scale":0.7},"react":{"opacity":0.8}});</script>  <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】大组会分享④</title>
      <link href="/2021/08/13/zu-hui-fen-xiang-si/"/>
      <url>/2021/08/13/zu-hui-fen-xiang-si/</url>
      
        <content type="html"><![CDATA[<h1 id="组会分享-Deep-Temporal-Point-Processes"><a href="#组会分享-Deep-Temporal-Point-Processes" class="headerlink" title="[组会分享] Deep Temporal Point Processes"></a>[组会分享] Deep Temporal Point Processes</h1><h2 id="A-temporal-point-process-is-a-mathematical-model-for-a-time-series-of-discrete-events-Classic-temporal-point-processes-make-strong-assumptions-which-may-not-reflect-the-reality-and-can-restrict-the-expressive-power-of-the-model-Recently-recurrent-neural-network-based-models-have-been-developed-for-point-processes-and-have-been-found-effective-How-to-combine-deep-learning-with-temporal-point-processes-is-becoming-a-hot-topic-In-this-seminar-I-will-share-some-research-on-these-problem"><a href="#A-temporal-point-process-is-a-mathematical-model-for-a-time-series-of-discrete-events-Classic-temporal-point-processes-make-strong-assumptions-which-may-not-reflect-the-reality-and-can-restrict-the-expressive-power-of-the-model-Recently-recurrent-neural-network-based-models-have-been-developed-for-point-processes-and-have-been-found-effective-How-to-combine-deep-learning-with-temporal-point-processes-is-becoming-a-hot-topic-In-this-seminar-I-will-share-some-research-on-these-problem" class="headerlink" title="A temporal point process is a mathematical model for a time series of discrete events. Classic temporal point processes make strong assumptions which may not reflect the reality and can restrict the expressive power of the model. Recently, recurrent neural network based models have been developed for point processes and have been found effective. How to combine deep learning with temporal point processes is becoming a hot topic. In this seminar, I will share some research on these problem."></a><em>A temporal point process is a mathematical model for a time series of discrete events. Classic temporal point processes make strong assumptions which may not reflect the reality and can restrict the expressive power of the model. Recently, recurrent neural network based models have been developed for point processes and have been found effective. How to combine deep learning with temporal point processes is becoming a hot topic. In this seminar, I will share some research on these problem.</em></h2><p><img src="/2021/08/13/zu-hui-fen-xiang-si/1.JPG?v=1&amp;type=image" alt="1"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/2.JPG?v=1&amp;type=image" alt="2"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/3.JPG?v=1&amp;type=image" alt="3"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/4.JPG?v=1&amp;type=image" alt="4"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/5.JPG?v=1&amp;type=image" alt="5"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/6.JPG?v=1&amp;type=image" alt="6"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/7.JPG?v=1&amp;type=image" alt="7"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/8.JPG?v=1&amp;type=image" alt="8"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/9.JPG?v=1&amp;type=image" alt="9"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/10.JPG?v=1&amp;type=image" alt="10"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/11.JPG?v=1&amp;type=image" alt="11"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/12.JPG?v=1&amp;type=image" alt="12"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/13.JPG?v=1&amp;type=image" alt="13"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/14.JPG?v=1&amp;type=image" alt="14"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/15.JPG?v=1&amp;type=image" alt="15"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/16.JPG?v=1&amp;type=image" alt="16"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/17.JPG?v=1&amp;type=image" alt="17"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/18.JPG?v=1&amp;type=image" alt="18"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/19.JPG?v=1&amp;type=image" alt="19"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/20.JPG?v=1&amp;type=image" alt="20"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/21.JPG?v=1&amp;type=image" alt="21"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/22.JPG?v=1&amp;type=image" alt="22"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/23.JPG?v=1&amp;type=image" alt="23"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/24.JPG?v=1&amp;type=image" alt="24"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/25.JPG?v=1&amp;type=image" alt="25"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/26.JPG?v=1&amp;type=image" alt="26"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/27.JPG?v=1&amp;type=image" alt="27"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/28.JPG?v=1&amp;type=image" alt="28"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/29.JPG?v=1&amp;type=image" alt="29"><br><img src="/2021/08/13/zu-hui-fen-xiang-si/30.JPG?v=1&amp;type=image" alt="30"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 交流学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嗑盐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】大组会分享③</title>
      <link href="/2021/05/14/zu-hui-fen-xiang-san/"/>
      <url>/2021/05/14/zu-hui-fen-xiang-san/</url>
      
        <content type="html"><![CDATA[<h1 id="组会分享-Federated-Learning-with-Non-IID-Data"><a href="#组会分享-Federated-Learning-with-Non-IID-Data" class="headerlink" title="[组会分享] Federated Learning with Non-IID Data"></a>[组会分享] Federated Learning with Non-IID Data</h1><h2 id="Non-IID-data-is-a-statistical-challenge-of-federated-learning-Existing-decentralized-algorithms-have-reduced-accuracy-on-skewed-data-I-will-introduce-some-recent-research-about-federated-learning-with-Non-IID-data"><a href="#Non-IID-data-is-a-statistical-challenge-of-federated-learning-Existing-decentralized-algorithms-have-reduced-accuracy-on-skewed-data-I-will-introduce-some-recent-research-about-federated-learning-with-Non-IID-data" class="headerlink" title="Non-IID data is a statistical challenge of federated learning. Existing decentralized algorithms have reduced accuracy on skewed data. I will introduce some recent research about federated learning with Non-IID data."></a><em>Non-IID data is a statistical challenge of federated learning. Existing decentralized algorithms have reduced accuracy on skewed data. I will introduce some recent research about federated learning with Non-IID data.</em></h2><p><img src="/2021/05/14/zu-hui-fen-xiang-san/1.JPG?v=1&amp;type=image" alt="1"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/2.JPG?v=1&amp;type=image" alt="2"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/3.JPG?v=1&amp;type=image" alt="3"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/4.JPG?v=1&amp;type=image" alt="4"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/5.JPG?v=1&amp;type=image" alt="5"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/6.JPG?v=1&amp;type=image" alt="6"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/7.JPG?v=1&amp;type=image" alt="7"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/8.JPG?v=1&amp;type=image" alt="8"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/9.JPG?v=1&amp;type=image" alt="9"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/10.JPG?v=1&amp;type=image" alt="10"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/11.JPG?v=1&amp;type=image" alt="11"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/12.JPG?v=1&amp;type=image" alt="12"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/13.JPG?v=1&amp;type=image" alt="13"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/14.JPG?v=1&amp;type=image" alt="14"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/15.JPG?v=1&amp;type=image" alt="15"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/16.JPG?v=1&amp;type=image" alt="16"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/17.JPG?v=1&amp;type=image" alt="17"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/18.JPG?v=1&amp;type=image" alt="18"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/19.JPG?v=1&amp;type=image" alt="19"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/20.JPG?v=1&amp;type=image" alt="20"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/21.JPG?v=1&amp;type=image" alt="21"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/22.JPG?v=1&amp;type=image" alt="22"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/23.JPG?v=1&amp;type=image" alt="23"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/24.JPG?v=1&amp;type=image" alt="24"><br><img src="/2021/05/14/zu-hui-fen-xiang-san/25.JPG?v=1&amp;type=image" alt="25"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 交流学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嗑盐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>惊喜开启指南</title>
      <link href="/2021/01/09/surprise/"/>
      <url>/2021/01/09/surprise/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>晓莉大宝贝，这是乖乖为你准备的情人节惊喜指南。首先说明，这不是惊喜，这是打开惊喜的钥匙。至于为什么我要这么做呢？因为我知道宝贝等不到情人节那一天，就忍不住想要打开惊喜。所以，乖乖在这里设置了一道密码开关，只有情人节当天宝贝才能看到这一份惊喜哦O(∩_∩)O哈哈~<br><img src="/2021/01/09/surprise/cover.jpg?v=1&amp;type=image" alt="这是哪个大宝贝？？？"></p><a id="more"></a><h2 id="惊喜开启指南"><a href="#惊喜开启指南" class="headerlink" title="惊喜开启指南"></a>惊喜开启指南</h2><h3 id="第一步：打开我们的照片墙😋"><a href="#第一步：打开我们的照片墙😋" class="headerlink" title="第一步：打开我们的照片墙😋"></a>第一步：打开我们的照片墙😋</h3><p>请宝贝用<strong>电脑</strong>打开浏览器，访问我的个人网站：yangminghong.top<br><img src="/2021/01/09/surprise/web.png?v=1&amp;type=image" alt="访问我的个人网站：yangminghong.top"></p><h3 id="第二步：进入“小时光”🤪"><a href="#第二步：进入“小时光”🤪" class="headerlink" title="第二步：进入“小时光”🤪"></a>第二步：进入“小时光”🤪</h3><p>宝贝有没有发现导航栏上的“小时光”板块！？那是我们的相遇相识相知的纪念。<br><img src="/2021/01/09/surprise/album.png?v=1&amp;type=image" alt="进入我的照片墙"></p><h3 id="第三步：点击韩美丽的专属相册😚"><a href="#第三步：点击韩美丽的专属相册😚" class="headerlink" title="第三步：点击韩美丽的专属相册😚"></a>第三步：点击韩美丽的专属相册😚</h3><p>呐呐~~，就是下面这个小可爱！！！O(∩_∩)O<br><img src="/2021/01/09/surprise/gallery.png?v=1&amp;type=image" alt="访问我们的私密相册"></p><h3 id="第五步：输入密码访问哦-▽-🤗"><a href="#第五步：输入密码访问哦-▽-🤗" class="headerlink" title="第五步：输入密码访问哦~(*^▽^*)~🤗"></a>第五步：输入密码访问哦~(*^▽^*)~🤗</h3><p>因为是我们的私密相册，所以需要输入我俩的生日号码才能芝麻开门哦~密码是<strong>宝贝生日</strong>加<strong>我的生日</strong>：<strong>1999022619951113</strong><br><img src="/2021/01/09/surprise/password.png?v=1&amp;type=image" alt="输入密码访问哦！"></p><h3 id="第六步：-惊喜藏在里面，宝贝自己仔细找找哦-我相信，以宝贝的聪明才智，一定能发现彩蛋的哦😊"><a href="#第六步：-惊喜藏在里面，宝贝自己仔细找找哦-我相信，以宝贝的聪明才智，一定能发现彩蛋的哦😊" class="headerlink" title="第六步： 惊喜藏在里面，宝贝自己仔细找找哦~  我相信，以宝贝的聪明才智，一定能发现彩蛋的哦😊"></a>第六步： 惊喜藏在里面，宝贝自己<strong>仔细找找</strong>哦~  我相信，以宝贝的聪明才智，一定能发现彩蛋的哦😊</h3><p><img src="/2021/01/09/surprise/66.jpg?v=1&amp;type=image" alt="放个宝贝美照压压惊"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 特别礼物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Valentine&#39;s Day </tag>
            
            <tag> Surprise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】大组会分享②</title>
      <link href="/2020/11/17/zu-hui-fen-xiang-er/"/>
      <url>/2020/11/17/zu-hui-fen-xiang-er/</url>
      
        <content type="html"><![CDATA[<h1 id="组会分享-An-introduction-to-few-shot-time-series-prediction"><a href="#组会分享-An-introduction-to-few-shot-time-series-prediction" class="headerlink" title="[组会分享] An introduction to few-shot time series prediction"></a>[组会分享] An introduction to few-shot time series prediction</h1><h2 id="Time-Series-Regression-TSR-and-Classification-TSC-are-both-fundamental-tasks-for-time-series-analysis-But-there-are-not-sufficient-data-in-target-tasks-and-traditional-models-perform-not-very-well-Meanwhile-few-shot-learning-FSL-aims-to-solve-these-challenges-In-this-seminar-I-will-introduce-some-TSR-and-TSC-algorithms-based-on-FSL-which-may-bring-us-some-ideas-and-inspirations"><a href="#Time-Series-Regression-TSR-and-Classification-TSC-are-both-fundamental-tasks-for-time-series-analysis-But-there-are-not-sufficient-data-in-target-tasks-and-traditional-models-perform-not-very-well-Meanwhile-few-shot-learning-FSL-aims-to-solve-these-challenges-In-this-seminar-I-will-introduce-some-TSR-and-TSC-algorithms-based-on-FSL-which-may-bring-us-some-ideas-and-inspirations" class="headerlink" title="Time Series Regression (TSR) and Classification (TSC) are both fundamental tasks for time series analysis. But there are not sufficient data in target tasks and traditional models perform not very well. Meanwhile, few-shot learning (FSL) aims to solve these challenges. In this seminar, I will introduce some TSR and TSC algorithms based on FSL which may bring us some ideas and inspirations."></a><em>Time Series Regression (TSR) and Classification (TSC) are both fundamental tasks for time series analysis. But there are not sufficient data in target tasks and traditional models perform not very well. Meanwhile, few-shot learning (FSL) aims to solve these challenges. In this seminar, I will introduce some TSR and TSC algorithms based on FSL which may bring us some ideas and inspirations.</em></h2><p><img src="/2020/11/17/zu-hui-fen-xiang-er/1.jpg?v=1&amp;type=image" alt="1"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/2.JPG?v=1&amp;type=image" alt="2"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/3.JPG?v=1&amp;type=image" alt="3"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/4.JPG?v=1&amp;type=image" alt="4"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/5.JPG?v=1&amp;type=image" alt="5"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/6.JPG?v=1&amp;type=image" alt="6"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/7.JPG?v=1&amp;type=image" alt="7"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/8.JPG?v=1&amp;type=image" alt="8"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/9.JPG?v=1&amp;type=image" alt="9"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/10.JPG?v=1&amp;type=image" alt="10"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/11.JPG?v=1&amp;type=image" alt="11"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/12.JPG?v=1&amp;type=image" alt="12"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/13.JPG?v=1&amp;type=image" alt="13"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/14.JPG?v=1&amp;type=image" alt="14"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/15.JPG?v=1&amp;type=image" alt="15"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/16.JPG?v=1&amp;type=image" alt="16"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/17.JPG?v=1&amp;type=image" alt="17"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/18.JPG?v=1&amp;type=image" alt="18"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/19.JPG?v=1&amp;type=image" alt="19"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/20.JPG?v=1&amp;type=image" alt="20"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/21.JPG?v=1&amp;type=image" alt="21"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/22.JPG?v=1&amp;type=image" alt="22"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/23.JPG?v=1&amp;type=image" alt="23"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/24.JPG?v=1&amp;type=image" alt="24"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/25.JPG?v=1&amp;type=image" alt="25"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/26.JPG?v=1&amp;type=image" alt="26"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/27.JPG?v=1&amp;type=image" alt="27"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/28.JPG?v=1&amp;type=image" alt="28"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/29.JPG?v=1&amp;type=image" alt="29"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/30.JPG?v=1&amp;type=image" alt="30"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/31.JPG?v=1&amp;type=image" alt="31"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/32.JPG?v=1&amp;type=image" alt="32"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/33.JPG?v=1&amp;type=image" alt="33"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/34.JPG?v=1&amp;type=image" alt="34"><br><img src="/2020/11/17/zu-hui-fen-xiang-er/35.JPG?v=1&amp;type=image" alt="35"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 交流学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嗑盐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习】大组会分享①</title>
      <link href="/2020/08/28/zu-hui-fen-xiang-yi/"/>
      <url>/2020/08/28/zu-hui-fen-xiang-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="组会分享-Some-Advances-about-Few-Shot-Learning"><a href="#组会分享-Some-Advances-about-Few-Shot-Learning" class="headerlink" title="[组会分享] Some Advances about Few-Shot Learning"></a>[组会分享] Some Advances about Few-Shot Learning</h1><h2 id="Motivation-Few-Shot-Learning-is-a-branch-of-machine-learning-It-can-rapidly-generalize-to-new-tasks-of-limited-supervised-experience-by-turning-to-prior-knowledge-As-a-fundamental-task-in-computer-vision-that-carries-the-promise-of-alleviating-the-need-for-exhaustively-labeled-data-In-this-seminar-I-will-share-some-recent-advances-about-few-shot-learning"><a href="#Motivation-Few-Shot-Learning-is-a-branch-of-machine-learning-It-can-rapidly-generalize-to-new-tasks-of-limited-supervised-experience-by-turning-to-prior-knowledge-As-a-fundamental-task-in-computer-vision-that-carries-the-promise-of-alleviating-the-need-for-exhaustively-labeled-data-In-this-seminar-I-will-share-some-recent-advances-about-few-shot-learning" class="headerlink" title="Motivation: Few-Shot Learning is a branch of machine learning. It can rapidly generalize to new tasks of limited supervised experience by turning to prior knowledge. As a fundamental task in computer vision that carries the promise of alleviating the need for exhaustively labeled data. In this seminar, I will share some recent advances about few-shot learning."></a><em>Motivation: Few-Shot Learning is a branch of machine learning. It can rapidly generalize to new tasks of limited supervised experience by turning to prior knowledge. As a fundamental task in computer vision that carries the promise of alleviating the need for exhaustively labeled data. In this seminar, I will share some recent advances about few-shot learning.</em></h2><p><img src="/2020/08/28/zu-hui-fen-xiang-yi/1.JPG?v=1&amp;type=image" alt="1"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/2.JPG?v=1&amp;type=image" alt="2"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/3.JPG?v=1&amp;type=image" alt="3"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/4.JPG?v=1&amp;type=image" alt="4"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/5.JPG?v=1&amp;type=image" alt="5"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/6.JPG?v=1&amp;type=image" alt="6"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/7.JPG?v=1&amp;type=image" alt="7"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/8.JPG?v=1&amp;type=image" alt="8"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/9.JPG?v=1&amp;type=image" alt="9"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/10.JPG?v=1&amp;type=image" alt="10"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/11.JPG?v=1&amp;type=image" alt="11"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/12.JPG?v=1&amp;type=image" alt="12"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/13.JPG?v=1&amp;type=image" alt="13"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/14.JPG?v=1&amp;type=image" alt="14"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/15.JPG?v=1&amp;type=image" alt="15"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/16.JPG?v=1&amp;type=image" alt="16"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/17.JPG?v=1&amp;type=image" alt="17"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/18.JPG?v=1&amp;type=image" alt="18"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/19.JPG?v=1&amp;type=image" alt="19"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/20.JPG?v=1&amp;type=image" alt="20"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/21.JPG?v=1&amp;type=image" alt="21"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/22.JPG?v=1&amp;type=image" alt="22"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/23.JPG?v=1&amp;type=image" alt="23"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/24.JPG?v=1&amp;type=image" alt="24"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/25.JPG?v=1&amp;type=image" alt="25"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/26.JPG?v=1&amp;type=image" alt="26"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/27.JPG?v=1&amp;type=image" alt="27"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/28.JPG?v=1&amp;type=image" alt="28"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/29.JPG?v=1&amp;type=image" alt="29"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/30.JPG?v=1&amp;type=image" alt="30"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/31.JPG?v=1&amp;type=image" alt="31"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/32.JPG?v=1&amp;type=image" alt="32"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/33.JPG?v=1&amp;type=image" alt="33"><br><img src="/2020/08/28/zu-hui-fen-xiang-yi/34.JPG?v=1&amp;type=image" alt="34"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 交流学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嗑盐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Focus on deep learning and time series forecasting with some resources and code.</title>
      <link href="/2020/08/07/deep-learning-time-series-master/"/>
      <url>/2020/08/07/deep-learning-time-series-master/</url>
      
        <content type="html"><![CDATA[<h1 id="Deep-Learning-Time-Series-Forecasting"><a href="#Deep-Learning-Time-Series-Forecasting" class="headerlink" title="Deep Learning Time Series Forecasting"></a>Deep Learning Time Series Forecasting</h1><p><a href="http://makeapullrequest.com" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRsWelcome"></a></p><p>List of state of the art papers focus on deep learning and resources, code and experiments using deep learning for time series forecasting. Classic methods vs Deep Learning methods, Competitions…</p><h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a><a href="">Table of Contents</a></h2><ul><li><a href="#Papers">Papers</a></li><li><a href="#Conferences">Conferences</a></li><li><a href="#Competitions">Competitions</a></li><li><a href="#Code">Code</a></li><li><a href="#Theory-Resource">Theory-Resource</a></li><li><a href="#Code-Resource">Code Resource</a></li><li><a href="#Datasets">Datasets</a></li></ul><h2 id="Papers"><a href="#Papers" class="headerlink" title="Papers"></a>Papers</h2><h3 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h3><ul><li><p><a href="https://ieeexplore.ieee.org/abstract/document/9149573" target="_blank" rel="noopener">Cold-Start Promotional Sales Forecasting through Gradient Boosted-based Contrastive Explanations</a></p><ul><li>Carlos Aguilar-Palacios, et al.</li><li>[<a href="https://github.com/CarlitosDev/contrastiveExplanation/tree/master/contrastiveRegressor" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2007.15541.pdf" target="_blank" rel="noopener">Anomaly Detection at Scale: The Case for Deep Distributional Time Series Models</a></p><ul><li>Fadhel Ayed, et al.</li><li><code>Amazon Research</code></li><li>[<a href="https://github.com/awslabs/gluon-ts/tree/distribution_anomaly_detection/distribution_anomaly_detection" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://staff.fnwi.uva.nl/m.derijke/wp-content/papercite-data/pdf/ariannezhad-2020-demand.pdf" target="_blank" rel="noopener">Demand Forecasting in the Presence of Privileged Information</a></p><ul><li>Mozhdeh Ariannezhad, et al.</li><li>[<a href="https://github.com/mzhariann/PIANN" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://www.researchgate.net/publication/342976923_Seasonal_Self-evolving_Neural_Networks_Based_Short-term_Wind_Farm_Generation_Forecast" target="_blank" rel="noopener">Seasonal Self-evolving Neural Networks Based Short-term Wind Farm Generation Forecast</a></p><ul><li>Yunchuan Liu, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2007.09577.pdf" target="_blank" rel="noopener">Distributed ARIMA Models for Ultra-long Time Series</a> <strong>Spark</strong></p><ul><li>Xiaoqian Wang, et al.</li><li>[<a href="https://github.com/xqnwang/darima" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/abs/2003.03778" target="_blank" rel="noopener">Adversarial Attacks on Probabilistic Autoregressive Forecasting Models</a></p><ul><li>Raphaël Dang-Nhu, et al.</li><li>[<a href="https://github.com/eth-sri/probabilistic-forecasts-attacks" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2007.03568.pdf" target="_blank" rel="noopener">Superiority of Simplicity: A Lightweight Model for Network Device Workload Prediction</a> <strong>LSTM application</strong></p><ul><li>Alexander Acker, et al.</li><li>[<a href="https://github.com/citlab/fed_challenge" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2007.02842.pdf" target="_blank" rel="noopener">Adaptive Graph Convolutional Recurrent Network for Traffic Forecasting</a></p><ul><li>Lei Bai, et al.</li><li>[<a href="https://github.com/LeiBAI/AGCRN" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9115645" target="_blank" rel="noopener">Dynamic Multi-Scale Convolutional Neural Network for Time Series Classification</a></p><ul><li>BIN QIAN, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://germain-forestier.info/publis/ijcnn2020.pdf" target="_blank" rel="noopener">Neural Architecture Search for Time Series Classification</a></p><ul><li>Hojjat Rakhshani, et al.</li><li>[<a href="https://github.com/ML-MHs/IJCNN2020" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2006.13707.pdf" target="_blank" rel="noopener">Frequentist Uncertainty in Recurrent Neural Networks via Blockwise Influence Functions</a></p><ul><li>Ahmed M. Alaa and Mihaela van der Schaar.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2006.12672.pdf" target="_blank" rel="noopener">Time Series Regression</a></p><ul><li>Chang Wei Tan, et al.</li><li>[<a href="https://github.com/ChangWeiTan/TSRegression" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://odr.chalmers.se/bitstream/20.500.12380/300824/1/Master_s_Thesis_Johan_Ramne_.pdf" target="_blank" rel="noopener">Forecasting Supplier Delivery Performance with Recurrent Neural Networks</a></p><ul><li>Johan Ramne</li><li>Master Thesis.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2006.10119.pdf" target="_blank" rel="noopener">Markovian RNN: An Adaptive Time Series Prediction Network with HMM-based Switching for Nonstationary Environments</a></p><ul><li>Fatih Ilhan, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://dl.acm.org/doi/pdf/10.1145/3399579.3399869" target="_blank" rel="noopener">Resilient Neural Forecasting Systems</a></p><ul><li>Michael Bohlke-Schneider, et al.</li><li><code>Amazon Research</code></li><li>Code not yet.</li></ul></li><li><p><a href="http://openaccess.thecvf.com/content_CVPRW_2020/papers/w66/Graber_Dynamic_Neural_Relational_Inference_for_Forecasting_Trajectories_CVPRW_2020_paper.pdf" target="_blank" rel="noopener">Dynamic Neural Relational Inference for Forecasting Trajectories</a></p><ul><li>Colin Graber and Alexander Schwing</li><li><code>CVPR 2020</code></li><li>[<a href="https://github.com/cgraber/cvpr_dNRI" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://onlinelibrary.wiley.com/doi/abs/10.1111/tgis.12644" target="_blank" rel="noopener">Traffic transformer: Capturing the continuity and periodicity of time series for traffic forecasting</a></p><ul><li>Ling Cai, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2006.06553.pdf" target="_blank" rel="noopener">Stanza: A Nonlinear State Space Model for Probabilistic Inference in Non-Stationary Time Series</a></p><ul><li>Anna K. Yanchenko and Sayan Mukherjee.</li><li>Code not yet.</li></ul></li><li><p><a href="https://www.scirp.org/journal/paperinformation.aspx?paperid=100727" target="_blank" rel="noopener">Neuroevolution Strategy for Time Series Prediction</a></p><ul><li>George Naskos, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://www.mdpi.com/2076-3417/10/11/3880" target="_blank" rel="noopener">COVID-19: A Comparison of Time Series Methods to Forecast Percentage of Active Cases per Population</a></p><ul><li>Vasilis Papastefanopoulos, et al.</li><li>[<a href="https://github.com/ML-Upatras/COVID-19-A-comparison-of-time-series-methods-foractive-cases-forecasting" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2006.00630.pdf" target="_blank" rel="noopener">A machine learning approach for forecasting hierarchical time series</a></p><ul><li>Paolo Mancuso, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="http://www.jethrobrowell.com/uploads/4/5/4/0/45405281/probcast___pmaps2020.pdf" target="_blank" rel="noopener">ProbCast: Open-source Production, Evaluation and Visualisation of Probabilistic Forecasts</a></p><ul><li>Jethro Browell and Ciaran Gilbert.</li><li>[<a href="https://github.com/jbrowell/ProbCast" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://ecole-itn.eu/wp-content/uploads/2020/05/IJCNN2020_Sibghat_Final.pdf" target="_blank" rel="noopener">Exploring Clinical Time Series Forecasting with Meta-Features in Variational Recurrent Models</a><strong>meta-learning</strong></p><ul><li>Sibghat Ullah, et al.</li><li>[<a href="https://github.com/SibghatUllah13/VRNNs-for-Clinical-Time-Series-Forecasting" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://spj.sciencemag.org/plantphenomics/2020/4261965/" target="_blank" rel="noopener">Semisupervised Deep State-Space Model for Plant Growth Modeling</a></p><ul><li>S. Shibata, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2005.11633.pdf" target="_blank" rel="noopener">EFFECTIVE AND EFFICIENT COMPUTATION WITH MULTIPLE-TIMESCALE SPIKING RECURRENT NEURAL NETWORKS</a></p><ul><li>Bojian Yin, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://www.sciencedirect.com/science/article/abs/pii/S0925231220300606" target="_blank" rel="noopener">Multivariate time series forecasting via attention-based encoder–decoder framework</a></p><ul><li>Shengdong Du, et al.</li><li><code>Neurocomputing</code></li><li>Code not yet.</li></ul></li><li><p><a href="https://www.mdpi.com/1424-8220/20/10/2832" target="_blank" rel="noopener">A Novel LSTM for Multivariate Time Series with Massive Missingness</a></p><ul><li>Nazanin Fouladgar and Kary Främling.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1905.10437.pdf" target="_blank" rel="noopener">N-BEATS: NEURAL BASIS EXPANSION ANALYSIS FOR INTERPRETABLE TIME SERIES FORECASTING</a><code>ICLR 2020</code></p><ul><li>Boris N. Oreshkin, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2005.10698.pdf" target="_blank" rel="noopener">How to Learn from Others: Transfer Machine Learning with Additive Regression Models to Improve Sales Forecasting</a><strong>good new approach</strong></p><ul><li>Robin Hirt, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://www.medrxiv.org/content/medrxiv/early/2020/05/22/2020.05.20.20103200.full.pdf" target="_blank" rel="noopener">The Hybrid Forecasting Method SVR-ESAR for Covid-19</a></p><ul><li>Juan Frausto Solis, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9094173" target="_blank" rel="noopener">Forecasting the Short-Term Metro Ridership With Seasonal and Trend Decomposition Using Loess and LSTM Neural Networks</a></p><ul><li>DEWANG CHEN, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2005.10111.pdf" target="_blank" rel="noopener">The Effectiveness of Discretization in Forecasting: An Empirical Study on Neural Time Series Models</a></p><ul><li>Stephan Rabanser, et al.</li><li><code>AWS AI Labs</code></li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2005.08067.pdf" target="_blank" rel="noopener">FORECASTING WITH SKTIME: DESIGNING SKTIME’S NEW FORECASTING API AND APPLYING IT TO REPLICATE AND EXTEND THE M4 STUDY</a></p><ul><li>Markus Löning and Franz J. Király.</li><li>[<a href="https://github.com/sktime/sktime-dl" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1909.04293.pdf" target="_blank" rel="noopener">LSTM-MSNet: Leveraging Forecasts on Sets of Related Time Series with Multiple Seasonal Patterns</a></p><ul><li>Kasun Bandara, et al.</li><li>[<a href="https://github.com/kasungayan/LSTMMSNet" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2005.06978.pdf" target="_blank" rel="noopener">A NETWORK-BASED TRANSFER LEARNING APPROACH TO IMPROVE SALES FORECASTING OF NEW PRODUCTS</a></p><ul><li>Karb, Tristan, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://dl.acm.org/doi/10.1145/3357384.3358132" target="_blank" rel="noopener">DSANet: Dual Self-Attention Network for Multivariate Time Series Forecasting</a> <strong>Good new approach</strong></p><ul><li>Siteng Huang, et al.</li><li>[<a href="https://github.com/bighuang624/DSANet" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://fruct.org/publications/fruct26/files/Moro.pdf" target="_blank" rel="noopener">An Approach for Complex Event Streams Processing and Forecasting</a></p><ul><li>Viktor Morozov, Mikhail Petrovskiy.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2005.03297.pdf" target="_blank" rel="noopener">Knowledge Enhanced Neural Fashion Trend Forecasting</a></p><ul><li>Yunshan Ma, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://link.springer.com/chapter/10.1007/978-3-030-47358-7_30" target="_blank" rel="noopener">Augmented Out-of-Sample Comparison Method for Time Series Forecasting Techniques</a></p><ul><li>Igor Ilic, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://ieeexplore.ieee.org/abstract/document/9081393" target="_blank" rel="noopener">Enhancing High Frequency Technical Indicators Forecasting Using Shrinking Deep Neural Networks</a> <code>ICIM 2020</code></p><ul><li>Xiaoyu Tan, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.13408.pdf" target="_blank" rel="noopener">Time Series Forecasting With Deep Learning: A Survey</a> <strong>Good summary</strong></p><ul><li>Bryan Lim and Stefan Zohren</li><li>Survey</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.10240.pdf" target="_blank" rel="noopener">Neural forecasting: Introduction and literature overview</a></p><ul><li>Konstantinos Benidis, et al.</li><li>Not is a overview.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.09760.pdf" target="_blank" rel="noopener">Take a NAP: Non-Autoregressive Prediction for Pedestrian Trajectories</a></p><ul><li>Hao Xue, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.08492.pdf" target="_blank" rel="noopener">Orbit: Probabilistic Forecast with Exponential Smoothing</a></p><ul><li>Edwin Ng, et a.</li><li>Code is available upon request.</li></ul></li><li><p><a href="https://www.sciencedirect.com/science/article/abs/pii/S0169207020300224" target="_blank" rel="noopener">Daily retail demand forecasting using machine learning with emphasis on calendric special days</a></p><ul><li>Jakob Huber and Heiner Stuckenschmidt.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.03398.pdf" target="_blank" rel="noopener">FORECASTING IN MULTIVARIATE IRREGULARLY SAMPLED TIME SERIES WITH MISSING VALUES</a></p><ul><li>Shivam Srivastava, et al.</li><li>Code not yet.</li><li><strong>IBM Almaden Research Center</strong>.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2001.10098.pdf" target="_blank" rel="noopener">Multi-label Prediction in Time Series Data using Deep Neural Networks</a></p><ul><li>Wenyu Zhang, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.02441.pdf" target="_blank" rel="noopener">TraDE: Transformers for Density Estimation</a></p><ul><li>Rasool Fakoor, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2004.01498.pdf" target="_blank" rel="noopener">Deep Probabilistic Modelling of Price Movements for High-Frequency Trading</a></p><ul><li>Ye-Sheen Lim and Denise Gorse.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2003.14162.pdf" target="_blank" rel="noopener">Deep State Space Models for Nonlinear System Identification</a></p><ul><li>Daniel Gedon, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2003.12162.pdf" target="_blank" rel="noopener">Zero-shot and few-shot time series forecasting with ordinal regression recurrent neural networks</a></p><ul><li>Bernardo Perez Orozco and  Stephen J. Roberts.</li><li>[<a href="https://github.com/bperezorozco/ordinal_tsf" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/2003.12194.pdf" target="_blank" rel="noopener">Financial Time Series Representation Learning</a></p><ul><li>Philippe Chatigny, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2003.10551.pdf" target="_blank" rel="noopener">G-Net: A Deep Learning Approach to G-computation for Counterfactual Outcome Prediction Under Dynamic Treatment Regimes</a></p><ul><li>Rui Li, et al.</li><li><ul><li><code>IBM research and MIT</code></li></ul></li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2003.09779.pdf" target="_blank" rel="noopener">Deep Markov Spatio-Temporal Factorization</a></p><ul><li>Amirreza Farnoosh, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/ecai20hr.pdf" target="_blank" rel="noopener">Harmonic Recurrent Process for Time Series Forecasting</a></p><ul><li>Shao-Qun Zhang and Zhi-Hua Zhou.</li><li>Code not yet.</li></ul></li><li><p><a href="https://ssc.io/pdf/modin711s.pdf" target="_blank" rel="noopener">Elastic Machine Learning Algorithms in Amazon SageMaker</a></p><ul><li>Edo Liberty, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2002.12478.pdf" target="_blank" rel="noopener">Time Series Data Augmentation for Deep Learning: A Survey</a></p><ul><li>Qingsong Wen, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2002.12135.pdf" target="_blank" rel="noopener">Block Hankel Tensor ARIMA for Multiple Short Time Series Forecasting</a><code>AAAI 2020</code><strong>meta-learning</strong></p><ul><li>QIQUAN SHI, et al.</li><li>[<a href="https://github.com/huawei-noah/BHT-ARIMA" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://www.researchgate.net/publication/339362837_Learnings_from_Kaggle' target=" _blank"="" rel="noopener" s_forecasting_competitions"="">Learnings from Kaggle’s Forecasting Competitions</a></p><ul><li>Casper Solheim Bojer, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://ieeexplore.ieee.org/abstract/document/8999262" target="_blank" rel="noopener">An Industry Case of Large-Scale Demand Forecasting of Hierarchical Components</a></p><ul><li>Rodrigo Rivera-Castro, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2002.06103.pdf" target="_blank" rel="noopener">Multi-variate Probabilistic Time Series Forecasting via Conditioned Normalizing Flows</a></p><ul><li>Kashif Rasul, et al.</li><li>[<a href="https://github.com/zalandoresearch/pytorch-ts" target="_blank" rel="noopener">Code</a>].</li></ul></li><li><p><a href="https://arxiv.org/pdf/2002.04155.pdf" target="_blank" rel="noopener">ForecastNet: A Time-Variant Deep Feed-Forward Neural Network Architecture for Multi-Step-Ahead Time-Series Forecasting</a></p><ul><li>Joel Janek Dabrowski, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://pdfs.semanticscholar.org/810b/dfa0f63f03473be79556b90dc79a88a1f769.pdf" target="_blank" rel="noopener">Anomaly detection for Cybersecurity: time series forecasting and deep learning</a><code>Good review about forecasting</code></p><ul><li>Giordano Colò.</li><li>Code not yet.</li></ul></li><li><p><a href="https://krvarshney.github.io/pubs/BhattacharjyaSGMVS_aaai2020.pdf" target="_blank" rel="noopener">Event-Driven Continuous Time Bayesian Networks</a></p><ul><li>Debarun Bhattacharjya, et al.</li><li><code>Research AI, IBM</code></li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1911.10273.pdf" target="_blank" rel="noopener">Joint Modeling of Local and Global Temporal Dynamics for Multivariate Time Series Forecasting with Missing Values</a><code>AAAI 2020</code></p><ul><li>Xianfeng Tang, et al.</li><li><code>IBM Research, NY</code></li><li>Code not yet.</li></ul></li><li><p><a href="https://ieeexplore.ieee.org/abstract/document/8964133" target="_blank" rel="noopener">Topology-Based Clusterwise Regression for User Segmentation and Demand Forecasting</a></p><ul><li>Rodrigo Rivera-Castro, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://www.sciencedirect.com/science/article/abs/pii/S2210650219301270" target="_blank" rel="noopener">Evolutionary LSTM-FCN networks for pattern classification in industrial processes</a></p><ul><li>Patxi Ortego, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://rd.springer.com/chapter/10.1007/978-3-030-37309-2_10" target="_blank" rel="noopener">Forecasting Multivariate Time-Series Data Using LSTM and Mini-Batches</a></p><ul><li>Athar Khodabakhsh, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://faculty.ist.psu.edu/xzz89/publications/AAAI20.pdf" target="_blank" rel="noopener">Tensorized LSTM with Adaptive Shared Memory for Learning Trends in Multivariate Time Series</a><code>AAAI 2020</code></p><ul><li>Dongkuan Xu, et al.</li><li>[<a href="https://github.com/DerronXu/DeepTrends/tree/master" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><strong><a href="https://arxiv.org/pdf/2001.04050.pdf" target="_blank" rel="noopener">RELATIONAL STATE-SPACE MODEL FOR STOCHASTIC MULTI-OBJECT SYSTEMS</a></strong><code>ICLR 2020</code></p><ul><li>Fan Yang, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/2001.04601.pdf" target="_blank" rel="noopener">For2For: Learning to forecast from forecasts</a></p><ul><li>Zhao, Shi, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1909.08181.pdf" target="_blank" rel="noopener">Self-boosted Time-series Forecasting with Multi-task and Multi-view Learning</a> <code>AAAI 2020</code></p><ul><li>Long H. Nguyen, et al.</li><li>Code not yet</li></ul></li></ul><h3 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h3><ul><li><p><a href="https://dl.acm.org/doi/pdf/10.1145/3292500.3332289" target="_blank" rel="noopener">Forecasting Big Time Series: Theory and Practice</a><code>KDD 2019</code> <strong>Relevant tutorial</strong></p><ul><li>Christos Faloutsos, et al.</li><li>[<a href="https://lovvge.github.io/Forecasting-Tutorial-KDD-2019/" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="http://urban-computing.com/pdf/kdd19-BinWang.pdf" target="_blank" rel="noopener">Deep Uncertainty Quantification: A Machine Learning Approach for Weather Forecasting</a></p><ul><li>Bin Wang, et al.</li><li>[<a href="https://github.com/BruceBinBoxing/Deep_Learning_Weather_Forecasting" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://www.researchgate.net/publication/334556784_A_hybrid_method_of_exponential_smoothing_and_recurrent_neural_networks_for_time_series_forecasting" target="_blank" rel="noopener">A hybrid method of exponential smoothing and recurrent neural networks for time series forecasting</a></p><ul><li>Slawek Smyl</li><li><code>Winning submission of the M4 forecasting competition</code></li><li>[<a href="https://github.com/Mcompetitions/M4-methods/tree/slaweks_ES-RNN/118%20-%20slaweks17" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1905.03806.pdf" target="_blank" rel="noopener">Think Globally, Act Locally: A Deep Neural Network Approach to High-Dimensional Time Series Forecasting</a><code>NeurIPS 2019</code></p><ul><li>Rajat Sen, et al.</li><li><code>Amazon</code></li><li>[<a href="https://github.com/rajatsen91/deepglo" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/abs/1905.03028" target="_blank" rel="noopener">Deep Landscape Forecasting for Real-time Bidding Advertising</a> <code>KDD 2019</code></p><ul><li>Kan Ren, et al.</li><li>[<a href="https://github.com/rk2900/DLF" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1702.03584.pdf" target="_blank" rel="noopener">Similarity Preserving Representation Learning for Time Series Clustering</a></p><ul><li>Qi Lei, et al.</li><li><code>IBM research</code></li><li>[<a href="https://github.com/cecilialeiqi/SPIRAL" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://dl.acm.org/doi/abs/10.1145/3357384.3358132" target="_blank" rel="noopener">DSANet: Dual Self-Attention Network for Multivariate Time Series Forecasting</a></p><ul><li>Siteng Huang, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1904.04912.pdf" target="_blank" rel="noopener">Enhancing Time Series Momentum Strategies Using Deep Neural Networks</a></p><ul><li>Bryan Lim, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://hal.inria.fr/hal-02422148/document" target="_blank" rel="noopener">DYNAMIC TIME LAG REGRESSION: PREDICTING WHAT &amp; WHEN</a></p><ul><li>Mandar Chandorkar, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://papers.nips.cc/paper/8789-time-series-generative-adversarial-networks.pdf" target="_blank" rel="noopener">Time-series Generative Adversarial Networks</a><code>NeurIPS 2019</code></p><ul><li>Jinsung Yoon. et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1912.09363.pdf" target="_blank" rel="noopener">Temporal Fusion Transformers for Interpretable Multi-horizon Time Series Forecasting</a></p><ul><li>Bryan Lim, et al.</li><li><code>Google Research</code></li><li>[<a href="https://github.com/google-research/google-research/tree/master/tft" target="_blank" rel="noopener">Code</a>]</li></ul></li></ul><ul><li><p><a href="https://openreview.net/pdf?id=H1xXYy3VKr" target="_blank" rel="noopener">Deep Amortized Variational Inference for Multivariate Time Series Imputation with Latent Gaussian Process Models</a></p><ul><li>Vincent Fortuin, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1912.01762.pdf" target="_blank" rel="noopener">Deep Physiological State Space Model for Clinical Forecasting</a></p><ul><li>Yuan Xue, et al.</li><li>not yet</li></ul></li><li><p><a href="https://arxiv.org/abs/1911.12436" target="_blank" rel="noopener">AR-Net: A simple Auto-Regressive Neural Network for time-series</a></p><ul><li>Oskar Triebe, et al.</li><li><code>Facebook Research</code></li><li>Code not yet.</li></ul></li><li><p><a href="https://ecole-itn.eu/wp-content/uploads/2019/11/LMID_Sneha_finalversion.pdf" target="_blank" rel="noopener">Learning Time-series Data of Industrial Design Optimization using Recurrent Neural Networks</a></p><ul><li>Sneha Saha, et al.</li><li><code>Honda Research Institute Europe GmbH</code></li><li>Code not yet.</li></ul></li></ul><ul><li><p><a href="https://arxiv.org/abs/1812.01767" target="_blank" rel="noopener">RobustSTL: A Robust Seasonal-Trend Decomposition Algorithm for Long Time Series</a></p><ul><li>Qingsong Wen, et al.</li><li>[<a href="https://github.com/LeeDoYup/RobustSTL" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1911.05035.pdf" target="_blank" rel="noopener">Constructing Gradient Controllable Recurrent Neural Networks Using Hamiltonian Dynamics</a></p><ul><li>Konstantin Rusch, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://openreview.net/pdf?id=rygjcsR9Y7" target="_blank" rel="noopener">SOM-VAE: Interpretable Discrete Representation Learning on Time Series</a><code>ICLR 2019</code></p><ul><li>Vincent Fortuin, et al.</li><li>[<a href="https://github.com/ratschlab/SOM-VAE" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/abs/1901.10738" target="_blank" rel="noopener">Unsupervised Scalable Representation Learning for Multivariate Time Series</a><code>NeurIPS 2019</code>  <a href="https://nips.cc/Conferences/2019/Schedule?showParentSession=15627" target="_blank" rel="noopener">In Applications – Time Series Analysis </a></p><ul><li>Jean-Yves Franceschi, et al.</li><li>[<a href="https://github.com/White-Link/UnsupervisedScalableRepresentationLearningTimeSeries" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1905.13570v1.pdf" target="_blank" rel="noopener">Factorized Inference in Deep Markov Models for Incomplete Multimodal Time Series</a></p><ul><li>Zhi-Xuan Tan, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://arxiv.org/pdf/1910.09620.pdf" target="_blank" rel="noopener">You May Not Need Order in Time Series Forecasting</a></p><ul><li>Yunkai Zhang, et al.</li><li>Code not yet</li></ul><p align="center"><img src="https://github.com/Alro10/deep-learning-time-series/blob/master/YMN_order.png" alt="alt text" width="80%" height="60%"></p></li><li><p><a href="https://arxiv.org/pdf/1909.09020.pdf" target="_blank" rel="noopener">Shape and Time Distortion Loss for Training Deep Time Series Forecasting Models</a><code>NeurIPS2019</code></p><ul><li>Vincent Le Guen and Nicolas Thome.</li><li>[<a href="https://github.com/vincent-leguen/STDL" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1910.07927.pdf" target="_blank" rel="noopener">Dynamic Local Regret for Non-convex Online Forecasting</a><code>NeurIPS 2019</code></p><ul><li>Sergul Aydore, et al.</li><li>[<a href="https://github.com/Timbasa/Dynamic_Local_Regret_for_Non-convex_Online_Forecasting_NeurIPS2019" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1910.06366.pdf" target="_blank" rel="noopener">Bayesian Temporal Factorization for Multidimensional Time Series Prediction</a></p><ul><li>Xinyu Chen, and Lijun Sun</li><li>[<a href="https://github.com/xinychen/transdim" target="_blank" rel="noopener">Code and data</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1910.03906.pdf" target="_blank" rel="noopener">Probabilistic sequential matrix factorization</a></p><ul><li>Ömer Deniz Akyildiz, et al.</li><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/pdf/1910.03818.pdf" target="_blank" rel="noopener">Sequential VAE-LSTM for Anomaly Detection on Time Series</a></p><ul><li>Run-Qing Chen, et al.</li><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/pdf/1910.03002.pdf" target="_blank" rel="noopener">High-Dimensional Multivariate Forecasting with Low-Rank Gaussian Copula Processes</a><code>NeurIPS 2019</code></p><ul><li>David Salinas, et al.</li><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/pdf/1901.08096.pdf" target="_blank" rel="noopener">Recurrent Neural Filters: Learning Independent Bayesian Filtering Steps for Time Series Prediction</a></p><ul><li>Bryan Lim, et al.</li><li>Code not yet</li></ul></li><li><p><a href="https://ieeexplore.ieee.org/abstract/document/8855402" target="_blank" rel="noopener">LHCnn: A Novel Efficient Multivariate Time Series Prediction Framework Utilizing Convolutional Neural Networks</a></p><ul><li>Chengxi Liu, et al.</li><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/pdf/1909.07872.pdf" target="_blank" rel="noopener">SKTIME: A UNIFIED INTERFACE FOR MACHINE LEARNING WITH TIME SERIE</a></p><ul><li>[<a href="https://github.com/alan-turing-institute/sktime" target="_blank" rel="noopener">Code</a>]</li></ul></li></ul><ul><li><p><strong><a href="https://arxiv.org/pdf/1909.00590.pdf" target="_blank" rel="noopener">Recurrent Neural Networks for Time Series Forecasting: Current Status and Future Directions</a></strong></p><ul><li>[<a href="https://github.com/HansikaPH/time-series-forecasting" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://www.researchgate.net/profile/Antonio_Parmezan/publication/330742498_Evaluation_of_statistical_and_machine_learning_models_for_time_series_prediction_Identifying_the_state-of-the-art_and_the_best_conditions_for_the_use_of_each_model/links/5c558145a6fdccd6b5dc3e2e/Evaluation-of-statistical-and-machine-learning-models-for-time-series-prediction-Identifying-the-state-of-the-art-and-the-best-conditions-for-the-use-of-each-model.pdf" target="_blank" rel="noopener">Evaluation of statistical and machine learning models for time series prediction: Identifying the state-of-the-art and the best conditions for the use of each model</a></p><ul><li>Antonio Rafael Sabino Parmezan, Vinicius M. A. Souza and Gustavo E. A. P. A. Batista. USP</li></ul></li></ul><ul><li><p><a href="https://www.ijcai.org/proceedings/2019/0932.pdf" target="_blank" rel="noopener">Explainable Deep Neural Networks for Multivariate Time Series Predictions</a> <code>IJCAI 2019</code></p><ul><li>Roy Assaf and Anika Schumann.</li><li><code>IBM Research, Zurich</code></li><li>Code not yet</li></ul></li></ul><ul><li><p><a href="https://www.ijcai.org/proceedings/2019/0378.pdf" target="_blank" rel="noopener">Outlier Detection for Time Series with Recurrent Autoencoder Ensembles</a> <code>IJCAI 2019</code></p><ul><li>[<a href="https://github.com/tungk/OED" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://www.ijcai.org/proceedings/2019/0402.pdf" target="_blank" rel="noopener">Learning Interpretable Deep State Space Model for Probabilistic Time Series Forecasting</a> <code>IJCAI 2019</code></p><ul><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/pdf/1905.12417.pdf" target="_blank" rel="noopener">Deep Factors for Forecasting</a> <code>ICML 2019</code></p><ul><li>Yuyang Wang, et al.</li><li>Code not yet</li></ul></li><li><p><a href="http://proceedings.mlr.press/v89/gasthaus19a/gasthaus19a.pdf" target="_blank" rel="noopener">Probabilistic Forecasting with Spline Quantile Function RNNs</a></p><ul><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/abs/1809.04356" target="_blank" rel="noopener">Deep learning for time series classification: a review</a></p><ul><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/abs/1801.04503" target="_blank" rel="noopener">Multivariate LSTM-FCNs for Time Series Classification</a></p><ul><li>Code not yet</li></ul></li><li><p><a href="https://www.sciencedirect.com/science/article/pii/S0169207019301529" target="_blank" rel="noopener">Criteria for classifying forecasting methods</a></p><ul><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/abs/1906.05264" target="_blank" rel="noopener">GluonTS: Probabilistic Time Series Models in Python</a></p><ul><li>[<a href="https://gluon-ts.mxnet.io" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/abs/1704.04110" target="_blank" rel="noopener">DeepAR: Probabilistic Forecasting with Autoregressive Recurrent Networks</a></p><ul><li>David Salinas, et al.</li><li>Code not yet</li></ul></li></ul><h3 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h3><ul><li><p><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0194889" target="_blank" rel="noopener">Statistical and Machine Learning forecasting methods: Concerns and ways forward</a></p><ul><li>Spyros Makridakis, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/viewFile/16325/16790" target="_blank" rel="noopener">Attend and Diagnose: Clinical Time Series Analysis Using Attention Models</a> <code>AAAI 2018</code></p><ul><li>Huan Song, Deepta Rajan, et al.</li><li>not yet.</li></ul></li><li><p><a href="http://papers.nips.cc/paper/7462-precision-and-recall-for-time-series" target="_blank" rel="noopener">Precision and Recall for Time Series</a> <code>NeurIPS2018</code></p><ul><li>Nesime Tatbul, et al.</li><li>Code not yet.</li></ul></li><li><p><a href="https://papers.nips.cc/paper/8004-deep-state-space-models-for-time-series-forecasting.pdf" target="_blank" rel="noopener">Deep State Space Models for Time Series Forecasting</a> <code>NeurIPS2018</code></p><ul><li>Code not yet</li></ul></li><li><p><a href="https://arxiv.org/abs/1812.00098" target="_blank" rel="noopener">Deep Factors with Gaussian Processes for Forecasting</a></p><ul><li><code>Third workshop on Bayesian Deep Learning (NeurIPS 2018)</code></li><li>[<a href="https://aws.amazon.com/blogs/machine-learning/now-available-in-amazon-sagemaker-deepar-algorithm-for-more-accurate-time-series-forecasting/" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1707.01926.pdf" target="_blank" rel="noopener">DIFFUSION CONVOLUTIONAL RECURRENT NEURAL NETWORK: DATA-DRIVEN TRAFFIC FORECASTING</a><code>ICLR 2018</code></p><ul><li>Yaguang Li, et al.</li><li>[<a href="https://github.com/liyaguang/DCRNN" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1802.01059.pdf" target="_blank" rel="noopener">DEEP TEMPORAL CLUSTERING: FULLY UNSUPERVISED LEARNING OF TIME-DOMAIN FEATURES</a></p><ul><li>Naveen Sai Madiraju, et al.</li><li>[<a href="https://github.com/FlorentF9/DeepTemporalClustering" target="_blank" rel="noopener">Code-unofficial implementation </a>]</li></ul></li><li><p><a href="https://arxiv.org/pdf/1703.07015.pdf" target="_blank" rel="noopener">Modeling Long- and Short-Term Temporal Patterns with Deep Neural Networks</a></p><ul><li>Guokun Lai, Wei-Cheng Chang, Yiming Yang, Hanxiao Liu</li><li>[<a href="https://github.com/laiguokun/LSTNet" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="http://papers.nips.cc/paper/7977-forecasting-treatment-responses-over-time-using-recurrent-marginal-structural-networks.pdf" target="_blank" rel="noopener">Forecasting Treatment Responses Over Time Using Recurrent Marginal Structural Networks</a> <code>NeurIPS 2018</code></p><ul><li>Bryan Lim. et al.</li><li><a href="https://github.com/sjblim/rmsn_nips_2018" target="_blank" rel="noopener">Code</a></li></ul></li></ul><h3 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h3><ul><li><p><a href="https://www.econstor.eu/bitstream/10419/157808/1/886576210.pdf" target="_blank" rel="noopener">Deep learning with long short-term memory networks for financial market predictions</a></p><ul><li>Fischer, Thomas and Krauss, Christopher.</li><li>Code not yet.</li></ul></li><li><p><a href="https://papers.nips.cc/paper/7150-discriminative-state-space-models.pdf" target="_blank" rel="noopener">Discriminative State-Space Models</a><code>NIPS 2017</code></p><ul><li>Vitaly Kuznetsov and Mehryar Mohri.</li><li>Code not yet.</li></ul></li></ul><h3 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h3><ul><li><p><a href="https://www.researchgate.net/publication/309385800_Data_Preprocessing_and_Augmentation_for_Multiple_Short_Time_Series_Forecasting_with_Recurrent_Neural_Networks" target="_blank" rel="noopener">Data Preprocessing and Augmentation for Multiple Short Time Series Forecasting with Recurrent Neural Networks</a></p><ul><li>Slawek Smyl and Karthik Kuber</li><li>Code not yet.</li></ul></li><li><p><a href="https://papers.nips.cc/paper/6160-temporal-regularized-matrix-factorization-for-high-dimensional-time-series-prediction" target="_blank" rel="noopener">Temporal Regularized Matrix Factorization for High-dimensional Time Series Prediction</a><code>NIPS 2016</code></p><ul><li>[<a href="https://github.com/rofuyu/exp-trmf-nips16" target="_blank" rel="noopener">Code</a>]</li></ul></li><li><p><a href="http://proceedings.mlr.press/v49/kuznetsov16.pdf" target="_blank" rel="noopener">Time Series Prediction and Online Learning</a><code>JMLR 2016</code></p><ul><li><p>Vitaly Kuznetsov and Mehryar Mohri.</p></li><li><p>Code not yet.</p></li><li><p><a href="https://ideas.repec.org/p/zbw/iwqwdp/032016.html" target="_blank" rel="noopener">Deep neural networks, gradient-boosted trees, random forests: Statistical arbitrage on the S&amp;P 500</a></p><ul><li>Krauss, Christopher, et al.</li><li>Code not yet.</li></ul></li></ul></li></ul><h3 id="Comparative-Classical-methods-vs-Deep-Learning-methods"><a href="#Comparative-Classical-methods-vs-Deep-Learning-methods" class="headerlink" title="Comparative: Classical methods vs Deep Learning methods"></a>Comparative: Classical methods vs Deep Learning methods</h3><ul><li><p><a href="https://arxiv.org/pdf/1803.06386.pdf" target="_blank" rel="noopener">Forecasting economic and financial time series: ARIMA VS. LSTM</a></p></li><li><p><a href="https://pdfs.semanticscholar.org/e58c/7343ea25d05f6d859d66d6bb7fb91ecf9c2f.pdf" target="_blank" rel="noopener">A comparative study between LSTM and ARIMA for sales forecasting in retail</a></p></li><li><p><a href="https://towardsdatascience.com/arima-sarima-vs-lstm-with-ensemble-learning-insights-for-time-series-data-509a5d87f20a" target="_blank" rel="noopener">ARIMA/SARIMA vs LSTM with Ensemble learning Insights for Time Series Data</a></p></li></ul><h2 id="Conferences"><a href="#Conferences" class="headerlink" title="Conferences"></a>Conferences</h2><ul><li><p>Machine learning</p><ul><li><a href="https://nips.cc/" target="_blank" rel="noopener">NeurIPS</a></li><li><a href="https://icml.cc/" target="_blank" rel="noopener">ICML</a></li><li><a href="https://iclr.cc/" target="_blank" rel="noopener">ICLR</a></li></ul></li><li><p>Artificial intelligence</p><ul><li><a href="https://www.aaai.org/" target="_blank" rel="noopener">AAAI</a></li><li><a href="https://www.aistats.org/" target="_blank" rel="noopener">AISTATS</a></li><li><a href="https://e-nns.org/icann2019/" target="_blank" rel="noopener">ICANN</a>   </li><li><a href="https://www.ijcai.org/" target="_blank" rel="noopener">IJCAI</a></li><li><a href="http://www.auai.org/" target="_blank" rel="noopener">UAI</a></li></ul></li></ul><h2 id="Competitions"><a href="#Competitions" class="headerlink" title="Competitions"></a>Competitions</h2><ul><li><a href="https://mofc.unic.ac.cy/m5-competition/" target="_blank" rel="noopener">M5 Competition</a></li><li><a href="https://github.com/Mcompetitions/M4-methods" target="_blank" rel="noopener">M4 Competition</a></li></ul><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul><li><a href="https://github.com/Alro10/deep-learning-time-series/tree/master/notebooks" target="_blank" rel="noopener">Notebooks</a></li><li><a href="">Code</a></li></ul><h2 id="Theory-Resource"><a href="#Theory-Resource" class="headerlink" title="Theory-Resource"></a>Theory-Resource</h2><ul><li><p><a href="https://github.com/microsoft/forecasting" target="_blank" rel="noopener">Time Series Forecasting Best Practices &amp; Examples from Microsoft</a></p></li><li><p><a href="https://towardsdatascience.com/attention-for-time-series-classification-and-forecasting-261723e0006d" target="_blank" rel="noopener">Attention-for-time-series-classification-and-forecasting</a></p></li><li><p><a href="https://towardsdatascience.com/deep-learning-for-high-dimensional-time-series-7a72b033a7e0" target="_blank" rel="noopener">Deep learning for high dimensional time series-blog</a></p></li><li><p><a href="https://deeplearning.ai/ai-notes/optimization/" target="_blank" rel="noopener">Deep Learning AI-Optimization</a></p></li><li><p><a href="https://towardsdatascience.com/back-to-basics-deriving-back-propagation-on-simple-rnn-lstm-feat-aidan-gomez-c7f286ba973d" target="_blank" rel="noopener">Backpropagation for LSTM</a></p></li><li><p><a href="https://blog.usejournal.com/stock-market-prediction-by-recurrent-neural-network-on-lstm-model-56de700bff68" target="_blank" rel="noopener">Stock Market Prediction by Recurrent Neural Network on LSTM Model</a></p></li><li><p><a href="https://arxiv.org/pdf/1910.05245.pdf" target="_blank" rel="noopener">Decoupling Hierarchical Recurrent Neural Networks With Locally Computable Losses</a></p></li><li><p><a href="https://towardsdatascience.com/time-series-analysis-with-deep-learning-simplified-5c444315d773" target="_blank" rel="noopener">Time Series Analysis with Deep Learning : Simplified</a></p></li><li><p><a href="https://towardsdatascience.com/machine-learning-techniques-applied-to-stock-price-prediction-6c1994da8001" target="_blank" rel="noopener">ML techniques applied to stock prices</a></p></li><li><p><a href="https://github.com/robjhyndman/ETC3550Slides" target="_blank" rel="noopener">Forecasting: Principles and Practice: Slides</a><strong>Good material</strong></p></li></ul><h2 id="Code-Resource"><a href="#Code-Resource" class="headerlink" title="Code-Resource"></a>Code-Resource</h2><ul><li><p><a href="https://github.com/EvilPsyCHo/Deep-Time-Series-Prediction" target="_blank" rel="noopener">DeepSeries: Deep Learning Models for time series prediction.</a></p></li><li><p><a href="https://arxiv.org/pdf/2005.10361.pdf" target="_blank" rel="noopener">varstan: An R package for Bayesian analysis of structured time series models with Stan</a></p></li><li><p><a href="https://github.com/firmai/tsgan" target="_blank" rel="noopener">Time-series Generative Adversarial Networks: tsgan</a></p></li><li><p><a href="https://github.com/MSRDL/Deep4Cast" target="_blank" rel="noopener">Deep4cast: Forecasting for Decision Making under Uncertainty</a></p></li><li><p><a href="https://github.com/jxx123/fireTS" target="_blank" rel="noopener">fireTS: sklean style package for multi-variate time-series prediction.</a></p></li><li><p><a href="https://github.com/epiforecasts/EpiSoon" target="_blank" rel="noopener">EpiSoon: Forecasting the effective reproduction number over short timescales</a></p></li><li><p><a href="https://github.com/pyaf/load_forecasting" target="_blank" rel="noopener">Electric Load Forecasting</a>: Load forecasting on Delhi area electric power load using ARIMA, RNN, LSTM and GRU models.</p></li><li><p><a href="https://github.com/rstudio-conf-2020/time-series-forecasting" target="_blank" rel="noopener">Time Series and Forecasting in R</a></p></li><li><p><a href="https://github.com/timeseriesAI/timeseriesAI" target="_blank" rel="noopener">TimeseriesAI</a>: Practical Deep Learning for Time Series / Sequential Data using fastai/ Pytorch.</p></li><li><p><a href="https://github.com/timescale/timescaledb" target="_blank" rel="noopener">TimescaleDB</a>: An open-source time-series SQL database optimized for fast ingest and complex queries. Packaged as a PostgreSQL extension.</p></li><li><p><a href="https://github.com/RamiKrispin/TSstudio" target="_blank" rel="noopener">TSstudio: Tools for time series analysis and forecasting </a></p></li><li><p><a href="https://github.com/facebook/prophet" target="_blank" rel="noopener">Prophet: Automatic Forecasting Procedure</a></p></li><li><p><a href="https://github.com/johannfaouzi/pyts" target="_blank" rel="noopener">pyts: a Python package for time series classification</a></p></li><li><p><a href="https://github.com/wassname/attentive-neural-processes" target="_blank" rel="noopener">Using attentive neural processes for forecasting power usage</a></p></li><li><p><a href="https://robjhyndman.com/hyndsight/fable2/" target="_blank" rel="noopener">Non-Gaussian forecasting using fable - R</a></p></li><li><p><a href="https://github.com/alan-turing-institute/sktime" target="_blank" rel="noopener">SKTIME</a></p></li><li><p><a href="https://paperswithcode.com/task/multivariate-time-series-forecasting" target="_blank" rel="noopener">Papers with code - Multivariate time series forecasting</a></p></li><li><p><a href="https://docs.aws.amazon.com/sagemaker/latest/dg/deepar.html" target="_blank" rel="noopener">DeepAR by Amazon</a></p></li><li><p><a href="https://aws.amazon.com/blogs/machine-learning/now-available-in-amazon-sagemaker-deepar-algorithm-for-more-accurate-time-series-forecasting/" target="_blank" rel="noopener">DFGP by Amazon</a></p></li><li><p><a href="https://www.kaggle.com/c/demand-forecasting-kernels-only" target="_blank" rel="noopener">https://www.kaggle.com/c/demand-forecasting-kernels-only</a></p></li><li><p><a href="https://www.kaggle.com/c/favorita-grocery-sales-forecasting" target="_blank" rel="noopener">https://www.kaggle.com/c/favorita-grocery-sales-forecasting</a></p></li><li><p><a href="https://www.kaggle.com/c/grupo-bimbo-inventory-demand" target="_blank" rel="noopener">https://www.kaggle.com/c/grupo-bimbo-inventory-demand</a></p></li><li><p><a href="https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting" target="_blank" rel="noopener">https://www.kaggle.com/c/recruit-restaurant-visitor-forecasting</a></p></li><li><p><a href="https://www.sciencedirect.com/science/article/pii/S0169207019301098" target="_blank" rel="noopener">Predicting/hypothesizing the findings of the M4 Competition</a></p></li></ul><h2 id="Datasets"><a href="#Datasets" class="headerlink" title="Datasets"></a>Datasets</h2><ul><li><p><a href="https://github.com/xephonhq/awesome-time-series-database" target="_blank" rel="noopener">A curated list of awesome time series databases</a></p></li><li><p><a href="https://archive.ics.uci.edu/ml/datasets/ElectricityLoadDiagrams20112014" target="_blank" rel="noopener">Electricity dataset from UCI</a></p></li><li><p><a href="https://archive.ics.uci.edu/ml/datasets/PEMS-SF" target="_blank" rel="noopener">Traffic dataset from UCI</a></p></li><li><p><a href="http://archive.ics.uci.edu/ml/datasets/Air+Quality" target="_blank" rel="noopener">Air quality from UCI</a></p></li><li><p><a href="https://github.com/zhiyongc/Seattle-Loop-Data" target="_blank" rel="noopener">Seattle freeway traffic speed</a></p></li><li><p><a href="https://www.kaggle.com/c/web-traffic-time-series-forecasting" target="_blank" rel="noopener">Kaggle-Web Traffic Time Series Forecasting</a></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 备忘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> deep learning </tag>
            
            <tag> time series forecasting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲置手机拯救计划</title>
      <link href="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/"/>
      <url>/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>本方案利用了AIDA64和remote panel两个软件，尝试将闲置的废旧手机改装为PC状态监控器，实现旧物再利用。打游戏、跑程序的时候，麻麻再也不用担心我看不见电脑运行状态啦~ (●ˇ∀ˇ●) ~！！！</p><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>本教程参考了知乎大佬Pjer的分享：<a href="https://zhuanlan.zhihu.com/p/62592140" target="_blank" rel="noopener">用旧手机做PC运行状态监控</a>。<br>感兴趣的读者可以移步参观。</p><h1 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h1><h2 id="1、废旧手机一台"><a href="#1、废旧手机一台" class="headerlink" title="1、废旧手机一台"></a>1、废旧手机一台</h2><p>我是使用的是N年前母上大人淘汰下来的红米note2。这手机其他毛病都没有，就是电池不行了，需要一直连接数据线充电才能持续使用。正好我的状态监控软件运行需要连接到电脑USB上，上述问题就不用考虑啦。需要强调一点的是，引言中提到的两个软件，remote panel我只找到了Android版和Windows版，AIDA64只找到了Windows版。对我来说，这些已经能够继续接下来的步骤了，苹果机和其他PC系统我没有尝试过，在此表示不清楚。<br>建议：废旧手机的显示屏最好是LCD显示屏，现在的OLED显示屏长期显示静态的画面容易造成烧屏和暗影。相比起来，LCD屏幕会好一点。</p><h2 id="2、PC端安装AIDA64"><a href="#2、PC端安装AIDA64" class="headerlink" title="2、PC端安装AIDA64"></a>2、PC端安装AIDA64</h2><p>AIDA64工具软件是一款windows系统下测试和查看软硬件系统信息的工具，有超频，硬件信息查看，硬件压力测试和硬件传感器监测等多种功能，详细的显示出计算机硬件和软件每一个方面的信息。总之，AIDA64在这里就是用作电脑传感器数据的搜集和投喂。</p><p>安装包在下文会有下载链接，具体安装步骤请参考：<a href="https://jingyan.baidu.com/article/636f38bb8bc93dd6b9461061.html" target="_blank" rel="noopener">AIDA64工具软件的使用</a></p><h2 id="3、PC端和Android端安装remote-panel"><a href="#3、PC端和Android端安装remote-panel" class="headerlink" title="3、PC端和Android端安装remote panel"></a>3、PC端和Android端安装remote panel</h2><p>有了电脑的监控数据，我们还需要将这些数据传递到手机端进行显示，remote panel，顾名思义，就是远程面板。它承担的任务就是在PC端接收数据，然后通过数据线传递到安装了该软件的Android端，并显示出来。</p><p>PC端和Android端的remote panel在下文也会有下载链接，安装步骤很简单，在此就略去了。</p><h1 id="二、定制个性化监控面板"><a href="#二、定制个性化监控面板" class="headerlink" title="二、定制个性化监控面板"></a>二、定制个性化监控面板</h1><p>1、打开PC端安装好的AIDA64软件，点击文件——设置，可以看到如下界面，按照图示框选的内容，勾选相关项目<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/1.png?v=1&amp;type=image" alt="配置AIDA64"></p><p>2、勾选完成后，点击左侧的 LCD，到右侧选择 Odospace，按照图示，勾选启用OdospaceLCD支持，其他设置默认。<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/2.png?v=1&amp;type=image" alt="配置AIDA64"></p><p>3、点击左侧菜单栏中LCD下面的LCD项目，打开之后就可以进行个性化的面板定制，你可以自己定制各种需要的显示控件，比如日期，实时网速，CPU和GPU的使用率以及温度，风扇转速等。下图是我自己定制的面板，大家可以充分发挥自己的创造力，定制出各种风格的显示面板。定制的面板文件还支持导出和导入，分享给其他人也是不错的选择啊~ O(∩_∩)O ~</p><p>不会自定义面板的读者可以移步：<a href="http://app.myzaker.com/news/article.php?pk=5e8ae8c2b15ec04cd251a1e5" target="_blank" rel="noopener">旧手机变身→电脑运行状况监视器</a>。<br>我觉得里面的教程写得比较详细了，但是前面部分不同是因为这篇文章没有用到remote panel软件，显示的面板是通过AIDA64在浏览器中显示出来的效果，这就用不到废旧手机啦，而且浏览器显示的效果不太好，只有比较高的AIDA64的版本才支持这个功能，这也与我想要随时监控电脑运行状态的初衷相悖了。<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/3.png?v=1&amp;type=image" alt="定制AIDA64显示面板"></p><p>4、打开PC端安装好的remote panel，下面的默认参数不用变，并挂在后台就行了，记得也要添加到开机自启动。<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/4.png?v=1&amp;type=image" alt="开启PC端remote panel"></p><p>5、手机数据线连接电脑USB，打开手机端的remote panel，默认参数也不用变，等待几秒，就加载出显示界面啦~ (●ˇ∀ˇ●) ~</p><p>像这样！！o( * ￣▽￣ * )o<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/5.jpg?v=1&amp;type=image" alt="定制AIDA64显示面板"></p><p>这样！！(。・∀・)ノ<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/6.jpg?v=1&amp;type=image" alt="定制AIDA64显示面板"></p><p>还有这样！！！~ *  (￣▽￣) ~*<br><img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/7.jpg?v=1&amp;type=image" alt="定制AIDA64显示面板"></p><p>打游戏、跑程序的时候，麻麻再也不用担心我看不见电脑运行状态啦~ (●ˇ∀ˇ●) ~！！！</p><p>Tips：<a href="https://pan.baidu.com/s/1cHiwDQCs_R3aBehVX0172Q" target="_blank" rel="noopener">软件打包下载及我的面板分享</a>，提取码：n5sh，压缩包解压密码：yangminghong.top<br>内容如下：<img src="/2020/07/27/xian-zhi-shou-ji-zheng-jiu-ji-hua/8.png?v=1&amp;type=image" alt="软件打包下载及我的面板分享"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动手捣腾 </tag>
            
            <tag> pc状态监控 </tag>
            
            <tag> 废旧手机改造 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python安装第三方库的方法汇总</title>
      <link href="/2020/07/24/python-an-zhuang-di-san-fang-ku-de-fang-fa-hui-zong/"/>
      <url>/2020/07/24/python-an-zhuang-di-san-fang-ku-de-fang-fa-hui-zong/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>最近因为项目的问题，我在配置python环境的过程中需要安装一些第三方库，下面我将学习过程中总结和搜集的一些安装方法进行汇总，方便自己日后查看和交流学习。</p><h3 id="方法一：pip命令行直接安装（最简易可行）"><a href="#方法一：pip命令行直接安装（最简易可行）" class="headerlink" title="方法一：pip命令行直接安装（最简易可行）"></a>方法一：pip命令行直接安装（最简易可行）</h3><p>默认已将安装好python，并进行了相关环境的配置。接下来，<strong>win + r</strong>打开命令窗口，输入命令 <strong>pip install 包名</strong>，回车即可安装第三方库。但是，由于国内网络原因，某些第三方库可能下载的速度很慢，可能导致安装失败。这里我推荐在使用<strong>pip</strong>安装的时候，切换成国内的一些镜像源。具体的命令为：<strong>pip install 包名 -i 镜像源的地址</strong>。</p><p>下面我列举一些国内较常用的镜像源：</p><p>清华：<code>https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p>阿里云：<code>http://mirrors.aliyun.com/pypi/simple/</code></p><p>中国科技大学: <code>https://pypi.mirrors.ustc.edu.cn/simple/</code></p><p>华中理工大学：<code>http://pypi.hustunique.com/</code></p><p>山东理工大学：<code>http://pypi.sdutlinux.org/</code></p><p>豆瓣：<code>http://pypi.douban.com/simple/</code></p><p>如果需要下载到指定环境下，例如我想要安装到<code>MyProject</code>中，找到它的路径下的<code>python.exe</code>，复制这个可执行文件的绝对路径 <code>D:\Anaconda3\envs\MyProject\python.exe</code><br>命令为：<br><strong><code>D:\Anaconda3\envs\MyProject\python.exe pip install 包名 -i 镜像源的地址</code></strong></p><h3 id="方法二：Anaconda安装"><a href="#方法二：Anaconda安装" class="headerlink" title="方法二：Anaconda安装"></a>方法二：Anaconda安装</h3><p>默认安装了Anaconda。打开Anaconda，按照下图进行操作就可以了。<br><img src="/2020/07/24/python-an-zhuang-di-san-fang-ku-de-fang-fa-hui-zong/1.png?v=1&amp;type=image" alt="image"></p><h3 id="方法三：利用PyCharm安装"><a href="#方法三：利用PyCharm安装" class="headerlink" title="方法三：利用PyCharm安装"></a>方法三：利用PyCharm安装</h3><p>默认安装了PyCharm。打开PyCharm，按照下图进行操作就可以了。<br><img src="/2020/07/24/python-an-zhuang-di-san-fang-ku-de-fang-fa-hui-zong/2.png?v=1&amp;type=image" alt="image"><br><img src="/2020/07/24/python-an-zhuang-di-san-fang-ku-de-fang-fa-hui-zong/3.png?v=1&amp;type=image" alt="image"><br><img src="/2020/07/24/python-an-zhuang-di-san-fang-ku-de-fang-fa-hui-zong/4.png?v=1&amp;type=image" alt="image"><br>最后点击左下角的install package，等待安装完成即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 备忘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github博客搭建完全教程（转载）</title>
      <link href="/2020/06/04/hexo-github-bo-ke-da-jian-wan-quan-jiao-cheng-zhuan-zai/"/>
      <url>/2020/06/04/hexo-github-bo-ke-da-jian-wan-quan-jiao-cheng-zhuan-zai/</url>
      
        <content type="html"><![CDATA[<div class="card-content article-card-content">            <div id="articleContent">                <h1 id="toc-heading-1"><a href="#阅读须知" class="headerlink" title="阅读须知" target="_blank"></a>阅读须知（转载自https://sunhwee.com/posts/6e8839eb.html，仅作为学习记录，方便查看）</h1><hr><blockquote><p>注意，这篇文章篇幅较长，主要针对新手，每一步很详细，所以可能会显得比较啰嗦，所以建议基础比较好小伙伴根据目录选择自己感兴趣的部分跳着看，不要文章没看，上来先喷一下！谢谢<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-1-Frame" tabindex="0" data-mathml="<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mo>&amp;#x2299;</mo><mi>o</mi><mo>&amp;#x2299;</mo></math>" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-1" style="width: 2.407em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.055em; height: 0px; font-size: 116%;"><span style="position: absolute; clip: rect(1.586em, 1002em, 2.583em, -999.997em); top: -2.343em; left: 0em;"><span class="mrow" id="MathJax-Span-2"><span class="mo" id="MathJax-Span-3" style="font-family: MathJax_Main;">⊙</span><span class="mi" id="MathJax-Span-4" style="font-family: MathJax_Math-italic;">o</span><span class="mo" id="MathJax-Span-5" style="font-family: MathJax_Main;">⊙</span></span><span style="display: inline-block; width: 0px; height: 2.349em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.133em; border-left: 0px solid; width: 0px; height: 0.888em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>⊙</mo><mi>o</mi><mo>⊙</mo></math></span></span><script type="math/tex" id="MathJax-Element-1"> ⊙ o ⊙ </script>。<br>教程内容随意复制使用，引用的话请加一个参考链接，谢谢！</p></blockquote><h1 id="toc-heading-2"><a href="#博客开源" class="headerlink" title="博客开源" target="_blank"></a>博客开源</h1><hr><p>倒腾了一两周总算把个人博客网站完善了，目前这个版本使用应该是够了，当然还有一些优化项和功能增加后续在慢慢更新，为了回馈开源，今天准备把我自己修改完善的<code>blog</code>网站源代码开源。这不是生成后的网页文件，是您可以直接使用的源码，您只需要把博客相关信息换成您自己的就可以部署了，对于新手或者不懂编程的小伙伴来说，简直是福音，极大简化了您构建博客的工作量和复杂度，每个人都可以下载并修改成自己喜欢样式！如果你有修改想法，欢迎PR！最后，我们还是给这个开源小项目取个名字吧，就叫<a href="https://github.com/shw2018/hexo-blog-fly.git" target="_blank" rel="noopener">hexo-blog-fly</a>吧，怎么样？&lt;&lt;&lt;&lt;&lt;<a href="https://github.com/shw2018/hexo-blog-fly" target="_blank" rel="noopener">源代码下载</a>&gt;&gt;&gt;&gt;&gt;</p><p>本博客基于<code>Hexo</code>框架搭建，用到<a href="https://github.com/shw2018/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>主题,并在此基础之上做了很多修改，修复了一些bug，增加了一些新的特性和功能，博客地址：<a href="https://shw2018.github.io/" target="_blank" rel="noopener">https://shw2018.github.io</a>，博客演示：<a href="https://shw2018.github.io/" target="_blank" rel="noopener">sunhwee.com</a>。</p><p><strong>简单使用方法：</strong></p><ol><li><code>star</code> 本项目仓库^o^</li><li>安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>, 安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodeJS</a></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>修改配置信息，改成自己的信息</li><li>运行命令<code>hexo  clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo  s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><blockquote><p><strong>更多详情教程，强烈推荐看我写的：<a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank">Hexo+Github博客搭建完全教程</a></strong></p></blockquote><p>有什么问题可以在文章最后评论区<strong>留言和讨论</strong>，当然，欢迎点击文章最后的打赏按键，请博主一杯冰阔乐，笑～</p><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote><h1 id="toc-heading-3"><a href="#前言" class="headerlink" title="前言" target="_blank"></a>前言</h1><hr><p>去年在博客园注册了自己的第一个博客，当时初衷就是想拿来作为自己的在线笔记本，做做学习记录，分享一些学到的东西，使用第三方提供的博客服务其实也挺方便，现在市面上提供类似服务的博客网站也很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。但是缺点是比较不自由，会受到平台的各种限制和恶心的广告，个性化不足。而自己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单单是花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，也是没有这样的精力和时间。那么，我们能不能自己定制一个自己喜欢的个性化博客，同时也不用付出太高的成本啦？</p><p>这就引出了第三种选择，基于开源框架搭建博客，然后直接在<code>github page</code>平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，基于这个想法，今年8月初的时候开始搭建第一个属于自己的独立博客，前后断续弄了近一周，到现在稍微有点模样了。我想可能有很多小伙伴应该也想过搭建一个自己的博客，当然，网上也有一堆详细教程。写这篇博客的目的大概有两个，第一个是当做自己的搭建记录，方便以后自己随时查看提示修改，第二个是稍稍总结一下具体的搭建步骤以及一些支持个性化定制的博客源码修改的教程，稍稍分享一下这些修改经验，当然，更多的一些个性化操作需要你自己以后在这个基础上慢慢去摸索，有些写的不太好的地方还希望看到的小伙伴多多包涵。</p><p>博客初步的页面效果可以看一下我的博客：<a href="http://shw2018.github.io" target="_blank" rel="noopener">sunhwee.com</a>，欢迎大家支持。</p><p>本博客基于<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>，所以首先要了解一下我们搭建博客所要用到的框架。<code>Hexo</code>是高效的静态网站生成框架，它基于<code>Node.js</code>，快速，简单且功能强大，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a>官网进行详细查看，因为<code>Hexo</code>的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。通过<code>Hexo</code>，你可以直接使用<code>Markdown</code>语法来撰写博客。相信很多小伙伴写工程都写过<code>README.md</code>文件吧，对，就是这个格式的！写完后只需两三条命令即可将生成的网页上传到<code>github</code>或者<code>coding</code>等代码管理托管平台，然后别人就可以浏览你的博客网页啦。是不是很简单？你无需关心网页源代码的具体生成细节，只需要用心写好你的博客文章内容就行了。</p><blockquote><p>简单总结：<code>Hexo</code>, 产品成熟，使用简单，功能强大，有丰富的各种插件资源；但，像发布后台、站内搜索，评论系统类似诉求，虽然有对应的工具，但也需要自己折腾下，后续我们一步一步介绍。</p></blockquote><p>教程大致分三个部分，</p><ul><li>第一部分：<code>hexo</code>的初级搭建还有部署到<code>github page</code>上，以及个人域名的绑定。</li><li>第二部分：<code>hexo</code>的基本配置，更换主题，实现多终端工作，以及在<code>coding page</code>部署实现国内外分流</li><li>第三部分：<code>hexo</code>添加各种功能，包括搜索的<code>SEO</code>，阅读量统计，访问量统计和评论系统等。</li></ul><h1 id="toc-heading-4"><a href="#第一部分-搭建" class="headerlink" title="第一部分  搭建" target="_blank"></a>第一部分  搭建</h1><hr><p><code>hexo</code>的初级搭建还有部署到<code>github page</code>上，以及个人域名的绑定。</p><h2 id="toc-heading-5"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤" target="_blank"></a>Hexo搭建步骤</h2><ul><li>1.安装<code>Git</code></li><li>2.安装<code>Node.js</code></li><li>3.安装<code>Hexo</code></li><li>4.<code>GitHub</code>创建个人仓库</li><li>5.生成<code>SSH</code>添加到<code>GitHub</code></li><li>6.将<code>hexo</code>部署到<code>GitHub</code></li><li>7.设置个人域名</li><li>8.发布文章</li></ul><h2 id="toc-heading-6"><a href="#1-安装Git" class="headerlink" title="1. 安装Git" target="_blank"></a>1. 安装Git</h2><hr><p>为了把本地的网页文件上传到<code>github</code>上面去，需要用到工具———Git<a href="https://git-scm.com/download" target="_blank" rel="noopener">[下载地址]</a>。<code>Git</code>是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。<code>Git</code>非常强大，建议每个人都去了解一下。廖雪峰老师的<code>Git</code>教程写的非常好，大家可以看一下。<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">Git教程</a></p><p><strong>windows：</strong>到<code>git</code>官网上下载<code>.exe</code>文件,<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Download git</a>,安装选项还是全部默认，只不过最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>，这样我们就可以直接在命令提示符里打开<code>git</code>了。</p><blockquote><p>顺便说一下，<code>windows</code>在<code>git</code>安装完后，就可以直接使用<code>git bash</code>来敲命令行了，不用自带的<code>cmd</code>，<code>cmd</code>有点难用。</p></blockquote><p><strong>linux：</strong>对<code>linux</code>来说实在是太简单了，因为最早的<code>git</code>就是在<code>linux</code>上编写的，只需要一行代码</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>安装完成后在命令提示符中输入<code>git --version</code>来查看一下版本验证是否安装成功。</p><h2 id="toc-heading-7"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs" target="_blank"></a>2. 安装nodejs</h2><hr><p><code>Hexo</code>是基于<code>node.js</code>编写的，所以需要安装一下<code>node.js</code>和里面的<code>npm</code>工具。</p><p><strong>windows：</strong>下载稳定版或者最新版都可以<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js</a>，安装选项全部默认，一路点击<code>Next</code>。<br>最后安装好之后，按<code>Win+R</code>打开命令提示符，输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，那么就安装成功了。</p><p><strong>linux：</strong>命令行安装：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nodejs<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">npm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>不过不推荐命令行安装，有时候有问题，建议直接到官网去下载编译好的压缩文件，如下所示:<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/1.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/1.png" alt="" class="img-shadow img-margin"></div><br>然后解压到你指定的文件夹即可，比如我解压到我系统的<code>/home/shw/MySoftwares</code>目录下了，如图:<br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/2.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/2.png" alt="" class="img-shadow img-margin"></div><p></p><blockquote><p>注意本压缩包是<code>.tar.xz</code>格式的，需要两次解压</p></blockquote><p>配置一下环境变量</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>复制下面两行到刚打开的<code>profile</code>文件最底部(注意<code>node</code>的安装地址<code>/home/shw/MySoftwares/node-v12.8.0-linux-x64</code>换成自己的)：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> NODE_HOME<span class="token operator">=</span>/home/shw/MySoftwares/node-v12.8.0-linux-x64<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$NODE_HOME</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>保存后退出，再执行下面命令将环境变量生效：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>将目录软链接到全局环境下（命令后面的<code>/usr/local/bin/node</code>是固定的）</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> -s /home/shw/MySoftwares/node-v12.8.0-linux-x64/node /usr/local/bin/node<span class="token function">sudo</span> <span class="token function">ln</span> -s /home/shw/MySoftwares/node-v12.8.0-linux-x64/npm /usr/local/bin/npm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>这样安装好了以后使用<code>npm</code>安装的包(比如：<code>ionic serve</code>)，使用包的命令时可能会提示找不到命令，没关系，在用户目录下终端执行下面命令<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-2-Frame" tabindex="0" data-mathml="<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x56FA;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x5B9A;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x5199;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x6CD5;</mo></mrow></math>" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-6" style="width: 4.049em; display: inline-block;"><span style="display: inline-block; position: relative; width: 3.463em; height: 0px; font-size: 116%;"><span style="position: absolute; clip: rect(1.293em, 1003.46em, 2.642em, -999.997em); top: -2.284em; left: 0em;"><span class="mrow" id="MathJax-Span-7"><span class="texatom" id="MathJax-Span-8"><span class="mrow" id="MathJax-Span-9"><span class="mo" id="MathJax-Span-10"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">固</span></span></span></span><span class="texatom" id="MathJax-Span-11"><span class="mrow" id="MathJax-Span-12"><span class="mo" id="MathJax-Span-13"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">定</span></span></span></span><span class="texatom" id="MathJax-Span-14"><span class="mrow" id="MathJax-Span-15"><span class="mo" id="MathJax-Span-16"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">写</span></span></span></span><span class="texatom" id="MathJax-Span-17"><span class="mrow" id="MathJax-Span-18"><span class="mo" id="MathJax-Span-19"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">法</span></span></span></span></span><span style="display: inline-block; width: 0px; height: 2.29em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.269em; border-left: 0px solid; width: 0px; height: 1.296em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow class="MJX-TeXAtom-ORD"><mo>固</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>定</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>写</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>法</mo></mrow></math></span></span><script type="math/tex" id="MathJax-Element-2">固定写法</script>：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span> -e <span class="token string">"export PATH=<span class="token variable"><span class="token variable">$(</span><span class="token function">npm</span> prefix -g<span class="token variable">)</span></span>/bin:<span class="token variable">$PATH</span>"</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc <span class="token operator">&amp;&amp;</span> <span class="token function">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>这样我们在所有用户下，都可以使用<code>npm</code>，也可以使用<code>npm</code>安装的包的命令。成功的将<code>nodejs</code>安装并配置到全局环境下。</p><p>安装完后，打开命令行终端，输入:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">node -v<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>检查一下有没有安装成功</p><h2 id="toc-heading-8"><a href="#添加国内镜像源" class="headerlink" title="添加国内镜像源" target="_blank"></a><strong>添加国内镜像源</strong></h2><p>如果没有梯子的话，可以使用阿里的国内镜像进行加速。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><h2 id="toc-heading-9"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo" target="_blank"></a>3. 安装Hexo</h2><hr><p>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键<code>git bash</code>打开）。</p><p>比如我的博客文件都存放在<code>D:\Study\MyBlog</code>目录下。</p><p>在该目录下右键点击<code>Git Bash Here</code>，打开<code>git</code>的控制台窗口，以后我们所有的操作都在<code>git</code>控制台进行，就不用<code>Windows</code>自带的<code>cmd</code>了。</p><p>定位到该目录下，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>。可能会有几个报错，无视它就行。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>至此<code>hexo</code>就安装完了。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的网站，输入<code>hexo init</code>初始化文件夹</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo init MyBlog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>这个<code>MyBlog</code>可以自己取什么名字都行，然后，接着输入<code>npm install</code>安装必备的组件。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> MyBlog      //进入这个MyBlog文件夹<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>新建完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules:</code> 依赖包</li><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板</li><li><code>source：</code>用来存放你的文章</li><li><code>themes：</code>主题** </li><li><code>_config.yml:</code> 博客的配置文件**</li></ul><p>这样本地的网站配置也弄好啦，输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器，</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo server<span class="token punctuation">(</span>或者简写:hexo s）<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>然后浏览器打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，就可以看到我们的博客啦，效果如下：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/3.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/3.png" alt="" class="img-shadow img-margin"></div><p></p><p>按<code>ctrl+c</code>关闭本地服务器。</p><h2 id="toc-heading-10"><a href="#4-注册Github账号创建个人仓库" class="headerlink" title="4. 注册Github账号创建个人仓库" target="_blank"></a>4. 注册Github账号创建个人仓库</h2><hr><p>接下来就去注册一个<code>github</code>账号，用来存放我们的网站。大多数小伙伴应该都有了吧，作为一个合格的程序猿（媛）还是要有一个的。</p><p>打开<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>，新建一个项目仓库<code>New repository</code>，如下所示：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/4.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/4.png" alt="" class="img-shadow img-margin"></div><br>然后如下图所示，输入自己的项目名字，后面一定要加<code>.github.io</code>后缀，<code>README</code>初始化也要勾上。<br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/5.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/5.png" alt="" class="img-shadow img-margin"></div><p></p><blockquote><p>要创建一个和你用户名相同的仓库，后面加.<a href="http://github.io，只有这样，将来要部署到`GitHub" target="_blank" rel="noopener">http://github.io，只有这样，将来要部署到`GitHub</a> page<code>的时候，才会被识别，也就是http://xxxx.github.io，其中xxx就是你注册</code>GitHub`的用户名。例如我的：<a href="http://shw2018.github.io" target="_blank" rel="noopener">http://shw2018.github.io</a></p></blockquote><h2 id="toc-heading-11"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub" target="_blank"></a>5. 生成SSH添加到GitHub</h2><hr><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地。<br>右键打开<code>git bash</code>，然后输入下面命令：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"yourname"</span><span class="token function">git</span> config --global user.email <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>这里的<code>yourname</code>输入你的<code>GitHub</code>用户名，<code>youremail</code>输入你<code>GitHub</code>的邮箱。这样<code>GitHub</code>才能知道你是不是对应它的账户。例如我的：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"shw2018"</span><span class="token function">git</span> config --global user.email <span class="token string">"hwsun@std.uestc.edu.cn"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>可以用以下两条，检查一下你有没有输对</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>然后创建<code>SSH</code>,一路回车</p><blockquote><p><code>ssh</code>，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在<code>GitHub</code>上，这样当你链接<code>GitHub</code>自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过<code>git</code>上传你的文件到<code>GitHub</code>上。</p></blockquote><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在你的电脑中找到这个文件夹。或者<code>git bash</code>中输入</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>将输出的内容复制到框中，点击确定保存。</p><p>打开<a href="http://github.com" target="_blank" rel="noopener">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。如图：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/6.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/6.png" alt="" class="img-shadow img-margin"></div><br>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了。<br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/7.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/7.png" alt="" class="img-shadow img-margin"></div><p></p><h2 id="toc-heading-12"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub" target="_blank"></a>6. 将hexo部署到GitHub</h2><hr><p>这一步，我们就可以将<code>hexo</code>和<code>GitHub</code>关联起来，也就是将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><p>修改最后一行的配置：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">deploy:  type: git  repository: https://github.com/shw2018/shw2018.github.io  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p><code>repository</code>修改为你自己的<code>github</code>项目地址即可，就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>然后</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。 <code>hexo generate</code>顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p></blockquote><p>得到下图就说明部署成功了，过一会儿就可以在<a href="http://yourname.github.io" target="_blank" rel="noopener">http://yourname.github.io</a> 这个网站看到你的博客了！！<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/8.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/8.png" alt="" class="img-shadow img-margin"></div><p></p><h2 id="toc-heading-13"><a href="#7-设置个人域名" class="headerlink" title="7. 设置个人域名" target="_blank"></a>7. 设置个人域名</h2><hr><p>现在你的个人网站的地址是<code>yourname.github.io</code>，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><blockquote><p><strong>不过，这一步不是必要的，如果目前还不想买域名可以先跳过，继续看后面的，以后想买域名了在还看这块</strong></p></blockquote><p>首先你得购买一个专属域名，<code>xx</code>云都能买，看你个人喜好了。</p><p>这篇以腾讯云为例，腾讯云官网购买：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/9.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/9.png" alt="" class="img-shadow img-margin"></div><br>然后实名认证后进入腾讯云控制台，点云解析进去，找到你刚买的域名，点进去添加两条解析记录，如下图所示：<br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/10.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/10.png" alt="" class="img-shadow img-margin"></div><p></p><p>然后打开你的<code>github</code>博客项目，点击<code>settings</code>，拉到下面<code>Custom domain</code>处，填上你自己的域名，保存：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/11.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/11.png" alt="" class="img-shadow img-margin"></div><p></p><p>这时候你的项目根目录应该会出现一个名为<code>CNAME</code>的文件了。如果没有的话，打开你本地博客<code>/source</code>目录，我的是<code>D:\Study\MyBlog\source</code>，新建<code>CNAME</code>文件，注意没有后缀。然后在里面写上你的域名，保存。最后运行<code>hexo g</code>、<code>hexo d</code>上传到<code>github</code>。</p><p>过不了多久，再打开你的浏览器，输入你自己的专属域名，就可以看到搭建的网站啦！</p><h2 id="toc-heading-14"><a href="#8-写文章、发布文章" class="headerlink" title="8. 写文章、发布文章" target="_blank"></a>8. 写文章、发布文章</h2><hr><p>首先在博客根目录下右键打开<code>git bash</code>，安装一个扩展<code>npm i hexo-deployer-git</code>。</p><p>然后输入<code>hexo new post "article title"</code>，新建一篇文章。</p><p>然后打开<code>D:\Study\MyBlog\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。<br>你可以会直接在<code>vscode</code>里面编写<code>markdown</code>文件，可以实时预览，也可以用用其他编辑<code>md</code>文件的软件的工具编写。<br>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到<code>github</code>上。这时打开你的<code>github.io</code>主页就能看到发布的文章啦。</p><p>到这儿基本第一部分就完成了，已经完整搭建起一个比较简陋的个人博客了，接下来我们就可以对我们的博客进行个性化定制了。</p><h1 id="toc-heading-15"><a href="#第二部分-定制" class="headerlink" title="第二部分  定制" target="_blank"></a>第二部分  定制</h1><hr><p>我们要定制自己的博客的话，首先就要来了解一下<code>Hexo</code>博客的一些目录和文件的作用，以及如何平滑更换漂亮的主题模板并加入自己的定制源代码实现个性化定制</p><h2 id="toc-heading-16"><a href="#1-Hexo相关目录文件" class="headerlink" title="1. Hexo相关目录文件" target="_blank"></a>1. Hexo相关目录文件</h2><h3 id="toc-heading-17"><a href="#1-1-博客目录构成介绍" class="headerlink" title="1.1 博客目录构成介绍" target="_blank"></a>1.1 博客目录构成介绍</h3><hr><p>从上图可以看出，博客的目录结构如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-json"><code class="language-json">- node_modules- public- scaffolds- source    - _data    - _posts    - about    - archives    - categories    - friends    - tags- themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Json</div></div><p><code>node_modules</code>是<code>node.js</code>各种库的目录，<code>public</code>是生成的网页文件目录，<code>scaffolds</code>里面就三个文件，存储着新文章和新页面的初始设置，<code>source</code>是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，<code>themes</code>存放着主题文件，一般也用不到。</p><p>我们平时写文章只需要关注<code>source/_posts</code>这个文件夹就行了。</p><h3 id="toc-heading-18"><a href="#1-2-hexo基本配置" class="headerlink" title="1.2 hexo基本配置" target="_blank"></a>1.2 hexo基本配置</h3><hr><p>在文件根目录下的<code>_config.yml</code>，就是整个<code>hexo</code>框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">配置描述</a>。</p><h4 id="toc-heading-19"><a href="#1-2-1-网站" class="headerlink" title="1.2.1 网站" target="_blank"></a>1.2.1 网站</h4><hr><p>参数描述<code>title</code>网站标题<code>subtitle</code>网站副标题<code>description</code>网站描述<code>author</code>您的名字<code>language</code>网站使用的语言<code>timezone</code>网站时区。<code>Hexo</code> 默认使用您电脑的时区。时区列表。比如说：<code>America/New_York, Japan</code>, 和 <code>UTC</code> 。</p><p>其中，<code>description</code>主要用于<code>SEO</code>，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h4 id="toc-heading-20"><a href="#1-2-2-网址" class="headerlink" title="1.2.2 网址" target="_blank"></a>1.2.2 网址</h4><hr><p>参数描述<code>url</code>网址<code>root</code>网站根目录 <code>permalink</code>文章的<a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a>格式<code>permalink_defaults</code>永久链接中各部分的默认值</p><p>在这里，你需要把<code>url</code>改成你的<strong>网站域名</strong>。</p><p><code>permalink</code>，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫<code>temp.md</code>，那么这个时候他自动生成的地址就是<code>http://yoursite.com/2018/09/05/temp</code>。</p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a>  。</p><blockquote><p>参数结果:year/:month/:day/:title/2019/08/10/hello-world :year-:month-:day-:title.html 2019-08-10-hello-world.html :category/:titlefoo/bar/hello-world</p></blockquote><p>再往下翻，中间这些都默认就好了。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">theme: landscap<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p><code>theme</code>就是选择什么主题，也就是在<code>themes</code>这个文件夹下，在官网上有很多个主题，默认给你安装的是<code>lanscape</code>这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在<code>themes</code>文件夹下，再修改这个主题参数就可以了。</p><h4 id="toc-heading-21"><a href="#1-2-3-Front-matter" class="headerlink" title="1.2.3 Front-matter" target="_blank"></a>1.2.3 Front-matter</h4><hr><p><code>Front-matter</code> 是<code>md</code>文件最上方以 <code>---</code>分隔的区域，用于指定个别文件的变量，举例来说：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre><code>title: Hexo+Github博客搭建记录date: 2019-08-10 21:44:44</code></pre><div class="code_lang" title="代码语言"></div></div><p>下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><p>参数描述<code>layout</code>布局<code>title</code>标题<code>date</code>建立日期<code>updated</code>更新日期<code>comments</code>开启文章的评论功能<code>tags</code>标签（不适用于分页）<code>categories</code>分类（不适用于分页）<code>permalink</code>覆盖文章网址</p><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说<code>Foo</code>，<code>Bar</code>不等于<code>Bar</code>，<code>Foo</code>；而标签没有顺序和层次。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">---title: Hexo+Github博客搭建记录date: 2019-08-10 21:44:44author: 洪卫img: /medias/banner/7.jpgcoverImg: /medias/banner/7.jpgtop: truecover: truetoc: truepassword: 5f15b28ffe43f8be4f239bdd9b69af9d80dbafcb20a5f0df5d1677a120ae9110mathjax: truesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要tags:- Hexo- Github- 博客categories:- 软件安装与配置---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><h4 id="toc-heading-22"><a href="#1-2-4-layout（布局）" class="headerlink" title="1.2.4 layout（布局）" target="_blank"></a>1.2.4 layout（布局）</h4><hr><p><strong>1.2.4.1 post</strong></p><p>当你每一次使用代码</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo new XXX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>它其实默认使用的是<code>post</code>这个布局，也就是在<code>source</code>文件夹下的<code>_post</code>里面。</p><p><code>Hexo</code>有三种默认布局：<code>post</code>、<code>page</code>和<code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和<code>post</code>相同，都将储存到<code>source/_posts</code>文件夹。</p><p>而new这个命令其实是：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>只不过这个<code>layout</code>默认是<code>post</code>罢了。</p><p><strong>1.2.4.2 page</strong></p><p>如果你想另起一页，那么可以使用</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo new page newpage<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>系统会自动给你在<code>source</code>文件夹下创建一个<code>newpage</code>文件夹，以及<code>newpage</code>文件夹中的<code>index.md</code>，这样你访问的<code>newpage</code>对应的链接就是<a href="http://xxx.xxx/newpage" target="_blank" rel="noopener">http://xxx.xxx/newpage</a></p><p><strong>1.2.4.3 draft</strong></p><p><code>draft</code>是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo new draft newdraft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>这样会在<code>source/_draft</code>中新建一个<code>newdraft.md</code>文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo server --draft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到<code>post</code>中，</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash">hexo publish draft newdraft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>就会自动把<code>newdraft.md</code>发送到<code>post</code>中。</p><h2 id="toc-heading-23"><a href="#2-更换主题" class="headerlink" title="2. 更换主题" target="_blank"></a>2. 更换主题</h2><hr><p>我们在了解<code>Hexo</code>博客文件基础之后，知道主题文件就放在<code>themes</code>文件下，那么我们就可以去Hexo官网下载喜欢的主题，复制进去然后修改参数即可。<br>网上大多数主题都是github排名第一的<code>Next</code>主题，但是我个人不是很喜欢，我在网上看到一个主题感觉还不错：<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>，地址在<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">传送门</a>。这个主题看着比较漂亮，并且响应式比较友好，点起来很舒服，功能也比较很多。</p><blockquote><p>当然，人各有异，这个主题风格也不一定是你喜欢，那么你也可以跟着这教程类似的方法替换成你喜欢的就行了。</p></blockquote><blockquote><p>特性：</p></blockquote><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><p>他的介绍文档写得非常的详细，还有中英文两个版本。效果图如下：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/12.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/12.png" alt="" class="img-shadow img-margin"></div><p></p><p>首先先按照文档教程安装一遍主题，然后是可以正常打开的，如果你是一般使用的话，基本没啥问题了。不过有些地方有些地方可以根据你自己的习惯和喜好修改一下， 下面记录一下我这个博客修改了的一些地方。</p><h3 id="toc-heading-24"><a href="#2-1-新建文章模板修改" class="headerlink" title="2.1 新建文章模板修改" target="_blank"></a>2.1 新建文章模板修改</h3><hr><p>首先为了新建文章方便，我们可以修改一下文章模板，建议将<code>/scaffolds/post.md</code>修改为如下代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-json"><code class="language-json">---title<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span>date<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> date <span class="token punctuation">}</span><span class="token punctuation">}</span>author<span class="token operator">:</span> img<span class="token operator">:</span> coverImg<span class="token operator">:</span> top<span class="token operator">:</span> <span class="token boolean">false</span>cover<span class="token operator">:</span> <span class="token boolean">false</span>toc<span class="token operator">:</span> <span class="token boolean">true</span>mathjax<span class="token operator">:</span> <span class="token boolean">false</span>password<span class="token operator">:</span>summary<span class="token operator">:</span>tags<span class="token operator">:</span>categories<span class="token operator">:</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Json</div></div><p>这样新建文章后 一些<code>Front-matter</code>参数不用你自己补充了，修改对应信息就可以了。</p><h3 id="toc-heading-25"><a href="#2-2-添加404页面" class="headerlink" title="2.2 添加404页面" target="_blank"></a>2.2 添加404页面</h3><hr><p>原来的主题没有<code>404</code>页面，我们加一个。首先在<code>/source/</code>目录下新建一个<code>404.md</code>，内容如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-json"><code class="language-json">title<span class="token operator">:</span> <span class="token number">404</span>date<span class="token operator">:</span> <span class="token number">2019</span>-<span class="token number">08</span>-<span class="token number">5</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">10</span>type<span class="token operator">:</span> <span class="token string">"404"</span>layout<span class="token operator">:</span> <span class="token string">"404"</span>description<span class="token operator">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Json</div></div><p>然后在<code>/themes/matery/layout/</code>目录下新建一个<code>404.ejs</code>文件，内容如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style language-css">    <span class="token comment" spellcheck="true">/* don't remove. */</span>    <span class="token selector"><span class="token class">.about-cover</span> </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">75</span>vh<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><p><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>bg-cover pd-header about-cover<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>container<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>row<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>col s10 offset-s1 m8 offset-m2 l8 offset-l2<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>brand<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>title center-align<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>                        404<br>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><br>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>description center-align<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><br>                        &lt;%= page.description %&gt;<br>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><br>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><br>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><br>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><br>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><br><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></p><p><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"><br>    <span class="token comment" spellcheck="true">// 每天切换 banner 图.  Switch banner image every day.</span><br>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">‘.bg-cover’</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">‘background-image’</span><span class="token punctuation">,</span> <span class="token string">‘url(/medias/banner/‘</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">‘.jpg)’</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Html</div></div><p></p><h3 id="toc-heading-26"><a href="#2-3“关于”页面增加简历（可选）" class="headerlink" title="2.3“关于”页面增加简历（可选）" target="_blank"></a>2.3“关于”页面增加简历（可选）</h3><hr><p>修改<code>/themes/matery/layout/about.ejs</code>，找到<code>&lt;div class="card"&gt;</code>标签，然后找到它对应的<code>&lt;/div&gt;</code>标签，接在后面新增一个<code>card</code>，语句如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content article-card-content<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-address-book<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">__('myCV')</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>articleContent<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fade-up<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">page.content</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><p>这样就会多出一张<code>card</code>，然后可以在<code>/source/about/index.md</code>下面写上你的简历了，当然这里的位置随你自己设置，你也可以把简历作为第一个<code>card</code>。</p><h3 id="toc-heading-27"><a href="#2-4-数学公式渲染和代码高亮" class="headerlink" title="2.4 数学公式渲染和代码高亮" target="_blank"></a>2.4 数学公式渲染和代码高亮</h3><hr><p><strong>2.4.1 解决mathjax与代码高亮的冲突</strong></p><p>如果你按照教程安装了代码高亮插件<code>hexo-prism-plugin</code>，单独使用是没有问题的，但如果你又使用了<code>mathjax</code>，并且按照网上教程，安装<code>kramed</code>插件并修改了<code>js</code>文件里的正则表达式（为了解决<code>markdown</code>和<code>mathjax</code>的语法冲突），那你的代码就无法高亮了。解决方法很简单，别用<code>kramed</code>插件了，还用原来自带的<code>marked</code>插件，直接改它的正则表达式就行了。</p><p><strong>2.4.2 加数学公式显示</strong></p><p>打开<code>/themes/matery/layout</code>中的<code>post.ejs</code>文件，在最下方粘贴如下代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Javascript</div></div><p>由于<code>markdown</code>语法与<code>mathjax</code>语法存在冲突，所以还需要修改源文件。</p><p>打开<code>/node_modules/marked/lib</code>中的<code>marked.js</code>文件，第539行的<code>escape:</code>处替换成：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js">escape<span class="token punctuation">:</span> <span class="token regex">/^$[`*\[\]()#$+\-.!_&gt;])/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>第553行的<code>em:</code>处替换成：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js">em<span class="token punctuation">:</span> <span class="token regex">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>这时在文章里写数学公式基本没有问题了，但是要注意：<br><strong>数学公式中如果出现了连续两个{，中间一定要加空格！</strong></p><p>举个例子:<br>行内公式：<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-3-Frame" tabindex="0" data-mathml="<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy=&quot;false&quot;>(</mo><mi>x</mi><mo stretchy=&quot;false&quot;>)</mo></math>" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-20" style="width: 4.401em; display: inline-block;"><span style="display: inline-block; position: relative; width: 3.756em; height: 0px; font-size: 116%;"><span style="position: absolute; clip: rect(1.41em, 1003.64em, 2.759em, -999.997em); top: -2.343em; left: 0em;"><span class="mrow" id="MathJax-Span-21"><span class="mi" id="MathJax-Span-22" style="font-family: MathJax_Math-italic;">y<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mo" id="MathJax-Span-23" style="font-family: MathJax_Main; padding-left: 0.296em;">=</span><span class="mi" id="MathJax-Span-24" style="font-family: MathJax_Math-italic; padding-left: 0.296em;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.062em;"></span></span><span class="mo" id="MathJax-Span-25" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-26" style="font-family: MathJax_Math-italic;">x</span><span class="mo" id="MathJax-Span-27" style="font-family: MathJax_Main;">)</span></span><span style="display: inline-block; width: 0px; height: 2.349em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.337em; border-left: 0px solid; width: 0px; height: 1.296em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></math></span></span><script type="math/tex" id="MathJax-Element-3">y = f(x)</script><br>代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-tex"><code class="language-tex">$y = f(x)$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Tex</div></div><p>行间公式：<br><span class="MathJax_Preview" style="color: inherit;"></span></p><div class="MathJax_Display" style="text-align: center;"><span class="MathJax" id="MathJax-Element-4-Frame" tabindex="0" style="text-align: center; position: relative;" data-mathml="<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;><mi>y</mi><mo>=</mo><mrow class=&quot;MJX-TeXAtom-ORD&quot;><msub><mi>f</mi><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mrow class=&quot;MJX-TeXAtom-ORD&quot;><msub><mi>g</mi><mn>1</mn></msub></mrow></mrow></msub></mrow><mo stretchy=&quot;false&quot;>(</mo><mi>x</mi><mo stretchy=&quot;false&quot;>)</mo></math>" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-28" style="width: 5.164em; display: inline-block;"><span style="display: inline-block; position: relative; width: 4.46em; height: 0px; font-size: 116%;"><span style="position: absolute; clip: rect(1.41em, 1004.34em, 2.818em, -999.997em); top: -2.343em; left: 0em;"><span class="mrow" id="MathJax-Span-29"><span class="mi" id="MathJax-Span-30" style="font-family: MathJax_Math-italic;">y<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mo" id="MathJax-Span-31" style="font-family: MathJax_Main; padding-left: 0.296em;">=</span><span class="texatom" id="MathJax-Span-32" style="padding-left: 0.296em;"><span class="mrow" id="MathJax-Span-33"><span class="msubsup" id="MathJax-Span-34"><span style="display: inline-block; position: relative; width: 1.234em; height: 0px;"><span style="position: absolute; clip: rect(3.111em, 1000.53em, 4.343em, -999.997em); top: -3.985em; left: 0em;"><span class="mi" id="MathJax-Span-35" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.062em;"></span></span><span style="display: inline-block; width: 0px; height: 3.991em;"></span></span><span style="position: absolute; top: -3.809em; left: 0.472em;"><span class="texatom" id="MathJax-Span-36"><span class="mrow" id="MathJax-Span-37"><span class="texatom" id="MathJax-Span-38"><span class="mrow" id="MathJax-Span-39"><span class="msubsup" id="MathJax-Span-40"><span style="display: inline-block; position: relative; width: 0.648em; height: 0px;"><span style="position: absolute; clip: rect(3.522em, 1000.36em, 4.284em, -999.997em); top: -3.985em; left: 0em;"><span class="mi" id="MathJax-Span-41" style="font-size: 70.7%; font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span style="display: inline-block; width: 0px; height: 3.991em;"></span></span><span style="position: absolute; top: -3.809em; left: 0.355em;"><span class="mn" id="MathJax-Span-42" style="font-size: 50%; font-family: MathJax_Main;">1</span><span style="display: inline-block; width: 0px; height: 3.991em;"></span></span></span></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 3.991em;"></span></span></span></span></span></span><span class="mo" id="MathJax-Span-43" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-44" style="font-family: MathJax_Math-italic;">x</span><span class="mo" id="MathJax-Span-45" style="font-family: MathJax_Main;">)</span></span><span style="display: inline-block; width: 0px; height: 2.349em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.405em; border-left: 0px solid; width: 0px; height: 1.364em;"></span></span></nobr><span class="MJX_Assistive_MathML MJX_Assistive_MathML_Block" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>y</mi><mo>=</mo><mrow class="MJX-TeXAtom-ORD"><msub><mi>f</mi><mrow class="MJX-TeXAtom-ORD"><mrow class="MJX-TeXAtom-ORD"><msub><mi>g</mi><mn>1</mn></msub></mrow></mrow></msub></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></math></span></span></div><script type="math/tex; mode=display" id="MathJax-Element-4">y = {f_{ {g_1}}}(x)</script><br>代码：<p></p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-tex"><code class="language-tex">\\[y = {f_{ {g_1}}}(x)\\]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Tex</div></div><blockquote><p>注意上面花括号之间有空格！</p></blockquote><h3 id="toc-heading-28"><a href="#2-5-增加建站时间" class="headerlink" title="2.5 增加建站时间" target="_blank"></a>2.5 增加建站时间</h3><hr><p>修改<code>/themes/matery/layout/_partial</code>中的<code>footer.ejs</code>，在最后加上：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script language<span class="token operator">=</span>javascript<span class="token operator">&gt;</span>    <span class="token keyword">function</span> <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"siteTime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> seconds <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> minutes <span class="token operator">=</span> seconds <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> hours <span class="token operator">=</span> minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> days <span class="token operator">=</span> hours <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> years <span class="token operator">=</span> days <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayYear <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMonth <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayDate <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayHour <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMinute <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todaySecond <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)        year - 作为date对象的年份，为4位年份值        month - 0-11之间的整数，做为date对象的月份        day - 1-31之间的整数，做为date对象的天数        hours - 0(午夜24点)-23之间的整数，做为date对象的小时数        minutes - 0-59之间的整数，做为date对象的分钟数        seconds - 0-59之间的整数，做为date对象的秒数        microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span>        <span class="token keyword">var</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">09</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//北京时间2018-2-13 00:00:00</span>        <span class="token keyword">var</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span>todayYear<span class="token punctuation">,</span> todayMonth<span class="token punctuation">,</span> todayDate<span class="token punctuation">,</span> todayHour<span class="token punctuation">,</span> todayMinute<span class="token punctuation">,</span> todaySecond<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">;</span>        <span class="token keyword">var</span> diffYears <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> years<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> days<span class="token punctuation">)</span> <span class="token operator">-</span> diffYears <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days<span class="token punctuation">)</span> <span class="token operator">/</span> hours<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffMinutes <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours<span class="token punctuation">)</span> <span class="token operator">/</span> minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffSeconds <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours <span class="token operator">-</span> diffMinutes <span class="token operator">*</span> minutes<span class="token punctuation">)</span> <span class="token operator">/</span> seconds<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sitetime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"本站已运行 "</span> <span class="token operator">+</span>diffYears<span class="token operator">+</span><span class="token string">" 年 "</span><span class="token operator">+</span>diffDays <span class="token operator">+</span> <span class="token string">" 天 "</span> <span class="token operator">+</span> diffHours <span class="token operator">+</span> <span class="token string">" 小时 "</span> <span class="token operator">+</span> diffMinutes <span class="token operator">+</span> <span class="token string">" 分钟 "</span> <span class="token operator">+</span> diffSeconds <span class="token operator">+</span> <span class="token string">" 秒"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*因为建站时间还没有一年，就将之注释掉了。需要的可以取消*/</span>    <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>然后在合适的地方（比如<code>copyright</code>声明后面）加上下面的代码就行了：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sitetime<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><h3 id="toc-heading-29"><a href="#2-6-修改不蒜子初始化计数" class="headerlink" title="2.6 修改不蒜子初始化计数" target="_blank"></a>2.6 修改不蒜子初始化计数</h3><hr><p>因为不蒜子至今未开放注册，所以没办法在官网修改初始化，只能自己动手了。和上一条一样，我们在<code>/themes/matery/layout/_partial</code>里的<code>footer.ejs</code>文件最后加上：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><pre><code>    &lt;span class="token keyword"&gt;var&lt;/span&gt; int &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token function"&gt;setInterval&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;fixCount&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token number"&gt;50&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;  &lt;span class="token comment" spellcheck="true"&gt;// 50ms周期检测函数&lt;/span&gt;    &lt;span class="token keyword"&gt;var&lt;/span&gt; pvcountOffset &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;80000&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;  &lt;span class="token comment" spellcheck="true"&gt;// 初始化首次数据&lt;/span&gt;    &lt;span class="token keyword"&gt;var&lt;/span&gt; uvcountOffset &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;20000&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;    &lt;span class="token keyword"&gt;function&lt;/span&gt; &lt;span class="token function"&gt;fixCount&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;        &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;document&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;getElementById&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"busuanzi_container_site_pv"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;style&lt;span class="token punctuation"&gt;.&lt;/span&gt;display &lt;span class="token operator"&gt;!=&lt;/span&gt; &lt;span class="token string"&gt;"none"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"#busuanzi_value_site_pv"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;parseInt&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"#busuanzi_value_site_pv"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; pvcountOffset&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;            &lt;span class="token function"&gt;clearInterval&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;int&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;        &lt;span class="token punctuation"&gt;}&lt;/span&gt;        &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"#busuanzi_container_site_pv"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;css&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"display"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;!=&lt;/span&gt; &lt;span class="token string"&gt;"none"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"#busuanzi_value_site_uv"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;parseInt&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"#busuanzi_value_site_uv"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;html&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; uvcountOffset&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token comment" spellcheck="true"&gt;// 加上初始数据 &lt;/span&gt;            &lt;span class="token function"&gt;clearInterval&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;int&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token comment" spellcheck="true"&gt;// 停止检测&lt;/span&gt;        &lt;span class="token punctuation"&gt;}&lt;/span&gt;    &lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;</code></pre><p><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Js</div></div><p></p><p>然后把上面几行有段代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalTraffic)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_pv<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-heart-o<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>        本站总访问量 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalNumberOfvisitors)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_uv<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        人次,<span class="token entity" title="&nbsp;">&amp;nbsp;</span>访客数 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> 人.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><p>修改为：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalTraffic)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_pv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">='</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-heart-o<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>        本站总访问量 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalNumberOfvisitors)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_uv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">='</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span>        人次,<span class="token entity" title="&nbsp;">&amp;nbsp;</span>访客数 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> 人.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><p>其实就是增加了两个<code>style='display:none'</code>而已。</p><h3 id="toc-heading-30"><a href="#2-7-添加动漫人物" class="headerlink" title="2.7 添加动漫人物" target="_blank"></a>2.7 添加动漫人物</h3><hr><p>其实三步就行了，不用像网上有些教程那么复杂。</p><p><strong>第一步：</strong></p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p><strong>第二步：</strong></p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> live2d-widget-model-shizuku<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><blockquote><p>这里的动漫模型可以改，只需要下载对应模型就行了，你可以官方仓库去看有哪些模型，下载你喜欢的就行。</p></blockquote><p><strong>第三步：</strong><br>在根目录配置文件中添加如下代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">live2d:    enable: true    scriptFrom: local    pluginRootPath: live2dw/    pluginJsPath: lib/    pluginModelPath: assets/    tagMode: false    log: false    model:        use: live2d-widget-model-shizuku    display:        position: right        width: 150        height: 300    mobile:        show: false    react:        opacity: 0.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p>然后<code>hexo g</code>再<code>hexo s</code>就能预览出效果了，但是有个注意的地方，<strong>这个动漫人物最好不要和不蒜子同时使用</strong>，不然不蒜子会显示不出来。至于解决办法后续更新。</p><blockquote><p><strong>解决动漫人物和不蒜子不能同时使用的<code>bug</code>（2019.08.11）</strong>：</p></blockquote><p>打开<code>themes\matery\layout\_partial</code>中的<code>footer.ejs</code>，将本站总访问量和访客数的代码改为如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalTraffic<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_pv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-heart-o"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>        本站总访问量 <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_site_pv"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"white-color"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><p><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span></p><p><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalNumberOfvisitors<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span><br>    <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">“busuanzi_container_site_uv”</span> style<span class="token operator">=</span><span class="token string">‘display:none’</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><br>        人次<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>访客数 <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">“busuanzi_value_site_uv”</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">“white-color”</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span> 人<span class="token punctuation">.</span></p><p><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Js</div></div><p></p><p>变化就在下面两句，将源代码对应字段后面的<code>＜/span＞</code>写在前面了。</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_pv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_uv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><blockquote><p><strong>发现按照上面改了过后，又出现一个新<code>bug</code>：文章头部的阅读次数不显示了，解决办法：（2019.08.11）</strong>：</p></blockquote><p>打开<code>themes\matery\layout\_partial</code>中的<code>post-detail.ejs</code>，找到对应代码字段：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"busuanzi_container_page_pv"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info-break-policy"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-eye fa-fw"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'readCount'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>        <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_page_pv"</span> <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><p><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Js</div></div><p></p><p>修改为下面的就可以了：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_pv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-eye fa-fw"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'readCount'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>        <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_page_pv"</span> <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><p><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Js</div></div><p></p><h3 id="toc-heading-31"><a href="#2-8-添加评论插件" class="headerlink" title="2.8 添加评论插件" target="_blank"></a>2.8 添加评论插件</h3><hr><p>由于这个主题自带了<code>gittalk</code>、<code>gitment</code>、<code>valine</code>等评论插件，所以我们只需要对应插件参数就行了，这个博客用的是<code>gittalk</code>，如下：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/13.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/13.png" alt="" class="img-shadow img-margin"></div><p></p><p>当然也可以用其他评论插件，只需要配置对应项就是了，不是自带的可以照着网上的教程自己弄一个，类似的文章有很多，可以搜索关键字就行了。</p><h3 id="toc-heading-32"><a href="#2-9-添加网易云音乐BGM" class="headerlink" title="2.9 添加网易云音乐BGM" target="_blank"></a>2.9 添加网易云音乐BGM</h3><hr><p>写文章的时候，想插入一段<code>BGM</code>怎么办？</p><p>其实我们可以借助一些在线音乐的外链播放方式，首先打开网易云网页版，找到想听的歌曲，然后点击生成外链：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/14.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/14.png" alt="" class="img-shadow img-margin"></div><p></p><p>可能你会遇到问题，比如点击生成外链会提示你由于版权原因，不能生成，那么可以用下面办法<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-5-Frame" tabindex="0" data-mathml="<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x76EE;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x524D;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x8FD8;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x6709;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x6548;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#xFF0C;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x4E0D;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x77E5;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x9053;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x540E;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x9762;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x4F1A;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x4E0D;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x4F1A;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x5931;</mo></mrow><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mo>&amp;#x6548;</mo></mrow></math>" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-46" style="width: 16.013em; display: inline-block;"><span style="display: inline-block; position: relative; width: 13.784em; height: 0px; font-size: 116%;"><span style="position: absolute; clip: rect(1.293em, 1013.78em, 2.642em, -999.997em); top: -2.284em; left: 0em;"><span class="mrow" id="MathJax-Span-47"><span class="texatom" id="MathJax-Span-48"><span class="mrow" id="MathJax-Span-49"><span class="mo" id="MathJax-Span-50"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">目</span></span></span></span><span class="texatom" id="MathJax-Span-51"><span class="mrow" id="MathJax-Span-52"><span class="mo" id="MathJax-Span-53"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">前</span></span></span></span><span class="texatom" id="MathJax-Span-54"><span class="mrow" id="MathJax-Span-55"><span class="mo" id="MathJax-Span-56"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">还</span></span></span></span><span class="texatom" id="MathJax-Span-57"><span class="mrow" id="MathJax-Span-58"><span class="mo" id="MathJax-Span-59"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">有</span></span></span></span><span class="texatom" id="MathJax-Span-60"><span class="mrow" id="MathJax-Span-61"><span class="mo" id="MathJax-Span-62"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">效</span></span></span></span><span class="texatom" id="MathJax-Span-63"><span class="mrow" id="MathJax-Span-64"><span class="mo" id="MathJax-Span-65"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">，</span></span></span></span><span class="texatom" id="MathJax-Span-66"><span class="mrow" id="MathJax-Span-67"><span class="mo" id="MathJax-Span-68"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">不</span></span></span></span><span class="texatom" id="MathJax-Span-69"><span class="mrow" id="MathJax-Span-70"><span class="mo" id="MathJax-Span-71"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">知</span></span></span></span><span class="texatom" id="MathJax-Span-72"><span class="mrow" id="MathJax-Span-73"><span class="mo" id="MathJax-Span-74"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">道</span></span></span></span><span class="texatom" id="MathJax-Span-75"><span class="mrow" id="MathJax-Span-76"><span class="mo" id="MathJax-Span-77"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">后</span></span></span></span><span class="texatom" id="MathJax-Span-78"><span class="mrow" id="MathJax-Span-79"><span class="mo" id="MathJax-Span-80"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">面</span></span></span></span><span class="texatom" id="MathJax-Span-81"><span class="mrow" id="MathJax-Span-82"><span class="mo" id="MathJax-Span-83"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">会</span></span></span></span><span class="texatom" id="MathJax-Span-84"><span class="mrow" id="MathJax-Span-85"><span class="mo" id="MathJax-Span-86"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">不</span></span></span></span><span class="texatom" id="MathJax-Span-87"><span class="mrow" id="MathJax-Span-88"><span class="mo" id="MathJax-Span-89"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">会</span></span></span></span><span class="texatom" id="MathJax-Span-90"><span class="mrow" id="MathJax-Span-91"><span class="mo" id="MathJax-Span-92"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">失</span></span></span></span><span class="texatom" id="MathJax-Span-93"><span class="mrow" id="MathJax-Span-94"><span class="mo" id="MathJax-Span-95"><span style="font-family: STIXGeneral, &quot;Arial Unicode MS&quot;, serif; font-size: 86%; font-style: normal; font-weight: normal;">效</span></span></span></span></span><span style="display: inline-block; width: 0px; height: 2.29em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.269em; border-left: 0px solid; width: 0px; height: 1.296em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow class="MJX-TeXAtom-ORD"><mo>目</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>前</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>还</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>有</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>效</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>，</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>不</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>知</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>道</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>后</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>面</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>会</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>不</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>会</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>失</mo></mrow><mrow class="MJX-TeXAtom-ORD"><mo>效</mo></mrow></math></span></span><script type="math/tex" id="MathJax-Element-5">目前还有效，不知道后面会不会失效</script></p><ol><li>(以 <code>Chrome</code>为例，其他浏览器类似) 打开歌单页面，在“生成外链播放器”上右击，点击审查元素（检查）ctrl+shift+i；</li><li>接着找到生成外链播放器这段文字直接双击复制前面的<code>/outchain/2/20707408/</code> </li></ol><p></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/15.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/15.png" alt="" class="img-shadow img-margin"></div><p></p><ol start="3"><li>然后在浏览器地址栏修改歌单链接，示例：<a href="http://music.163.com/#//outchain/2/20707408/" target="_blank" rel="noopener">http://music.163.com/#//outchain/2/20707408/</a></li><li>然后就转到外链设置页面了。</li></ol><p>复制如下代码：</p><p></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/16.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/16.png" alt="" class="img-shadow img-margin"></div><p></p><p>粘贴到文章对应位置就行了，为了美观，设置一下居中，具体代码如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>这里粘贴刚刚复制的代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><h3 id="toc-heading-33"><a href="#2-10-博客音乐板块" class="headerlink" title="2.10 博客音乐板块" target="_blank"></a>2.10 博客音乐板块</h3><hr><p>如果我们自己写博客写疲劳了，想放松一下听听歌又不想切出博客主页，那么我们可以自己定制一个博客音乐播放界面，把自己喜欢的歌曲都放进来，这里用到是Aplayer插件，但是歌曲来源需要我们自己定义，但是，因为各大音乐平台，由于版权原因，很多歌曲是不支持外链播放的，难道我们就必须每首歌下载然后上传云空间，再获取词曲封面么？这就比较麻烦了。其实不然，研究了半个小时，我发现可以采取下面的办法，很方便：</p><ul><li>首先我们找到网易云在线平台，任意找到一首歌点进去播放，可以在地址栏拿到音乐<code>ID</code>号</li><li>然后通过下面网址：<a href="http://music.163.com/song/media/outer/url?id=XXXXXX.mp3，" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=XXXXXX.mp3，</a> <code>XXXXXX</code>就是歌曲<code>ID</code>号，每一首歌我们只需要换掉这个<code>ID</code>号就行了,就相当于每一首的外链了</li><li>最后封面图也可以按<code>F12</code>去找页面元素的链接，填到对应的<code>musics.jason</code>文件中就可以，批量填入，听到好听的歌曲随时更换随时新增，很方便。</li></ul><p>操作如下图：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/17.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/17.png" alt="" class="img-shadow img-margin"></div><p></p><h3 id="toc-heading-34"><a href="#2-11-增加emoji支持" class="headerlink" title="2.11 增加emoji支持" target="_blank"></a>2.11 增加emoji支持</h3><hr><p>为博客新增对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：:smile:  <code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yaml</div></div><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。<br>如下图：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/18.gif" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/18.gif" alt="emoji支持" class="img-shadow img-margin"><div class="caption"><b class="center-caption">emoji支持</b></div></div><p></p><h3 id="toc-heading-35"><a href="#2-12-Valine评论模块修改" class="headerlink" title="2.12 Valine评论模块修改" target="_blank"></a>2.12 Valine评论模块修改</h3><hr><p><code>matery</code>主题已经集成<code>Valine</code>评论模块，在主题配置文件.yml中配置相应的字段就行了。<code>enable: true</code>，<code>XXX</code>字段是需要自己注册登录<code>leancloud</code>官网，创建应用然后获取<code>appId</code>和<code>appKey</code>，其他参数根据自己的需求修改就是，如下：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">valine:  enable: true  appId: XXXXXXXXXXXXXXXXXXXXX  appKey: XXXXXXXXXXXXXXXXXXXX  notify: true  verify: true  visitor: true  avatar: 'mm' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  pageSize: 10  placeholder: 'just go go' # Comment Box placeholder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><blockquote><p>注意：<code>Valine</code>用在<code>matery</code>主题上有个<code>bug</code>就是第一条评论位置会错位</p></blockquote><p>如下图：<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/19.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/19.png" alt="位置错位" class="img-shadow img-margin"><div class="caption"><b class="center-caption">位置错位</b></div></div><p></p><p>解决办法：<br><code>F12</code>开发者模式，控制台定位<code>bug</code>位置，修改参数，调整对应主题源文件参数，得以解决，如下图示：</p><p></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/20.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/20.png" alt="定位bug位置" class="img-shadow img-margin"><div class="caption"><b class="center-caption">定位bug位置</b></div></div><br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/21.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/21.png" alt="修改图示" class="img-shadow img-margin"><div class="caption"><b class="center-caption">修改图示</b></div></div><p></p><h3 id="toc-heading-36"><a href="#2-13-添加博客动态标签" class="headerlink" title="2.13 添加博客动态标签" target="_blank"></a>2.13 添加博客动态标签</h3><hr><p>原理就是给博客增加一个事件判断，如下图所示：</p><p></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/40.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/40.png" alt="" class="img-shadow img-margin"></div><br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/41.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/41.png" alt="" class="img-shadow img-margin"></div><p></p><p>打开博客主题文件夹，路径：<code>themes/matery/layout/layout.ejs</code>，在对应位置添加如下代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>    <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span>        st<span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"看不见我🙈~看不见我🙈~"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span>            <span class="token string">"(๑•̀ㅂ•́) ✧被发现了～"</span><span class="token punctuation">,</span> st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>然后 <code>hexo clean</code>  &amp;&amp; <code>hexo g</code> 即可。</p><h3 id="toc-heading-37"><a href="#2-14-添加鼠标点击烟花爆炸效果" class="headerlink" title="2.14 添加鼠标点击烟花爆炸效果" target="_blank"></a>2.14 添加鼠标点击烟花爆炸效果</h3><hr><p>在 /themes/matery/source/js 新建文件 fireworks.js，并添加如下代码</p><p><a id="download" href="http://49.235.106.229/js/fireworks.js" target="_blank" rel="noopener"><i class="fa fa-download"></i><span> Download Now</span><br></a></p>然后在 /themes/matery/layout/_partial/footer.ejs 中添加如下代码：<div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>fireworks<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>canvas <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fireworks"</span> style<span class="token operator">=</span><span class="token string">"position: fixed; left: 0; top: 0; z-index: 1; pointer-events: none;"</span> <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/fireworks.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>在主题配置文件 .yml中配置:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml"># 鼠标点击烟花爆炸动效fireworks:  enable: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><h3 id="toc-heading-38"><a href="#2-15-添加页面樱花飘落动效" class="headerlink" title="2.15 添加页面樱花飘落动效" target="_blank"></a>2.15 添加页面樱花飘落动效</h3><hr><p>在 /themes/matery/source/js 新建文件 sakura.js，并添加如下代码</p><p><a id="download" href="http://49.235.106.229/js/sakura.js" target="_blank" rel="noopener"><i class="fa fa-download"></i><span> Download Now</span><br></a></p>然后在 /themes/matery/layout/_partial/head.ejs 中添加如下代码：<div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>sakura<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>    <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">&gt;</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/sakura.js"&gt;&lt;/script&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>在主题配置文件 .yml中配置:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml"># 页面樱花飘落动效sakura:  enable: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><h3 id="toc-heading-39"><a href="#2-16-添加鼠标点击文字特效" class="headerlink" title="2.16 添加鼠标点击文字特效" target="_blank"></a>2.16 添加鼠标点击文字特效</h3><hr><p>在 /themes/matery/source/js 新建文件 wenzi.js，并添加如下代码</p><p><a id="download" href="http://49.235.106.229/js/wenzi.js" target="_blank" rel="noopener"><i class="fa fa-download"></i><span> Download Now</span><br></a></p>然后在 /themes/matery/layout/_partial/head.ejs 中添加如下代码：<div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>wenzi<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>    <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">&gt;</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/wenzi.js"&gt;&lt;/script&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>在主题配置文件 .yml中配置:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml"># 页面樱花飘落动效wenzi:  enable: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><h3 id="toc-heading-40"><a href="#2-17-添加页面雪花飘落动效" class="headerlink" title="2.17 添加页面雪花飘落动效" target="_blank"></a>2.17 添加页面雪花飘落动效</h3><hr><p>在 /themes/matery/source/js 新建文件 xuehuapiaoluo.js，并添加如下代码</p><p><a id="download" href="http://49.235.106.229/js/xuehuapiaoluo.js" target="_blank" rel="noopener"><i class="fa fa-download"></i><span> Download Now</span><br></a></p>然后在 /themes/matery/layout/_partial/head.ejs 中添加如下代码：<div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>xuehuapiaoluo<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">&gt;</span>    <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">&gt;</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/xuehuapiaoluo.js"&gt;&lt;/script&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>在主题配置文件 .yml中配置:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml"># 页面樱花飘落动效xuehuapiaoluo:  enable: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><h3 id="toc-heading-41"><a href="#2-18-添加博客天气插件" class="headerlink" title="2.18 添加博客天气插件" target="_blank"></a>2.18 添加博客天气插件</h3><hr><p>在搜寻插件的过程中无意间用 google 搜到的一个网站，使用非常简单，在这里附上插件添加的方法</p><p>中国天气网：<a href="https://cj.weather.com.cn/plugin/pc" target="_blank" rel="noopener">https://cj.weather.com.cn/plugin/pc</a></p><p>选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成这样一段代码</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- Weather Widget --&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"> WIDGET <span class="token operator">=</span> <span class="token punctuation">{</span>FID<span class="token punctuation">:</span> <span class="token string">'your FID'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://apip.weatherdt.com/float/static/js/r.js?v<span class="token punctuation">=</span>1111<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><p>在 /themes/matery/source/layout/_widget 新建文件 weather.ejs，把上面生成的代码添加进入,可以设置只有桌面端显示,如下修改:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 天气接口  洪卫 shw2018 add 2019.09.09 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript">  WIDGET <span class="token operator">=</span> <span class="token punctuation">{</span>FID<span class="token punctuation">:</span> <span class="token string">'1tFpFZ5Mtj'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment" spellcheck="true">&lt;!-- &lt;script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111"&gt;&lt;/script&gt; --&gt;</span><p><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">“</span>text/javascript<span class="token punctuation">“</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"><br>  <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span><br>  <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>  <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">&gt;</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">‘&lt;script type=”text/javascript” src=”<a href="https://apip.weatherdt.com/float/static/js/r.js?v=1111&quot;><\/script>'" target="_blank" rel="noopener">https://apip.weatherdt.com/float/static/js/r.js?v=1111"&gt;&lt;\/script&gt;'</a></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>  <span class="token punctuation">}</span><br>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Html</div></div><p></p><p>然后在 /themes/matery/layout/_partial/layout.ejs 中添加如下代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 天气接口控件  洪卫 shw2018 add <span class="token number">2019.09</span><span class="token punctuation">.</span><span class="token number">09</span> <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>weather<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_widget/weather'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>在主题配置文件 .yml中配置:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml"># 天气接口插件weather:  enable: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p>展示效果可以参考我的<a href="https://sunhwee.com/" target="_blank">主页</a></p><p><strong>当然,如果你不想搞这么复杂,可以直接将下面代码插入 /themes/matery/layout/_partial/layout.ejs 中即可使用:</strong></p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript">    WIDGET <span class="token operator">=</span> <span class="token punctuation">{</span>FID<span class="token punctuation">:</span> <span class="token string">'1tFpFZ5Mtj'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://apip.weatherdt.com/float/static/js/r.js?v<span class="token punctuation">=</span>1111<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Html</div></div><h3 id="toc-heading-42"><a href="#2-19-修复-Valine-头像不显示问题" class="headerlink" title="2.19 修复 Valine 头像不显示问题" target="_blank"></a>2.19 修复 Valine 头像不显示问题</h3><p>关于头像显示问题，先去注册<a href="https://cn.gravatar.com/" target="_blank" rel="noopener">Gravatar</a>，之前看文档说是七天的同步时间，结果一直也没有显示头像，检查查看头像链接，发现把&amp;v=1.3.x 去掉就可以了，于是下载 js 文件 valine，下载后然后编辑，搜索关键字 <code>&amp;v=</code>，找到 g.params=”?d=”+<span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-6-Frame" tabindex="0" data-mathml="<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>i</mi><mo>.</mo><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mi>O</mi><mi>f</mi><mo stretchy=&quot;false&quot;>(</mo><mi>a</mi></math>" role="presentation" style="position: relative;"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-96" style="width: 6.395em; display: inline-block;"><span style="display: inline-block; position: relative; width: 5.515em; height: 0px; font-size: 116%;"><span style="position: absolute; clip: rect(1.41em, 1005.51em, 2.759em, -999.997em); top: -2.343em; left: 0em;"><span class="mrow" id="MathJax-Span-97"><span class="mi" id="MathJax-Span-98" style="font-family: MathJax_Math-italic;">i</span><span class="mo" id="MathJax-Span-99" style="font-family: MathJax_Main;">.</span><span class="mi" id="MathJax-Span-100" style="font-family: MathJax_Math-italic; padding-left: 0.179em;">i</span><span class="mi" id="MathJax-Span-101" style="font-family: MathJax_Math-italic;">n</span><span class="mi" id="MathJax-Span-102" style="font-family: MathJax_Math-italic;">d<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-103" style="font-family: MathJax_Math-italic;">e</span><span class="mi" id="MathJax-Span-104" style="font-family: MathJax_Math-italic;">x</span><span class="mi" id="MathJax-Span-105" style="font-family: MathJax_Math-italic;">O</span><span class="mi" id="MathJax-Span-106" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.062em;"></span></span><span class="mo" id="MathJax-Span-107" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-108" style="font-family: MathJax_Math-italic;">a</span></span><span style="display: inline-block; width: 0px; height: 2.349em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.337em; border-left: 0px solid; width: 0px; height: 1.296em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi><mo>.</mo><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mi>O</mi><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi></math></span></span><script type="math/tex" id="MathJax-Element-6">i.indexOf(a</script>&gt;-1?a:”mp”)+”&amp;v=”+o+d，将 <code>"&amp;v="+o+d</code> 删除即可，然后在 Gravatar 拿到头像的 <code>url</code> 填上去就行了</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">valine:  enable: true  appId:   appKey:   notify: true  verify: true  visitor: true  # avatar: 'mp' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  avatar: https://s.gravatar.com/avatar/0007991f99268c04f1aa4cdd9bea93b4?s=80   pageSize: 10  placeholder: '没有Github账号的在这里留言评论～' # Comment Box placeholder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p>原因就是链接后跟了个 <code>&amp;v=1.3.x</code>，解决就是将这段删掉就可以了，具体到 <code>Valine.mini.js</code> 文件就是删掉 <code>&amp;v="+o+d</code>即可</p><h3 id="toc-heading-43"><a href="#2-20-增加二级菜单" class="headerlink" title="2.20 增加二级菜单" target="_blank"></a>2.20 增加二级菜单</h3><p>都知道，我们标题栏宽度有限，我们项目一多了，就放不下了，这时候你肯定就需要一个二级菜单来拆分一下项目，既可以减少标题栏项目数，使之更加清爽，又可以间项目分类，逻辑清晰。</p><p>好了，如果你用的matery主题，那么废话不多说，直接上教程，其实需要修改的就四个地方：matery.css/matery.js/navgation.ejs/mobile-nav.ejs</p><p>第一步，在 /themes/matery/layout/_partial 中找到 mobile-nav.ejs ，找到下面这段代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"menu-list mobile-menu-list"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %&gt;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>githubLink <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"divider"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.githubLink.url %&gt;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-github-square fa-fw"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>替换成下面的：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 支持二级菜单特性 洪卫 shw2018 modify <span class="token number">2019.09</span><span class="token punctuation">.</span><span class="token number">17</span>  <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"menu-list mobile-menu-list"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"m-nav-item"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %&gt;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"m-icon"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-chevron-right"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>                  <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> childrenLink <span class="token keyword">of</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>                       <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- url_for(childrenLink.url)%&gt;"</span> <span class="token operator">&gt;</span>                           <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLink<span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> childrenLink<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- childrenLink.icon %&gt;"</span> style<span class="token operator">=</span><span class="token string">"left: 25px; position: absolute;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>                       <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                       <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> childrenLink<span class="token punctuation">.</span>name <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                  <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">&gt;</span><pre><code>    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;githubLink &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;githubLink&lt;span class="token punctuation"&gt;.&lt;/span&gt;enable&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;div &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"divider"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;div&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;a href&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"&amp;lt;%- theme.githubLink.url %&amp;gt;"&lt;/span&gt; &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"waves-effect waves-light"&lt;/span&gt; target&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"_blank"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;i &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"fa fa-github-square fa-fw"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;i&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt; theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;githubLink&lt;span class="token punctuation"&gt;.&lt;/span&gt;title &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;a&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;</code></pre><p><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Js</div></div><p></p><p>第二步，在 /themes/matery/layout/_partial 中找到 navagtion.ejs ，找到下面这段代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"mobile-nav"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidenav-trigger button-collapse"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-navicon"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hide-on-med-and-down"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %&gt;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#searchModal"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"modal-trigger waves-effect waves-light"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>i id<span class="token operator">=</span><span class="token string">"searchIcon"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-search"</span> title<span class="token operator">=</span><span class="token string">"&lt;%= __('search') %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Js</div></div><p>替换成下面的：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 支持二级菜单特性 洪卫 shw2018 modify <span class="token number">2019.09</span><span class="token punctuation">.</span><span class="token number">17</span>  <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"mobile-nav"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidenav-trigger button-collapse"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-navicon"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right nav-menu"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hide-on-med-and-down nav-item"</span> <span class="token operator">&gt;</span><pre><code>    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token operator"&gt;!&lt;/span&gt;theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;menu&lt;span class="token punctuation"&gt;[&lt;/span&gt;key&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;children&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;a href&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"&amp;lt;%- theme.menu[key].url %&amp;gt;"&lt;/span&gt; &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"waves-effect waves-light"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;menu&lt;span class="token punctuation"&gt;[&lt;/span&gt;key&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;icon &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;menu&lt;span class="token punctuation"&gt;[&lt;/span&gt;key&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;icon&lt;span class="token punctuation"&gt;.&lt;/span&gt;length &lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;i &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"fa &amp;lt;%- theme.menu[key].icon %&amp;gt;"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;i&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;span&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;config&lt;span class="token punctuation"&gt;.&lt;/span&gt;language &lt;span class="token operator"&gt;===&lt;/span&gt; &lt;span class="token string"&gt;'zh-CN'&lt;/span&gt; &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; menuMap&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;has&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;key&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;?&lt;/span&gt; menuMap&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token keyword"&gt;get&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;key&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; key &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;span&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;a&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token keyword"&gt;else&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;a href&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"&amp;lt;%- theme.menu[key].url %&amp;gt;"&lt;/span&gt; &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"waves-effect waves-light"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;menu&lt;span class="token punctuation"&gt;[&lt;/span&gt;key&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;icon &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;menu&lt;span class="token punctuation"&gt;[&lt;/span&gt;key&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;icon&lt;span class="token punctuation"&gt;.&lt;/span&gt;length &lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;              &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;i &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"fa &amp;lt;%- theme.menu[key].icon %&amp;gt;"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;i&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;span&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;config&lt;span class="token punctuation"&gt;.&lt;/span&gt;language &lt;span class="token operator"&gt;===&lt;/span&gt; &lt;span class="token string"&gt;'zh-CN'&lt;/span&gt; &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; menuMap&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;has&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;key&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;?&lt;/span&gt; menuMap&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token keyword"&gt;get&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;key&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; key &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;span&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;i &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"fa fa-chevron-down"&lt;/span&gt; aria&lt;span class="token operator"&gt;-&lt;/span&gt;hidden&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"true"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;i&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;a&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;ul &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"sub-nav menus_item_child "&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token keyword"&gt;for&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;let&lt;/span&gt; childrenLink &lt;span class="token keyword"&gt;of&lt;/span&gt; theme&lt;span class="token punctuation"&gt;.&lt;/span&gt;menu&lt;span class="token punctuation"&gt;[&lt;/span&gt;key&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;children&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;               &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;a href&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"&amp;lt;%- url_for(childrenLink.url)%&amp;gt;"&lt;/span&gt; &lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;                &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;childrenLink&lt;span class="token punctuation"&gt;.&lt;/span&gt;icon &lt;span class="token operator"&gt;&amp;amp;&amp;amp;&lt;/span&gt; childrenLink&lt;span class="token punctuation"&gt;.&lt;/span&gt;icon&lt;span class="token punctuation"&gt;.&lt;/span&gt;length &lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt; &lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;                  &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;i &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"fa &amp;lt;%- childrenLink.icon %&amp;gt;"&lt;/span&gt; style&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"margin-top: -20px;"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;i&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;                &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;                &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;span&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt; childrenLink&lt;span class="token punctuation"&gt;.&lt;/span&gt;name &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;span&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;              &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;a&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;            &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;          &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;         &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;ul&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;      &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;%&lt;/span&gt; &lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt; &lt;span class="token operator"&gt;%&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;a href&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"#searchModal"&lt;/span&gt; &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"modal-trigger waves-effect waves-light"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;        &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;i id&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"searchIcon"&lt;/span&gt; &lt;span class="token keyword"&gt;class&lt;/span&gt;&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"fa fa-search"&lt;/span&gt; title&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;"&amp;lt;%= __('search') %&amp;gt;"&lt;/span&gt;&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;i&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;a&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;&lt;span class="token operator"&gt;&amp;lt;&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;li&lt;span class="token operator"&gt;&amp;gt;&lt;/span&gt;</code></pre><p><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Js</div></div><p></p><p>第三步，在 /themes/matery/source/css 中找到 matery.css ，在最后添加下面这段代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 二级菜单样式定义 洪卫 shw2018 add 2019.09.17 */</span><p><span class="token selector"><span class="token class">.nav-menu</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> </span><span class="token punctuation">{</span><br>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><br>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">77</span>px<span class="token punctuation">;</span><br>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span><br>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> li </span><span class="token punctuation">{</span><br>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><br>    <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><br>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">140</span>px<span class="token punctuation">;</span><br>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span><br>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span><br>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> li a </span><span class="token punctuation">{</span><br>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">34</span>px<span class="token punctuation">;</span><br>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">34</span>px<span class="token punctuation">;</span><br>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">138</span>px<span class="token punctuation">;</span><br>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span><br>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><br>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span><br>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.nav-show</span> i<span class="token attribute">[aria-hidden=true]</span> </span><span class="token punctuation">{</span><br>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.menus_item_child</span> </span><span class="token punctuation">{</span><br>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token property">width</span><span class="token punctuation">:</span> fit-content<span class="token punctuation">;</span><br>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><br>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">20</span>px -<span class="token number">4</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">20</span>px -<span class="token number">4</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.98</span><span class="token punctuation">;</span><br>    <span class="token property">-ms-filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br>    <span class="token property">filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><br>    <span class="token property">-moz-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><br>    <span class="token property">-o-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><br>    <span class="token property">-ms-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><br>    <span class="token property">animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.menus_item_child</span><span class="token pseudo-element">:before</span> </span><span class="token punctuation">{</span><br>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">“”</span><span class="token punctuation">;</span><br>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><br>    <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span><br>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><br>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">10</span>px<span class="token punctuation">;</span><br>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><br>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span><br>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-item</span> </span><span class="token punctuation">{</span><br>    <span class="token comment" spellcheck="true">/* position: relative; */</span><br>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">45</span>px<br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-item</span> ul </span><span class="token punctuation">{</span><br>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-item</span> ul li </span><span class="token punctuation">{</span><br>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">245</span>px<span class="token punctuation">;</span><br>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span><br>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span><br>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-show</span> <span class="token class">.m-icon</span> </span><span class="token punctuation">{</span><br>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><br>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-show</span> <span class="token class">.m-nav-item</span>&gt;a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span><br>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span><br>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-show</span>&gt;a<span class="token pseudo-element">:before</span>,<br><span class="token class">.m-nav-item</span>&gt;a<span class="token pseudo-class">:hover</span><span class="token pseudo-element">:before</span> </span><span class="token punctuation">{</span><br>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.m-nav-item</span> <span class="token class">.m-icon</span> </span><span class="token punctuation">{</span><br>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><br>    <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">65</span>px<span class="token punctuation">;</span><br>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span><br>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span><br>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span><br><span class="token punctuation">}</span></p><p><span class="token selector"><span class="token class">.nav-item</span> li<span class="token pseudo-class">:hover</span> a </span><span class="token punctuation">{</span><br>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span><br>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre><div class="code_lang" title="代码语言">Css</div></div><p></p><p>第四步，在 /themes/matery/source/js 中找到 matery.js ，在最后一个 <code>});</code>前添加下面这段代码：</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 增加二级菜单功能 洪卫 shw2018 add 2019.09.17</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".nav-menu&gt;li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><pre><code>&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;&lt;span class="token keyword"&gt;function&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;{&lt;/span&gt;    &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;children&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'ul'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;stop&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token boolean"&gt;true&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;&lt;span class="token boolean"&gt;true&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;hide&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;    &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'.nav-item.nav-show'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;removeClass&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'nav-show'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'.m-nav-item&amp;gt;a'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;on&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'click'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;&lt;span class="token keyword"&gt;function&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;{&lt;/span&gt;        &lt;span class="token keyword"&gt;if&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;next&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'ul'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;css&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'display'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token operator"&gt;==&lt;/span&gt; &lt;span class="token string"&gt;"none"&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'.m-nav-item'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;children&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'ul'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;slideUp&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token number"&gt;300&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;next&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'ul'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;slideDown&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token number"&gt;300&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;parent&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'li'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;addClass&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'m-nav-show'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;siblings&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'li'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;removeClass&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'m-nav-show'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;        &lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token keyword"&gt;else&lt;/span&gt;&lt;span class="token punctuation"&gt;{&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token keyword"&gt;this&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;next&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'ul'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;slideUp&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token number"&gt;300&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;            &lt;span class="token function"&gt;$&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'.m-nav-item.m-nav-show'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token function"&gt;removeClass&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'m-nav-show'&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;        &lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;;&lt;/span&gt;&lt;span aria-hidden="true" class="line-numbers-rows"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class="code_lang" title="代码语言"&gt;Js&lt;/div&gt;&lt;/div&gt;</code></pre><p>第五步，在主题配置文件.yml修改标题栏内容，按下面格式更改:</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml">  标题一级:     url: /XXX    icon: fa-XXXX    children:       -        name: 标题二级1        url: /XXX/XXX        icon: fa-XXXX      -        name: 标题二级2        url: /XXX/XXX        icon: fa-XXXX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p>第六步，source 文件夹新疆对应的标题目录，并放 index.md 模板就行了。</p><p>到这一步就大功告成了，快去体验吧。</p><hr><h1 id="toc-heading-44"><a href="#第三部分-优化" class="headerlink" title="第三部分 优化" target="_blank"></a>第三部分 优化</h1><hr><p><code>hexo</code>添加各种优化功能，比如<code>SEO</code>优化等。<br>待续……</p><h2 id="toc-heading-45"><a href="#1-网站SEO优化" class="headerlink" title="1. 网站SEO优化" target="_blank"></a>1. 网站SEO优化</h2><hr><p>网站推广是一个比较烦人的事情，特别是对于专心搞技术的来说，可能就不是很擅长，那么怎么才能让别人知道我们网站呢？也就是说我们需要想办法让别人通过搜索就可以搜索到博客的内容，给我们带来自然流量，这就需要<code>seo</code>优化,让我们的站点变得对搜索引擎友好</p><blockquote><p><code>SEO</code>是由英文<code>Search Engine Optimization</code>缩写而来， 中文意译为“搜索引擎优化”。<code>SEO</code>是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p></blockquote><h3 id="toc-heading-46"><a href="#1-1-让百度收录你的站点" class="headerlink" title="1.1 让百度收录你的站点" target="_blank"></a>1.1 让百度收录你的站点</h3><hr><p>首先要做的就是让各大搜索引擎收录你的站点，我们在刚建站的时候各个搜索引擎是没有收录我们网站的，在搜索引擎中输入<code>site:&lt;域名&gt;</code>,如果如下图所示就是说明我们的网站并没有被百度收录。我们可以直接点击下面的“网址提交”来提交我们的网站</p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/22.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/22.png" alt="查看站点是否被百度收录" class="img-shadow img-margin"><div class="caption"><b class="center-caption">查看站点是否被百度收录</b></div></div><p></p><h4 id="toc-heading-47"><a href="#1-1-1-验证网站所有权" class="headerlink" title="1.1.1 验证网站所有权" target="_blank"></a>1.1.1 验证网站所有权</h4><hr><p>登录百度站长搜索资源平台：<a href="http://zhanzhang.baidu.com，" target="_blank" rel="noopener">http://zhanzhang.baidu.com，</a> 只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击<a href="http://zhanzhang.baidu.com/site/siteadd" target="_blank" rel="noopener">添加网站</a>然后输入你的站点地址。</p><blockquote><p>注意，这里需要输入我们自己购买的域名,不能使用<code>xxx.github.io</code>之类域名.因为<code>github</code>是不允许百度的<code>spider</code>（蜘蛛）爬取<code>github</code>上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名</p></blockquote><p></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/23.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/23.png" alt="向百度站长添加网站" class="img-shadow img-margin"><div class="caption"><b class="center-caption">向百度站长添加网站</b></div></div><p></p><p>在填完网址选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：</p><ul><li>文件验证。</li><li><code>html</code>标签验证</li><li><code>CNAME</code>解析验证（<strong>推荐使用</strong>）</li></ul><p></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/24.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/24.png" alt="验证网站所有权" class="img-shadow img-margin"><div class="caption"><b class="center-caption">验证网站所有权</b></div></div><p></p><p>其实使用哪一种方式都可以，都是比较简单的。</p><blockquote><p><strong>但是一定要注意，使用文件验证文件存放的位置需要放在<code>sourc</code>文件夹下，如果是<code>html</code>文件那么<code>hexo</code>就会将其编译，所以必须要在<code>html</code>头部加上的<code>layout:false</code>，这样就不会被<code>hexo</code>编译。（如果验证文件是<code>txt</code>格式的就不需要）</strong></p></blockquote><p>其他两种方式也是很简单的，个人推荐<code>文件验证</code>和<code>CNAME</code>验证，<code>CNAME</code>验证最为简单，只需加一条解析就好~<br></p><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/25.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/25.png" alt="添加云解析" class="img-shadow img-margin"><div class="caption"><b class="center-caption">添加云解析</b></div></div><br><div class="img-item" data-src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/26.png" data-sub-html=".caption"><img src="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Hexo-Blog-Tutorial/26.png" alt="验证通过" class="img-shadow img-margin"><div class="caption"><b class="center-caption">验证通过</b></div></div><p></p><h4 id="toc-heading-48"><a href="#1-1-2-生成网站地图" class="headerlink" title="1.1.2 生成网站地图" target="_blank"></a>1.1.2 生成网站地图</h4><hr><p>我们需要使用<code>npm</code>自动生成网站的<code>sitemap</code>，然后将生成的<code>sitemap</code>提交到百度和其他搜索引擎</p><h5 id="toc-heading-49"><a href="#1-1-2-1-安装sitemap插件" class="headerlink" title="1.1.2.1 安装sitemap插件" target="_blank"></a>1.1.2.1 安装sitemap插件</h5><hr><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save     <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Bash</div></div><h5 id="toc-heading-50"><a href="#1-1-2-2-修改博客配置文件" class="headerlink" title="1.1.2.2 修改博客配置文件" target="_blank"></a>1.1.2.2 修改博客配置文件</h5><hr><p>在根目录配置文件<code>.yml</code>中修改<code>url</code>为你的站点地址</p><div class="code-area" style="position: relative"><i class="fa fa-chevron-down code-expand" aria-hidden="true"></i><i class="fa fa-copy code_copy" title="复制代码" aria-hidden="true"></i><pre class="line-numbers language-yml"><code class="language-yml"># URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'# url: https://shw2018.github.io/url: https://sunhwee.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="code_lang" title="代码语言">Yml</div></div><p>执行完<code>hexo g</code>命令之后就会在网站根目录生成<code>sitemap.xml</code>文件和<code>baidusitemap.xml文件</code>，可以通过：<a href="https://sunhwee.com/baidusitemap.xml" target="_blank">https://sunhwee.com/baidusitemap.xml</a>,  查看该文件是否生成，其中<code>sitemap.xml</code>文件是搜索引擎通用的文件，<code>baidusitemap.xml</code>是百度专用的<code>sitemap</code>文件。</p><h4 id="toc-heading-51"><a href="#1-1-3-向百度提交链接" class="headerlink" title="1.1.3 向百度提交链接" target="_blank"></a>1.1.3 向百度提交链接</h4><hr><p>然后我们就可以将我们生成的<code>sitemap</code>文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和<code>sitemap</code></p><blockquote><p>如何选择链接提交方式</p><ol><li>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</li><li>自动推送：最为便捷的提交方式，请将自动推送的<code>JS</code>代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</li><li><code>sitemap</code>：您可以定期将网站链接放到<code>sitemap</code>中，然后将<code>sitemap</code>提交给百度。百度会周期性的抓取检查您</li></ol></blockquote></code></pre></div></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 备忘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Hexo图片无法显示问题</title>
      <link href="/2020/05/31/jie-jue-hexo-tu-pian-wu-fa-xian-shi-wen-ti/"/>
      <url>/2020/05/31/jie-jue-hexo-tu-pian-wu-fa-xian-shi-wen-ti/</url>
      
        <content type="html"><![CDATA[<blockquote><p>解决Hexo图片无法显示问题</p></blockquote><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>版本：hexo 3以上<br>最近搭建hexo博客时遇到了图片部署后不显示的问题，如图：<br><img src="/2020/05/31/jie-jue-hexo-tu-pian-wu-fa-xian-shi-wen-ti/1.png?v=1&amp;type=image" alt="问题复现"><br>上网找了很多方式都没有完美解决问题，后来查看了官方文档后终于解决了问题（完美解决），现在贴出来如下。建议以后大家遇到了问题也先去看看官方文档：<a href="https://hexo.io/zh-cn/docs" target="_blank" rel="noopener" title="hexo文档">https://hexo.io/zh-cn/docs</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>　　1. 在根目录下配置文件<code>_config.yml</code>  中有  <code>post_asset_folder:false改为true</code>。这样在建立文件时，<code>Hexo</code>会自动建立一个与文章同名的文件夹，这样就可以把与该文章相关的所有资源（图片）都放到那个文件夹里方便后面引用。如这里我放了一张test.jpg的图片。</p><p>　　2. git bash安装插件：npm install <a href="https://github.com/7ym0n/hexo-asset-image" target="_blank" rel="noopener">https://github.com/7ym0n/hexo-asset-image</a> –save（这是个修改过的插件，经测试无问题），使用这个插件来引入图片，而不是网上那些方法里说的用传统md语法相对路径的方法。</p><p>　　3. 插入图片时用这种方式：</p><pre><code>     ![图片描述](本地图片测试/test.jpg)</code></pre><p>　    其中test.jpg就是你要引用的图片，我这里就是test.jpg，前面的[]里是图片描述，可以自己修改。“本地图片测试”是和发布的博客同名的文件夹。<br>　    4. 这样就能成功显示了，测试下吧：hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PPT分享-GeoInsider 第22期：基于Earth Engine与开源GIS的云计算与交互式制图</title>
      <link href="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/"/>
      <url>/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>本文是我在参加了GeoInsider 第22期分享后记录的相关信息和心得。在网页上，用户可以便捷使用google engine近四十年来的landsat和modis卫星数据进行遥感分析，一切的计算分析过程都在云端进行，不需要消耗本地的计算资源。并且由于云端有现成的经过预处理的卫星遥感影像，很多对数据要求不高，专注于算法设计和实现需求的用户可以避免前期复杂繁琐的图像搜集、下载和预处理功能，这些在google engine中可以用几行代码简单解决。本期GeoInsider 邀请到的吴秋生博士几乎独立开发了基于google engine和python语言的API：Geemap。这个项目开发的初衷是因为吴博士在使用google engine时发现它对于JavaScript的支持非常好，但是缺乏对于Python的支持。PPT中也提及到Python和google engine结合，可以使用户更加个性化的定制自己的项目，例如：加载很多Python的包、脚本之间共享代码、批处理、代码调试、个性的可视化方案、访问本地数据等，这些都是JavaScript难以做到的。吴博士所做的工作全部都是开源的，ppt中有该项目在github上的开源地址，另外有条件的读者可以到YouTube上观看吴博士做的实例视频，国内的读者可以到西瓜视频观看学习（国内的视频因为zz原因，更新较慢），上述地址在github上也有。</p></blockquote><h2 id="GeoInsider简介"><a href="#GeoInsider简介" class="headerlink" title="GeoInsider简介"></a>GeoInsider简介</h2><p>GeoInsider是一个最初由旧金山湾区的GeoScience同行自发形成的公益性交流平台，定位在顶级的产学研交叉，包括PNS级讲座、产业应用转化、留学Intern教职申请等交流，迄今已邀请发表过Science、Nature等高水平文章，以及来自Harvard、Berkeley等顶级机构的Webinar报告交流，是一个扩大学术影响力的平台。<br>  ##</p><h2 id="Earth-Engine简介"><a href="#Earth-Engine简介" class="headerlink" title="Earth Engine简介"></a>Earth Engine简介</h2><p>位于美国加州的斯坦福和硅谷是“产学研”完美结合的典范，这里孕育了第一个数字地球Google Earth。而近几年蓬勃发展的GEE（Google Earth Engine）是Google提供的对大量全球尺度地球科学资料(尤其是卫星数据)进行在线可视化计算和分析处理的云平台。<br>  ##</p><h2 id="GeoInsider第22期的报告PPT分享"><a href="#GeoInsider第22期的报告PPT分享" class="headerlink" title="GeoInsider第22期的报告PPT分享"></a>GeoInsider第22期的报告PPT分享</h2><p>本PPT来自吴秋生博士在GeoInsider第22期的<a href="https://mp.weixin.qq.com/s/12K4RoiHGfKBflWY55L9Kw" target="_blank" rel="noopener">报告</a>，在微信公众号“GeoInsider地球科学前沿进展”发布，本期及往期视频在B站账号：GeoInsider主页，欢迎粉丝加为关注并观看：<a href="https://space.bilibili.com/579909660" target="_blank" rel="noopener">https://space.bilibili.com/579909660</a><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/1.png?v=1&amp;type=image" alt="1"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/2.png?v=1&amp;type=image" alt="2"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/3.png?v=1&amp;type=image" alt="3"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/4.png?v=1&amp;type=image" alt="4"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/5.png?v=1&amp;type=image" alt="5"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/6.png?v=1&amp;type=image" alt="6"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/7.png?v=1&amp;type=image" alt="7"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/8.png?v=1&amp;type=image" alt="8"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/9.png?v=1&amp;type=image" alt="9"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/10.png?v=1&amp;type=image" alt="10"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/11.png?v=1&amp;type=image" alt="11"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/12.png?v=1&amp;type=image" alt="12"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/13.png?v=1&amp;type=image" alt="13"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/14.png?v=1&amp;type=image" alt="14"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/15.png?v=1&amp;type=image" alt="15"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/16.png?v=1&amp;type=image" alt="16"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/17.png?v=1&amp;type=image" alt="17"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/18.png?v=1&amp;type=image" alt="18"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/19.png?v=1&amp;type=image" alt="19"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/20.png?v=1&amp;type=image" alt="20"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/21.png?v=1&amp;type=image" alt="21"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/22.png?v=1&amp;type=image" alt="22"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/23.png?v=1&amp;type=image" alt="23"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/24.png?v=1&amp;type=image" alt="24"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/25.png?v=1&amp;type=image" alt="25"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/26.png?v=1&amp;type=image" alt="26"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/27.png?v=1&amp;type=image" alt="27"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/28.png?v=1&amp;type=image" alt="28"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/29.png?v=1&amp;type=image" alt="29"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/30.png?v=1&amp;type=image" alt="30"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/31.png?v=1&amp;type=image" alt="31"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/32.png?v=1&amp;type=image" alt="32"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/33.png?v=1&amp;type=image" alt="33"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/34.png?v=1&amp;type=image" alt="34"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/35.png?v=1&amp;type=image" alt="35"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/36.png?v=1&amp;type=image" alt="36"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/37.png?v=1&amp;type=image" alt="37"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/38.png?v=1&amp;type=image" alt="38"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/39.png?v=1&amp;type=image" alt="39"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/40.png?v=1&amp;type=image" alt="40"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/41.png?v=1&amp;type=image" alt="41"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/42.png?v=1&amp;type=image" alt="42"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/43.png?v=1&amp;type=image" alt="43"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/44.png?v=1&amp;type=image" alt="44"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/45.png?v=1&amp;type=image" alt="45"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/46.png?v=1&amp;type=image" alt="46"><br><img src="/2020/05/31/ppt-fen-xiang-geoinsider-di-22-qi-ji-yu-earth-engine-yu-kai-yuan-gis-de-yun-ji-suan-yu-jiao-hu-shi-zhi-tu/47.png?v=1&amp;type=image" alt="47"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 小结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIS </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArcGIS Desktop 10.2 安装与破解图文教程</title>
      <link href="/2020/05/21/arcgis-desktop-10.2-an-zhuang-yu-po-jie-tu-wen-jiao-cheng/"/>
      <url>/2020/05/21/arcgis-desktop-10.2-an-zhuang-yu-po-jie-tu-wen-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是转自CSDN的ArcGIS Desktop 10.2安装与破解图文教程，仅用作学习交流，请勿商用！</p></blockquote><div id="article_content" class="article_content clearfix">            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-211130ba7a.css">                            <div id="content_views" class="markdown_views prism-dracula">                    <!-- flowchart 箭头图标 勿删 -->                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>                    </svg>                                            <div id="article_content" class="article_content clearfix csdn-tracking-statistics"><p><strong><span>一、ArcGIS Desktop 10.2 简介</span></strong></p><p><span>美国环境系统研究所公司（Environmental Systems Research Institute, Inc. 简称ESRI公司）成立于1969年，总部设在美国加利福利亚州雷德兰兹市，是世界最大的地理信息系统技术提供商。在全美各地都设有办事处，世界各主要国家均设有分公司或者代理，全球员工总数超过4000名。其商业合作伙伴计划，在全球有超过2000个领域开发商、咨询服务商、增值代理以及数据提供商，与分布在80个国家的国际代理一起，构成了ESRI公司强大的技术支持与服务网络。</span></p><p><span>1981 年 ESRI 发布了它的第一套商业 GIS 软件– ARC/INFO 软件。它可以在计算机上显示诸如点、线、面等地理特征，并通过数据库管理工具将描述这些地理特征的属性数据结合起来。 ARC/INFO 被公认为是第一个现代商业 GIS 系统。</span></p><p><span>2001年的4月ESRI 开始推出ArcGIS 8.1，它是一套基于工业标准的GIS软件家族产品，提供了功能强大的，并且简单易用的完整的GIS解决方案。ArcGIS是一个可拓展的GIS系统，提供了对地理数据的创建、管理、综合、分析能力，ArcGIS还为单机和基于全球分布式网络的用户提供地理数据的发布能力。</span></p><p><span>2013年7月ArcGIS 10.2发布，标志着Esri又进入了一个新的里程碑。在ArcGIS 10.2中，Esri充分利用了IT技术的重大变革来扩大GIS的影响力和适用性。新产品在易用性、对实时数据的访问，以及与现有基础设施的集成等方面都得到了极大的改善。用户可以更加轻松地部署自己的Web GIS应用，大大简化地理信息探索、访问、分享和协作的过程，感受新一代Web GIS所带来的高效与便捷。</span></p><p><span><br></span></p><p><strong><span>二、ArcGIS Desktop 10.2安装与破解步骤</span></strong><span><strong><span></span><span></span></strong></span></p><p><span>鉴于大家经常遇到ArcGIS安装失败的问题，现在分以下几个步骤说明ArcGIS的安装破解教程（商业用途请支持正版），分享一下成功安装的经验。</span></p><p><span><strong><span>第一步：下载安装包</span></strong></span></p><p><span>请在以下地址分别下载原版安装光盘、破解文件和汉化包。</span></p><p><span>ArcGIS_Desktop_102_134924原版安装光盘：</span></p><p><span><a href="http://pan.baidu.com/s/1nuB58DV" rel="nofollow" target="_blank">http://pan.baidu.com/s/1nuB58DV</a></span></p><p><br></p><p><span>ArcGIS_Desktop_102_134924 破解文件：</span></p><p><span><a href="http://pan.baidu.com/s/1boWOJP9" rel="nofollow" target="_blank">http://pan.baidu.com/s/1boWOJP9</a></span></p><p><br></p><p><span>ArcGIS_Desktop_102_134924 汉化包：</span></p><p><span><a href="http://pan.baidu.com/s/1eRCzNr0" rel="nofollow" target="_blank">http://pan.baidu.com/s/1eRCzNr0</a></span></p><p><br></p><p><span><strong><span>第二步：安装License Manager并破解</span></strong></span></p><p><span>直接解压或用虚拟光驱软件打开ISO原版安装光盘文件（Win10中可以直接双击打开），然后双击“ESRI.exe”文件，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261102180129.jpg" title="0.jpg" alt="0.jpg"></span></p><p><span><br></span></p><p><span>进入ArcGIS安装界面之后，点击“Setup”安装ArcGIS License Manager项，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261103018415.jpg" title="1.jpg" alt="1.jpg"></span></p><p><span><br></span></p><p><span>在弹出的安装向导中一直点击“Next”安钮进行ArcGIS License Manager安装，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261103297794.jpg" title="2.jpg" alt="2.jpg"></span></p><p><span><br></span></p><p><span>安装完成之后，点击“Stop”停止运行许可服务，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261104180300.jpg" title="4.jpg" alt="4.jpg"></span></p><p><span><br></span></p><p><span>复制破解文件中的“ARCGIS.exe”和“service.txt”文件，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261104382646.jpg" title="5.jpg" alt="5.jpg"></span></p><p><span><br></span></p><p><span>将“ARCGIS.exe”和“service.txt”文件粘贴替换到ArcGIS安装目录的“License10.2\bin”路径下，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261105053119.jpg" title="6.jpg" alt="6.jpg"></span></p><p><span><br></span></p><p><span>从菜单中点击“License Server Administrator”或双击安装目录中的“LSAdmin.exe”，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261105214996.jpg" title="7.jpg" alt="7.jpg"></span></p><p><span><br></span></p><p><span>点击“启动”按钮重新启动刚才停止的许可服务，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261105425623.jpg" title="8.jpg" alt="8.jpg"></span></p><p><span><br></span></p><p><span>点击“确定”按钮完成许可的安装与破解。</span></p><p><span><br></span></p><p><span><strong><span>第三步：安装 ArcGIS Desktop 10.2</span></strong></span></p><p><span>在安装界面中点击“Setup”安装ArcGIS for Desktop项，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261106152190.jpg" title="9.jpg" alt="9.jpg"></span></p><p><br></p><p><span><br></span></p><p><span>在弹出的安装向导中一直点击“Next”安钮进行ArcGIS 10.2安装，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261106326411.jpg" title="10.jpg" alt="10.jpg"></span></p><p><span><br></span></p><p><span>安装完成之后，在弹出的对话框中选择“Advanced (ArcInfo) Concurrent Use”项并点击“OK”按钮，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261106472975.jpg" title="11.jpg" alt="11.jpg"></span></p><p><span><br></span></p><p><span>在弹出的对话框中点击“Change”按钮，然后将“Not_Set”改成“localhost”，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261107326575.jpg" title="12.jpg" alt="12.jpg"></span></p><p><span><br></span></p><p><span>点击“Availability”可以看出软件已授权成功，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261107526890.jpg" title="13.jpg" alt="13.jpg"></span></p><p><span><br></span></p><p><span>第四步：安装汉化包（可选）</span></p><p><span>如果需要汉化ArcGIS10.2，请点击汉化包目录中的“DesktopChinese_CN.msi”安装汉化包，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261108064548.jpg" title="14.jpg" alt="14.jpg"></span></p><p><span><br></span></p><p><span>安装完成之后，启动ArcMap软件即可正常使用，如下图所示。</span></p><p><span><br></span></p><p><span><img src="http://pic.rivermap.cn/upload/201706/26/201706261108180331.jpg" title="15.jpg" alt="15.jpg"></span></p><p><span><br></span></p><p><span>至此，ArcGIS10.2的安装与破解已全部完成。</span></p><div><span><br></span></div><pre class="prettyprint"><code class="has-numbering">        &lt;/div&gt;            &lt;/div&gt;</code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul></pre></div></div>                                    </div><div><div></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 备忘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArcGIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/12/hello-world/"/>
      <url>/2020/05/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集常用的网站</title>
      <link href="/2020/03/31/shou-ji-chang-yong-de-wang-zhan/"/>
      <url>/2020/03/31/shou-ji-chang-yong-de-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><blockquote><p>对一些常用网站的收集(主要是为了方便自己换电脑时懒得去导出浏览器收藏夹)，会持续更新…</p></blockquote><h2 id="常用网站"><a href="#常用网站" class="headerlink" title="常用网站"></a>常用网站</h2><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=502712528&amp;idx=1&amp;sn=7ad9553cc39e533d16f6844507a5cd24" target="_blank" rel="noopener">软件安装管家（能找到满足日常办公的很多软件）</a></li></ul><a id="more"></a><h2 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h2><ul><li><a href="http://www.bejson.com/" target="_blank" rel="noopener">在线JSON校验格式工具</a></li><li><a href="http://tool.chinaz.com/regex/" target="_blank" rel="noopener">正则表达式在线测试</a></li><li><a href="https://www.114la.com/other/rgb.htm" target="_blank" rel="noopener">RGB颜色查询对照表</a></li><li><a href="http://tool.oschina.net/regex/" target="_blank" rel="noopener">在线正则表达式测试</a></li><li><a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">UrlEncode编码解码</a></li><li><a href="http://tool.chinaz.com/Tools/unixtime.aspx" target="_blank" rel="noopener">时间戳在线转换</a></li><li><a href="https://cli.im/" target="_blank" rel="noopener">草料二维码生成器</a></li><li><a href="https://www.jdoodle.com/online-java-compiler" target="_blank" rel="noopener">在线Java编辑器</a></li><li><a href="https://www.it399.com/code/markdown2html" target="_blank" rel="noopener">MarkDown转HTML</a></li><li><a href="https://www.easyicon.net/" target="_blank" rel="noopener">在线图标下载</a></li><li><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork 油猴脚本</a></li><li><a href="http://www.kejixiaoc.com/" target="_blank" rel="noopener">科技小c</a></li><li><a href="https://wall.alphacoders.com/?lang=Chinese" target="_blank" rel="noopener">高清壁纸wall</a></li><li><a href="https://www.gaitubao.com/" target="_blank" rel="noopener">在线图片尺寸大小修改</a></li><li><a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="noopener">Unicode转中文</a></li><li><a href="https://cp.anyknew.com/" target="_blank" rel="noopener">拷贝兔</a></li><li><a href="http://www.ypppt.com/" target="_blank" rel="noopener">ppt模版下载</a></li><li><a href="http://kuaitu888.com/" target="_blank" rel="noopener">CSDN自助下载</a></li></ul><h2 id="第三方视频"><a href="#第三方视频" class="headerlink" title="第三方视频"></a>第三方视频</h2><ul><li><a href="https://hao.su/531/" target="_blank" rel="noopener">免费影视网站</a></li><li><a href="https://www.dytt8.net/" target="_blank" rel="noopener">电影天堂</a></li><li><a href="http://www.zmz2019.com/rrys/index.html" target="_blank" rel="noopener">人人视频</a></li><li><a href="https://www.80s.tw/" target="_blank" rel="noopener">80s</a></li><li><a href="http://www.kkkkmao.com/" target="_blank" rel="noopener">4K屋</a></li><li><a href="https://www.133kp.com/" target="_blank" rel="noopener">七七</a></li><li><a href="http://www.shipinyu.com/" target="_blank" rel="noopener">视频鱼</a></li><li><a href="https://www.agefans.tv/" target="_blank" rel="noopener">动漫</a></li></ul><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><ul><li><a href="https://www.50yin.com/" target="_blank" rel="noopener">50音</a></li></ul><h2 id="BT磁力"><a href="#BT磁力" class="headerlink" title="BT磁力"></a>BT磁力</h2><ul><li><a href="http://hao.su/909" target="_blank" rel="noopener">磁力导航</a></li><li><a href="https://www.xiaobaipan.com/" target="_blank" rel="noopener">网盘搜索</a> </li><li><a href="https://www.dogedoge.com/" target="_blank" rel="noopener">DogeDoge搜索</a></li><li><a href="https://www.yunpanjingling.com/" target="_blank" rel="noopener">云盘精灵</a></li><li><a href="https://www.pantianxia.com/" target="_blank" rel="noopener">盘天才</a></li></ul><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><ul><li><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">pythonlibs</a> &amp;&amp; <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">清华大学镜像源</a> &amp;&amp; <a href="https://www.python.org/ftp/python/" target="_blank" rel="noopener">python第三方包</a></li><li><a href="https://miyakogi.github.io/pyppeteer/" target="_blank" rel="noopener">pyppeteer 爬虫</a></li><li><a href="https://elasticsearch-dsl.readthedocs.io/en/latest/api.html" target="_blank" rel="noopener">ElasticSearch api</a> &amp;&amp; <a href="http://fingerchou.com/2017/08/12/elasticsearch-dsl-with-python-usage-1/" target="_blank" rel="noopener">ElasticSearch - api1</a> &amp;&amp; <a href="http://fingerchou.com/2017/08/13/elasticsearch-dsl-with-python-usage-2/" target="_blank" rel="noopener">ElasticSearch - api2</a></li></ul><h1 id="持续更新…"><a href="#持续更新…" class="headerlink" title="持续更新…"></a>持续更新…</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 备忘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用网站 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中使用动态代理实现环绕通知</title>
      <link href="/2020/03/11/spring-zhong-shi-yong-dong-tai-dai-li-shi-xian-huan-rao-tong-zhi/"/>
      <url>/2020/03/11/spring-zhong-shi-yong-dong-tai-dai-li-shi-xian-huan-rao-tong-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>因为环绕通知类似于动态代理的全过程，所以可以使用动态代理技术实现类似的环绕通知</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>ArithmeticCalculatorLoggingProxy.java</li><li>Main.java<a id="more"></a></li></ul><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorLoggingProxy-java"><a href="#ArithmeticCalculatorLoggingProxy-java" class="headerlink" title="ArithmeticCalculatorLoggingProxy.java"></a>ArithmeticCalculatorLoggingProxy.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>InvocationHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorLoggingProxy</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//要代理的对象</span>    <span class="token keyword">private</span> ArithmeticCalculator target<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ArithmeticCalculatorLoggingProxy</span><span class="token punctuation">(</span>ArithmeticCalculator target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ArithmeticCalculator <span class="token function">getLoggingProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ArithmeticCalculator proxy <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//代理对象有哪一个类加载器负责加载</span>        ClassLoader loader <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//代理对象的类型，即其中有哪些方法。可以通过ArithmeticCalculator.class.getMethods()返回一个方法数组Method[]</span>        Class<span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//当调用代理对象其中的方法时，该执行的代码</span>        InvocationHandler h<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*            * proxy：正在返回的那个代理对象，一般情况下，invoke方法中都不使用该对象。            * method：正在被调用的方法            * args：调用方法时，传入的参数            * */</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Object <span class="token function">invoke</span><span class="token punctuation">(</span>Object proxy<span class="token punctuation">,</span> Method method<span class="token punctuation">,</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//在这里使用proxy时会出现死循环，StackOverflowError。因为一旦使用，又会被动态代理转移到这儿调用invoke，出现死循环</span>                <span class="token comment" spellcheck="true">//System.out.println(proxy.toString());</span>                String methodName <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取方法名</span>                <span class="token comment" spellcheck="true">//日志</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;-yczlab-> The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//执行方法</span>                Object result <span class="token operator">=</span> null<span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//前置通知，类似于@Before注解</span>                    result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//返回通知，可以访问到方法的返回值，类似于@AfterReturning注解</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//异常通知，可以访问到方法出现的异常，类似于@AfterThrowing注解</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//后置通知，因为方法可能会出异常，所以访问不到方法的返回值，类似于@After注解</span>                <span class="token comment" spellcheck="true">//日志</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;-yczlab-> The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">"ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> result<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        proxy <span class="token operator">=</span> <span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">)</span> Proxy<span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> interfaces<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//通过使用动态代理的方式实现环绕通知</span>        ArithmeticCalculator target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticCalculatorImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ArithmeticCalculator proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticCalculatorLoggingProxy</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLoggingProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-->"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-->"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP的环绕通知@Around</title>
      <link href="/2020/03/11/spring-aop-de-huan-rao-tong-zhi-around/"/>
      <url>/2020/03/11/spring-aop-de-huan-rao-tong-zhi-around/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring AOP可以使用@Around注解来实现环绕通知，环绕通知需要携带ProceedingJoinPoint类型的参数，环绕通知类似于动态代理的全过程，ProceedingJoinPoint类型的参数可以决定是否执行目标方法，且环绕通知必须要有返回值，返回值即为目标方法的返回值。</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>LoggingAspect.java</li><li>Main.java</li><li>applicationContext.xml</li></ul><a id="more"></a><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LoggingAspect-java"><a href="#LoggingAspect-java" class="headerlink" title="LoggingAspect.java"></a>LoggingAspect.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ProceedingJoinPoint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把这个类声明为一个切面：需要把该类放入到IOC容器中，再声明为一个切面</span><span class="token annotation punctuation">@Aspect</span> <span class="token comment" spellcheck="true">//声明为一个切面，使用该注解需要“aspectjweaver-xxx.jar”包的支持，"xxx"代表版本</span><span class="token annotation punctuation">@Component</span> <span class="token comment" spellcheck="true">//放入IOC容器中</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingAspect</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//声明该方法是一个前置通知：在目标方法开始之前执行</span>    <span class="token comment" spellcheck="true">//如果这样写execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.add(int, int))</span>    <span class="token comment" spellcheck="true">//那么只对ArithmeticCalculator.add方法起作用</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//可以通过JoinPoint参数来访问到连接的细节，如方法名称和参数值等</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> args <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个后置通知：在目标方法执行后（无论是否发生异常），再执行的通知</span>    <span class="token comment" spellcheck="true">//但是在后置通知中还不能访问目标方法的执行结果</span>    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span><span class="token operator">+</span>methodName<span class="token operator">+</span><span class="token string">" ends"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个返回通知：在目标方法正常结束时（出异常时就不执行该通知），执行的通知</span>    <span class="token comment" spellcheck="true">//在返回通知中可以访问目标方法的返回值，即执行结果</span>    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(..))"</span><span class="token punctuation">,</span> returning <span class="token operator">=</span> <span class="token string">"result"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">AfterReturning</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Object result<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个异常通知：在目标方法出现异常时执行的通知</span>    <span class="token comment" spellcheck="true">//在异常通知中可以访问到异常对象，且可以指定在出现特定异常时才执行通知代码</span>    <span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(..))"</span><span class="token punctuation">,</span> throwing <span class="token operator">=</span> <span class="token string">"ex"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">AfterThrowing</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" occurs exception: "</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个环绕通知：</span>    <span class="token comment" spellcheck="true">/*    * 环绕通知需要携带ProceedingJoinPoint类型的参数    * 环绕通知类似于动态代理的全过程：ProceedingJoinPoint类型的参数可以决定是否执行目标方法    * 且环绕通知必须要有返回值，返回值即为目标方法的返回值    * */</span>    <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Object <span class="token function">aroundMethod</span><span class="token punctuation">(</span>ProceedingJoinPoint pjd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Object result <span class="token operator">=</span> null<span class="token punctuation">;</span>        String methodName <span class="token operator">=</span> pjd<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> args <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>pjd<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//执行目标方法</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//前置通知，注意与上面@Before注解配置的前置通知相区分</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"环绕通知中的前置通知：The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> pjd<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//返回通知，注意与上面@AfterReturning注解配置的返回通知相区分</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"环绕通知中的返回通知：The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//异常通知，注意与上面@AfterThrowing注解配置的异常通知相区分</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"环绕通知中的异常通知：The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" occurs exception: "</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//后置通知，注意与上面@After注解配置的后置通知相区分</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"环绕通知中的后置通知：The method "</span><span class="token operator">+</span>methodName<span class="token operator">+</span><span class="token string">" ends"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果以上情况确有异常发生，返回的值result=null, 无法装换为int类型，还会发生其他异常，不要惊慌</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1、创建Spring的IOC容器</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2、从IOC容器中获取bean的实例</span>        ArithmeticCalculator arithmeticCalculator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、使用bean</span>        <span class="token comment" spellcheck="true">//测试环绕通知（环绕通知类似于动态代理）</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//测试异常情况，“除零”异常发生时返回值为null，无法转换为int类型，会在次发生异常。主要测试“除零”异常</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//测试异常情况，异常发生时返回值为null，无法转换为int</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置自动扫描的包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.aop.impl<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--使AspectJ注解起作用：自动为匹配的类生成代理对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP的异常通知@AfterThrowing</title>
      <link href="/2020/03/11/spring-aop-de-yi-chang-tong-zhi-afterthrowing/"/>
      <url>/2020/03/11/spring-aop-de-yi-chang-tong-zhi-afterthrowing/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring AOP可以使用@AfterThrowing注解来实现异常通知，在目标方法出现异常时执行的通知。在异常通知中可以访问到异常对象，且可以指定在出现特定异常时才执行通知代码。</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>LoggingAspect.java</li><li>Main.java</li><li>applicationContext.xml</li></ul><a id="more"></a><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LoggingAspect-java"><a href="#LoggingAspect-java" class="headerlink" title="LoggingAspect.java"></a>LoggingAspect.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把这个类声明为一个切面：需要把该类放入到IOC容器中，再声明为一个切面</span><span class="token annotation punctuation">@Aspect</span> <span class="token comment" spellcheck="true">//声明为一个切面，使用该注解需要“aspectjweaver-xxx.jar”包的支持，"xxx"代表版本</span><span class="token annotation punctuation">@Component</span> <span class="token comment" spellcheck="true">//放入IOC容器中</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingAspect</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//声明该方法是一个前置通知：在目标方法开始之前执行</span>    <span class="token comment" spellcheck="true">//如果这样写execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.add(int, int))</span>    <span class="token comment" spellcheck="true">//那么只对ArithmeticCalculator.add方法起作用</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//可以通过JoinPoint参数来访问到连接的细节，如方法名称和参数值等</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> args <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个后置通知：在目标方法执行后（无论是否发生异常），再执行的通知</span>    <span class="token comment" spellcheck="true">//但是在后置通知中还不能访问目标方法的执行结果</span>    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span><span class="token operator">+</span>methodName<span class="token operator">+</span><span class="token string">" ends"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个返回通知：在目标方法正常结束时（出异常时就不执行该通知），执行的通知</span>    <span class="token comment" spellcheck="true">//在返回通知中可以访问目标方法的返回值，即执行结果</span>    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(..))"</span><span class="token punctuation">,</span> returning <span class="token operator">=</span> <span class="token string">"result"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">AfterReturning</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Object result<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个异常通知：在目标方法出现异常时执行的通知</span>    <span class="token comment" spellcheck="true">//在异常通知中可以访问到异常对象，且可以指定在出现特定异常时才执行通知代码</span>    <span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(..))"</span><span class="token punctuation">,</span> throwing <span class="token operator">=</span> <span class="token string">"ex"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">AfterThrowing</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" occurs exception: "</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1、创建Spring的IOC容器</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2、从IOC容器中获取bean的实例</span>        ArithmeticCalculator arithmeticCalculator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、使用bean</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//以下程序故意发生异常，测试异常通知</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置自动扫描的包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.aop.impl<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--使AspectJ注解起作用：自动为匹配的类生成代理对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP的返回通知@AfterReturning</title>
      <link href="/2020/03/11/spring-aop-de-fan-hui-tong-zhi-afterreturning/"/>
      <url>/2020/03/11/spring-aop-de-fan-hui-tong-zhi-afterreturning/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring AOP可以使用@AfterReturning注解来实现返回通知, 在目标方法正常结束时（出异常时就不执行该通知），执行的通知。在返回通知中可以访问目标方法的返回值，即执行结果</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>LoggingAspect.java</li><li>Main.java</li><li>applicationContext.xml</li></ul><a id="more"></a><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LoggingAspect-java"><a href="#LoggingAspect-java" class="headerlink" title="LoggingAspect.java"></a>LoggingAspect.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>After<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>AfterReturning<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Aspect<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Before<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把这个类声明为一个切面：需要把该类放入到IOC容器中，再声明为一个切面</span><span class="token annotation punctuation">@Aspect</span> <span class="token comment" spellcheck="true">//声明为一个切面，使用该注解需要“aspectjweaver-xxx.jar”包的支持，"xxx"代表版本</span><span class="token annotation punctuation">@Component</span> <span class="token comment" spellcheck="true">//放入IOC容器中</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingAspect</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//声明该方法是一个前置通知：在目标方法开始之前执行</span>    <span class="token comment" spellcheck="true">//如果这样写execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.add(int, int))</span>    <span class="token comment" spellcheck="true">//那么只对ArithmeticCalculator.add方法起作用</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//可以通过JoinPoint参数来访问到连接的细节，如方法名称和参数值等</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> args <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个后置通知：在目标方法执行后（无论是否发生异常），再执行的通知</span>    <span class="token comment" spellcheck="true">//但是在后置通知中还不能访问目标方法的执行结果</span>    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span><span class="token operator">+</span>methodName<span class="token operator">+</span><span class="token string">" ends"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个返回通知：在目标方法正常结束时（出异常时就不执行该通知），执行的通知</span>    <span class="token comment" spellcheck="true">//在返回通知中可以访问目标方法的返回值，即执行结果</span>    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(..))"</span><span class="token punctuation">,</span> returning <span class="token operator">=</span> <span class="token string">"result"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">AfterReturning</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Object result<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1、创建Spring的IOC容器</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2、从IOC容器中获取bean的实例</span>        ArithmeticCalculator arithmeticCalculator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、使用bean</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置自动扫描的包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.aop.impl<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--使AspectJ注解起作用：自动为匹配的类生成代理对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP的后置通知@After</title>
      <link href="/2020/03/11/spring-aop-de-hou-zhi-tong-zhi-after/"/>
      <url>/2020/03/11/spring-aop-de-hou-zhi-tong-zhi-after/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring AOP可以使用@After注解来实现后置通知, 在目标方法执行后（无论是否发生异常）执行一段代码（可以用来做日志）。但是在后置通知中还不能访问目标方法的执行结果。</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>LoggingAspect.java</li><li>Main.java</li><li>applicationContext.xml</li></ul><a id="more"></a><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LoggingAspect-java"><a href="#LoggingAspect-java" class="headerlink" title="LoggingAspect.java"></a>LoggingAspect.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>After<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Aspect<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Before<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把这个类声明为一个切面：需要把该类放入到IOC容器中，再声明为一个切面</span><span class="token annotation punctuation">@Aspect</span> <span class="token comment" spellcheck="true">//声明为一个切面，使用该注解需要“aspectjweaver-xxx.jar”包的支持，"xxx"代表版本</span><span class="token annotation punctuation">@Component</span> <span class="token comment" spellcheck="true">//放入IOC容器中</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingAspect</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//声明该方法是一个前置通知：在目标方法开始之前执行</span>    <span class="token comment" spellcheck="true">//如果这样写execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.add(int, int))</span>    <span class="token comment" spellcheck="true">//那么只对ArithmeticCalculator.add方法起作用</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//可以通过JoinPoint参数来访问到连接的细节，如方法名称和参数值等</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> args <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//声明该方法是一个后置通知：在目标方法执行后（无论是否发生异常），再执行的通知</span>    <span class="token comment" spellcheck="true">//但是在后置通知中还不能访问目标方法的执行结果</span>    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">"execution(* com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span><span class="token operator">+</span>methodName<span class="token operator">+</span><span class="token string">" ends"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1、创建Spring的IOC容器</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2、从IOC容器中获取bean的实例</span>        ArithmeticCalculator arithmeticCalculator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、使用bean</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置自动扫描的包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.aop.impl<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--使AspectJ注解起作用：自动为匹配的类生成代理对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP的前置通知@Before</title>
      <link href="/2020/03/10/spring-aop-de-qian-zhi-tong-zhi-before/"/>
      <url>/2020/03/10/spring-aop-de-qian-zhi-tong-zhi-before/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring AOP可以使用@Before注解来实现前置通知, 在方法开始执行之前执行一段代码（可以用来做日志）</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>LoggingAspect.java</li><li>Main.java</li><li>applicationContext.xml</li></ul><a id="more"></a><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LoggingAspect-java"><a href="#LoggingAspect-java" class="headerlink" title="LoggingAspect.java"></a>LoggingAspect.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Aspect<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Before<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把这个类声明为一个切面：需要把该类放入到IOC容器中，再声明为一个切面</span><span class="token annotation punctuation">@Aspect</span> <span class="token comment" spellcheck="true">//声明为一个切面，使用该注解需要“aspectjweaver-xxx.jar”包的支持，"xxx"代表版本</span><span class="token annotation punctuation">@Component</span> <span class="token comment" spellcheck="true">//放入IOC容器中</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingAspect</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//声明该方法是一个前置通知：在目标方法开始之前执行</span>    <span class="token comment" spellcheck="true">//如果这样写execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.add(int, int))</span>    <span class="token comment" spellcheck="true">//那么只对ArithmeticCalculator.add方法起作用</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"execution(public int com.yczlab.spring.aop.impl.ArithmeticCalculator.*(int, int))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//可以通过JoinPoint参数来访问到连接的细节，如方法名称和参数值等</span>        String methodName <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Object<span class="token operator">></span> args <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1、创建Spring的IOC容器</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2、从IOC容器中获取bean的实例</span>        ArithmeticCalculator arithmeticCalculator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3、使用bean</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result: "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculator<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置自动扫描的包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.aop.impl<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--使AspectJ注解起作用：自动为匹配的类生成代理对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于AspectJ注解来使用Spring AOP</title>
      <link href="/2020/03/09/ji-yu-aspectj-zhu-jie-lai-shi-yong-spring-aop/"/>
      <url>/2020/03/09/ji-yu-aspectj-zhu-jie-lai-shi-yong-spring-aop/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>AspectJ：Java社区里最完整最流行的AOP框架.在Spring2.0以上版本中, 可以使用基于AspectJ注解或基于XML配置的AOP</p><a id="more"></a><h4 id="1、在Spring中启用AspectJ注解支持"><a href="#1、在Spring中启用AspectJ注解支持" class="headerlink" title="1、在Spring中启用AspectJ注解支持"></a>1、在Spring中启用AspectJ注解支持</h4><ul><li>要在Spring应用中使用AspectJ注解,必须在classpath下包含AspectJ类库: <a href="aopalliance-1.0.jar">aopalliance.jar</a>、<a href="aspectjweaver-1.9.4.jar">aspectjweaver.jar</a>和<a href="spring-aspects-5.2.3.jar">spring-aspects.jar</a></li><li>要在Spring IOC容器中启用AspectJ注解支持,只要在Bean配置文件中定义一个空的XML元素<code>&lt;aop:aspectj-autoproxy&gt;</code></li><li>当Spring IOC容器侦测到Bean配置文件中的<code>&lt;aop:aspectj-autoproxy&gt;</code>元素时,会自动为与AspectJ切面匹配的Bean创建代理.</li></ul><h4 id="2、用AspectJ注解声明切面"><a href="#2、用AspectJ注解声明切面" class="headerlink" title="2、用AspectJ注解声明切面"></a>2、用AspectJ注解声明切面</h4><ul><li>切面首先是一个IOC中的bean,即加入@Component注解</li><li>要在Spring中声明AspectJ切面, 还需要加入@Aspect注解<br>当在Spring IOC容器中初始化AspectJ切面之后,Spring IOC容器就会为那些与AspectJ切面相匹配的Bean创建代理.</li><li>在AspectJ注解中,切面只是一个带有@Aspect注解的Java类.</li><li>通知是切面中标注有某种注解的简单的Java方法.</li></ul><h4 id="3、AspectJ支持5种类型的通知注解"><a href="#3、AspectJ支持5种类型的通知注解" class="headerlink" title="3、AspectJ支持5种类型的通知注解:"></a>3、AspectJ支持5种类型的通知注解:</h4><ul><li>@Before: 前置通知, 在方法执行之前执行</li><li>@After: 后置通知, 在方法执行之后执行</li><li>@AfterReturning: 返回通知, 在方法返回结果之后执行</li><li>@AfterThrowing: 异常通知, 在方法抛出异常之后</li><li>@Around: 环绕通知, 围绕着方法执行</li></ul><h4 id="4、编写AspectJ切入点表达式"><a href="#4、编写AspectJ切入点表达式" class="headerlink" title="4、编写AspectJ切入点表达式"></a>4、编写AspectJ切入点表达式</h4><ul><li>execution * com.yczlab.spring.aop.impl.ArithmeticCalculator.<em>(..)<br>匹配ArithmeticCalculator中声明的所有方法,第一个“</em>”代表任意修饰符以及任意返回值；第二个“*”代表任意方法；“..”匹配任意数量的参数. 若目标类、接口与该切面在同一个包中, 可以省略包名.</li><li>execution public * ArithmeticCalculator.*(..)<br>匹配ArithmeticCalculator接口的所有公有方法.</li><li>execution public double ArithmeticCalculator.*(..)<br>匹配ArithmeticCalculator中返回double类型数值的方法</li><li>execution public double ArithmeticCalculator.*(double, ..)<br>匹配第一个参数为double类型的方法, “..”匹配任意数量任意类型的参数</li><li>execution public double ArithmeticCalculator.*(double, double)<br>匹配参数类型为double,double类型的方法.</li></ul><h4 id="5、可以在通知方法中声明一个类型为JoinPoint的参数-然后就能访问链接细节-如方法名称和参数值"><a href="#5、可以在通知方法中声明一个类型为JoinPoint的参数-然后就能访问链接细节-如方法名称和参数值" class="headerlink" title="5、可以在通知方法中声明一个类型为JoinPoint的参数. 然后就能访问链接细节. 如方法名称和参数值."></a>5、可以在通知方法中声明一个类型为JoinPoint的参数. 然后就能访问链接细节. 如方法名称和参数值.</h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP的相关基础介绍</title>
      <link href="/2020/03/09/spring-aop-de-xiang-guan-ji-chu-jie-shao/"/>
      <url>/2020/03/09/spring-aop-de-xiang-guan-ji-chu-jie-shao/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Aop（Aspect-Oriented Programming，面向切面编程）是一种新的方法论，是对传统OOP（Object-Oriented Programming，面向对象编程）的补充</p><a id="more"></a><h3 id="AOP简介"><a href="#AOP简介" class="headerlink" title="AOP简介"></a>AOP简介</h3><ul><li>AOP主要编程对象是切面（aspect），而切面是横切关注点的模块化。</li><li>在应用AOP编程时, 仍然需要定义公共功能, 但可以明确的定义这个功能在哪里, 以什么方式应用, 并且不必修改受影响的类。这样一来横切关注点就被模块化到特殊的对象(切面)里。</li><li>AOP的好处：</li></ul><p>1.每个事物逻辑位于一个位置，代码不分散，便于维护和升级<br>2.业务模块更简洁，只包含核心业务代码</p><h3 id="AOP相关术语"><a href="#AOP相关术语" class="headerlink" title="AOP相关术语"></a>AOP相关术语</h3><ul><li><p><strong>横切关注点:</strong><br>验证参数，日志(前置日志、后置日志)等</p></li><li><p><strong>切面(Aspect):</strong><br>横切关注点(跨越应用程序多个模块的功能)被模块化的特殊对象</p></li><li><p><strong>通知(Advice):</strong><br>切面必须要完成的工作</p></li><li><p><strong>目标(Target):</strong><br>被通知的对象</p></li><li><p><strong>代理(Proxy):</strong><br>向目标对象应用通知之后创建的对象</p></li><li><p><strong>连接点(Joinpoint):</strong><br>程序执行的某个特定位置：如类某个方法调用前、调用后、方法抛出异常后等。连接点由两个信息确定：方法表示的程序执行点；相对点表示的方位。例如 ArithmethicCalculator#add() 方法执行前的连接点: 执行点为 ArithmethicCalculator#add()； 方位为该方法执行前的位置</p></li><li><p><strong>切点(pointcut):</strong><br>每个类都拥有多个连接点：例如 ArithmethicCalculator 的所有方法实际上都是连接点，即连接点是程序类中客观存在的事务。AOP通过切点定位到特定的连接点。类比：连接点相当于数据库中的记录，切点相当于查询条件。切点和连接点不是一对一的关系，一个切点匹配多个连接点，切点通过org.springframework.aop.Pointcut 接口进行描述，它使用类和方法作为连接点的查询条件</p></li></ul><table><thead><tr><th>相关术语</th><th>描述</th></tr></thead><tbody><tr><td>横切关注点</td><td>验证参数，日志(前置日志、后置日志)等</td></tr><tr><td>切面(Aspect)</td><td>横切关注点(跨越应用程序多个模块的功能)被模块化的特殊对象</td></tr><tr><td>通知(Advice)</td><td>切面必须要完成的工作</td></tr><tr><td>目标(Target)</td><td>被通知的对象</td></tr><tr><td>代理(Proxy)</td><td>向目标对象应用通知之后创建的对象</td></tr><tr><td>连接点(Joinpoint)</td><td>程序执行的某个特定位置：如类某个方法调用前、调用后、方法抛出异常后等。连接点由两个信息确定：方法表示的程序执行点；相对点表示的方位。例如 ArithmethicCalculator#add() 方法执行前的连接点: 执行点为 ArithmethicCalculator#add()； 方位为该方法执行前的位置</td></tr><tr><td>切点(pointcut)</td><td>每个类都拥有多个连接点：例如 ArithmethicCalculator 的所有方法实际上都是连接点，即连接点是程序类中客观存在的事务。AOP通过切点定位到特定的连接点。类比：连接点相当于数据库中的记录，切点相当于查询条件。切点和连接点不是一对一的关系，一个切点匹配多个连接点，切点通过org.springframework.aop.Pointcut 接口进行描述，它使用类和方法作为连接点的查询条件</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中使用动态代理解决日志需求</title>
      <link href="/2020/03/09/spring-zhong-shi-yong-dong-tai-dai-li-jie-jue-ri-zhi-xu-qiu/"/>
      <url>/2020/03/09/spring-zhong-shi-yong-dong-tai-dai-li-jie-jue-ri-zhi-xu-qiu/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>使用动态代理技术实现在类的方法中加入日志信息。通过动态代理的方式写入日志信息不会给原来的类带来代码混乱和分散的问题，便于维护</p><ul><li>ArithmeticCalculator.java</li><li>ArithmeticCalculatorImpl.java</li><li>ArithmeticCalculatorLoggingImpl.java</li><li>ArithmeticCalculatorLoggingProxy.java</li><li>Main.java<a id="more"></a></li></ul><h3 id="ArithmeticCalculator-java"><a href="#ArithmeticCalculator-java" class="headerlink" title="ArithmeticCalculator.java"></a>ArithmeticCalculator.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorImpl-java"><a href="#ArithmeticCalculatorImpl-java" class="headerlink" title="ArithmeticCalculatorImpl.java"></a>ArithmeticCalculatorImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//该实现类的方法中不带日志信息，而通过动态代理的方式写入日志信息，便于维护</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorLoggingImpl-java"><a href="#ArithmeticCalculatorLoggingImpl-java" class="headerlink" title="ArithmeticCalculatorLoggingImpl.java"></a>ArithmeticCalculatorLoggingImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//直接在该实现类的方法中写入日志信息</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorLoggingImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ArithmeticCalculator</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method add() begins with["</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method add() ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method sub() begins with["</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method sub() ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method mul() begins with["</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">*</span> j<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method mul() ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method div() begins with["</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The method div() ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArithmeticCalculatorLoggingProxy-java"><a href="#ArithmeticCalculatorLoggingProxy-java" class="headerlink" title="ArithmeticCalculatorLoggingProxy.java"></a>ArithmeticCalculatorLoggingProxy.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>InvocationHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用该动态代理类，解决ArithmeticCalculatorImpl类方法中的日志问题</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArithmeticCalculatorLoggingProxy</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//要代理的对象</span>    <span class="token keyword">private</span> ArithmeticCalculator target<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ArithmeticCalculatorLoggingProxy</span><span class="token punctuation">(</span>ArithmeticCalculator target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ArithmeticCalculator <span class="token function">getLoggingProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ArithmeticCalculator proxy <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//代理对象有哪一个类加载器负责加载</span>        ClassLoader loader <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//代理对象的类型，即其中有哪些方法。可以通过ArithmeticCalculator.class.getMethods()返回一个方法数组Method[]</span>        Class<span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>ArithmeticCalculator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//当调用代理对象其中的方法时，该执行的代码</span>        InvocationHandler h<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*            * proxy：正在返回的那个代理对象，一般情况下，invoke方法中都不使用该对象。            * method：正在被调用的方法            * args：调用方法时，传入的参数            * */</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Object <span class="token function">invoke</span><span class="token punctuation">(</span>Object proxy<span class="token punctuation">,</span> Method method<span class="token punctuation">,</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//在这里使用proxy时会出现死循环，StackOverflowError。因为一旦使用，又会被动态代理转移到这儿调用invoke，出现死循环</span>                <span class="token comment" spellcheck="true">//System.out.println(proxy.toString());</span>                String methodName <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取方法名</span>                <span class="token comment" spellcheck="true">//日志</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;-yczlab-> The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">" begins with "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//执行方法</span>                Object result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//日志</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;-yczlab-> The method "</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">"ends with "</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> result<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        proxy <span class="token operator">=</span> <span class="token punctuation">(</span>ArithmeticCalculator<span class="token punctuation">)</span> Proxy<span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> interfaces<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//直接在实现类ArithmeticCalculatorLoggingImpl的方法中写日志信息</span>        ArithmeticCalculator arithmeticCalculatorLogging<span class="token punctuation">;</span>        arithmeticCalculatorLogging <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticCalculatorLoggingImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> arithmeticCalculatorLogging<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-->"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> arithmeticCalculatorLogging<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-->"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"***********************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//通过使用动态代理的方式写入日志信息</span>        ArithmeticCalculator target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticCalculatorImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ArithmeticCalculator proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArithmeticCalculatorLoggingProxy</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLoggingProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-->"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-->"</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中的泛型依赖注入</title>
      <link href="/2020/03/08/spring-zhong-de-fan-xing-yi-lai-zhu-ru/"/>
      <url>/2020/03/08/spring-zhong-de-fan-xing-yi-lai-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring可以为子类注入子类对应的泛型类型的成员变量的引用</p><ul><li>User.java</li><li>BaseService.java</li><li>UserService.java</li><li>BaseRepository.java</li><li>UserRepository.java</li><li>Main.javva</li><li>beans-generic-di.xml<a id="more"></a></li></ul><h3 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a>User.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>di<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="BaseService-java"><a href="#BaseService-java" class="headerlink" title="BaseService.java"></a>BaseService.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>di<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseService</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//该注解会被子类继承</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">protected</span> BaseRepository<span class="token operator">&lt;</span>T<span class="token operator">></span> repository<span class="token punctuation">;</span>    <span class="token keyword">public</span>  <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"add..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>repository<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserService-java"><a href="#UserService-java" class="headerlink" title="UserService.java"></a>UserService.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>di<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//父类没有加入Spring的自动管理，子类使用@Service注解加入Spring的自动管理</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">BaseService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//继承@AutoWired注解后，会自动配置好BaseRepository&lt;User>类型的实例Bean</span>    <span class="token comment" spellcheck="true">//相当于如下代码：</span>    <span class="token comment" spellcheck="true">/*    @Autowired    protected BaseRepository&lt;User> repository;    **/</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="BaseRepository-java"><a href="#BaseRepository-java" class="headerlink" title="BaseRepository.java"></a>BaseRepository.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>di<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseRepository</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserRepository-java"><a href="#UserRepository-java" class="headerlink" title="UserRepository.java"></a>UserRepository.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>di<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//父类没有加入Spring的自动管理，子类使用@Repository注解加入Spring的自动管理</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRepository</span> <span class="token keyword">extends</span> <span class="token class-name">BaseRepository</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-javva"><a href="#Main-javva" class="headerlink" title="Main.javva"></a>Main.javva</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>di<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-generic-di.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        UserService userService <span class="token operator">=</span> <span class="token punctuation">(</span>UserService<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-generic-di-xml"><a href="#beans-generic-di-xml" class="headerlink" title="beans-generic-di.xml"></a>beans-generic-di.xml</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.generic.di<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中使用注解配置Bean(2),使用@Autowired注解自动装配属性</title>
      <link href="/2020/03/08/spring-zhong-shi-yong-zhu-jie-pei-zhi-bean-2-shi-yong-autowired-zhu-jie-zi-dong-zhuang-pei-shu-xing/"/>
      <url>/2020/03/08/spring-zhong-shi-yong-zhu-jie-pei-zhi-bean-2-shi-yong-autowired-zhu-jie-zi-dong-zhuang-pei-shu-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>在Spring的配置文件中使用<code>&lt;context:component-scan&gt;</code>元素时，会自动注册 AutowireAnnotationBeanPostProcesser 实例，该实例会自动装配具有 @Autowired 和 @Resource、@Inject 注解标注的属性</p><ul><li>TestObject.java</li><li>UserController.java</li><li>UserService.java</li><li>UserRepository.java</li><li>UserRepositoryImpl.java</li><li>UserJdbcRepositoryImpl.java</li><li>Main.java</li><li>beans-annotation.xml<a id="more"></a></li></ul><h3 id="TestObject-java"><a href="#TestObject-java" class="headerlink" title="TestObject.java"></a>TestObject.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestObject</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserController-java"><a href="#UserController-java" class="headerlink" title="UserController.java"></a>UserController.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//@Autowired注解可以放在属性上</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserController execute..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserService-java"><a href="#UserService-java" class="headerlink" title="UserService.java"></a>UserService.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>UserJdbcRepositoryImpl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>UserRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//@Autowired注解直接放在属性上</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"userRepositoryImpl"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//特别指定IOC容器中的哪个bean实例装配到该属性</span>    <span class="token keyword">private</span> UserRepository userRepository<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"userJdbcRepositoryImpl"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> UserRepository userJdbcRepository<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//@Autowired注解也可以放在方法上</span>    <span class="token comment" spellcheck="true">/*    @Autowired    public void setUserRepository(UserRepository userRepository) {        this.userRepository = userRepository;    }    */</span>    <span class="token comment" spellcheck="true">//@Autowired注解也可以放在形参前面</span>    <span class="token comment" spellcheck="true">/*    @Autowired    public void setUserRepository(@Autowired UserRepository userRepository) {        this.userRepository = userRepository;    }    */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserService add..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userJdbcRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserRepository-java"><a href="#UserRepository-java" class="headerlink" title="UserRepository.java"></a>UserRepository.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserRepositoryImpl-java"><a href="#UserRepositoryImpl-java" class="headerlink" title="UserRepositoryImpl.java"></a>UserRepositoryImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>TestObject<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加注解并设置bean在IOC容器中的名字，即id。也可以使用默认名字userRepositoryImpl</span><span class="token comment" spellcheck="true">//@Repository("userRepository")</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRepositoryImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//设置@Autowired注解的required属性为false，当容器中没有testObject的Bean实例时也不会报错，不然会报错</span>    <span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> TestObject testObject<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserRepository Save..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testObject: "</span> <span class="token operator">+</span> testObject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserJdbcRepositoryImpl-java"><a href="#UserJdbcRepositoryImpl-java" class="headerlink" title="UserJdbcRepositoryImpl.java"></a>UserJdbcRepositoryImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserJdbcRepositoryImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserJdbcRepository save..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>UserController<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>UserRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-annotation.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*//通过注解的方式配置bean（1）        TestObject testObject = (TestObject) context.getBean("testObject");        System.out.println(testObject);        UserController userController = (UserController) context.getBean("userController");        System.out.println(userController);        UserService userService = (UserService) context.getBean("userService");        System.out.println(userService);        UserRepository userRepository = (UserRepository) context.getBean("userRepository");        System.out.println(userRepository);        */</span>        <span class="token comment" spellcheck="true">//通过注解的方式配置bean（2），主要是bean之间的关联关系</span>        UserController userController <span class="token operator">=</span> <span class="token punctuation">(</span>UserController<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userController"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userController<span class="token punctuation">)</span><span class="token punctuation">;</span>        userController<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-annotation-xml配置文件"><a href="#beans-annotation-xml配置文件" class="headerlink" title="beans-annotation.xml配置文件"></a>beans-annotation.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--        指定Spring Ioc容器扫描的包        Spring容器会自动管理所扫描包下的标有@Component、@Controller、@Service、@Repository注解的类    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.annotation<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--可以通过resource-pattern指定扫描的资源--></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan                base-package="com.yczlab.spring.beans.annotation"                resource-pattern="repository/*.class">        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!-- context:exclude-filter 子节点指定排除哪些指定表达式的组件 --></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation">            &lt;context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!-- context:include-filter 子节点指定包含哪些指定表达式的组件，该子节点需要与use-default-filters="false"配合使用 --></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation" use-default-filters="false">            &lt;context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!--type="assignable"的context:exclude-filter子节点--></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation">            &lt;context:exclude-filter type="assignable" expression="com.yczlab.spring.beans.annotation.repository.UserRepository"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!--type="assignable"的context:include-filter子节点，该子节点需要与use-default-filters="false"配合使用--></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation" use-default-filters="false">            &lt;context:include-filter type="assignable" expression="com.yczlab.spring.beans.annotation.repository.UserRepository"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!--组件装配        &lt;context:component-scan>元素还会自动注册 AutowireAnnotationBeanPostProcesser 实例，        该实例会自动装配具有 @Autowired 和 @Resource、@Inject 注解的属性        @Autowired注解：自动装配具有兼容类型的单个Bean属性        - 构造器，普通字段（即使是非public），一切具有参数的方法都可以应用@Autowired注解        - 默认情况下，所有使用@Autowired注解的属性都需要被设置。当Spring找不到匹配的Bean装配属性时，会抛出异常。          若某一属性允许不被设置，可以设置@Autowired注解的required属性为false        - 默认情况下, 当 IOC 容器里存在多个类型兼容的 Bean 时, 通过类型的自动装配将无法工作.          此时可以在 @Qualifier 注解里提供 Bean 的名称. Spring 允许对方法的入参标注 @Qualifiter 已指定注入 Bean 的名称        - @Authwired 注解也可以应用在数组类型的属性上, 此时 Spring 将会把所有匹配的Bean进行自动装配.        - @Authwired 注解也可以应用在集合属性上, 此时Spring读取该集合的类型信息, 然后自动装配所有与之兼容的 Bean.        - @Authwired 注解用在java.util.Map上时, 若该Map的键值为String,那么Spring将自动装配与之Map值类型兼容的Bean          此时Bean的名称作为键(key)，Bean实例作为值(value)        Spring 还支持 @Resource 和 @Inject 注解，这两个注解和 @Autowired 注解的功用类似        @Resource注解：要求提供一个 Bean名称的属性，若该属性为空，则自动采用标注处的变量或方法名作为Bean的名称        @Inject注解：和@Autowired注解一样也是按类型匹配注入的 Bean，但没有reqired属性        建议使用 @Autowired 注解    --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中使用注解配置Bean(1)</title>
      <link href="/2020/03/08/spring-zhong-shi-yong-zhu-jie-pei-zhi-bean-1/"/>
      <url>/2020/03/08/spring-zhong-shi-yong-zhu-jie-pei-zhi-bean-1/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>在Spring中通过添加注解的方式来配置Bean，Spring容器会自动管理所扫描包(可以自行配置所要扫描的包的路径)下的标有@Component、@Controller、@Service、@Repository注解的类</p><ul><li>TestObject.java</li><li>UserController.java</li><li>UserService.java</li><li>UserRepository.java</li><li>UserRepositoryImpl.java</li><li>Main.java</li><li>beans-annotation.xml<a id="more"></a></li></ul><h3 id="TestObject-java"><a href="#TestObject-java" class="headerlink" title="TestObject.java"></a>TestObject.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestObject</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserController-java"><a href="#UserController-java" class="headerlink" title="UserController.java"></a>UserController.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserController execute..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserService-java"><a href="#UserService-java" class="headerlink" title="UserService.java"></a>UserService.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserService add..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserRepository-java"><a href="#UserRepository-java" class="headerlink" title="UserRepository.java"></a>UserRepository.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UserRepositoryImpl-java"><a href="#UserRepositoryImpl-java" class="headerlink" title="UserRepositoryImpl.java"></a>UserRepositoryImpl.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加注解并设置bean在IOC容器中的名字，即id</span><span class="token annotation punctuation">@Repository</span><span class="token punctuation">(</span><span class="token string">"userRepository"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRepositoryImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserRepository Save..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>UserController<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>UserRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-annotation.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TestObject testObject <span class="token operator">=</span> <span class="token punctuation">(</span>TestObject<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"testObject"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>testObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        UserController userController <span class="token operator">=</span> <span class="token punctuation">(</span>UserController<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userController"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userController<span class="token punctuation">)</span><span class="token punctuation">;</span>        UserService userService <span class="token operator">=</span> <span class="token punctuation">(</span>UserService<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userService<span class="token punctuation">)</span><span class="token punctuation">;</span>        UserRepository userRepository <span class="token operator">=</span> <span class="token punctuation">(</span>UserRepository<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userRepository"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-annotation-xml配置文件"><a href="#beans-annotation-xml配置文件" class="headerlink" title="beans-annotation.xml配置文件"></a>beans-annotation.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--指定Spring Ioc容器扫描的包--></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation"/>    --></span>    <span class="token comment" spellcheck="true">&lt;!--可以通过resource-pattern指定扫描的资源--></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan                base-package="com.yczlab.spring.beans.annotation"                resource-pattern="repository/*.class">        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!-- context:exclude-filter 子节点指定排除哪些指定表达式的组件 --></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation">            &lt;context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!-- context:include-filter 子节点指定包含哪些指定表达式的组件，该子节点需要与use-default-filters="false"配合使用 --></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation" use-default-filters="false">            &lt;context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!--type="assignable"的context:exclude-filter子节点--></span>    <span class="token comment" spellcheck="true">&lt;!--        &lt;context:component-scan base-package="com.yczlab.spring.beans.annotation">            &lt;context:exclude-filter type="assignable" expression="com.yczlab.spring.beans.annotation.repository.UserRepository"/>        &lt;/context:component-scan>    --></span>    <span class="token comment" spellcheck="true">&lt;!--type="assignable"的context:include-filter子节点，该子节点需要与use-default-filters="false"配合使用--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.annotation<span class="token punctuation">"</span></span> <span class="token attr-name">use-default-filters</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>include-filter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>assignable<span class="token punctuation">"</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.annotation.repository.UserRepository<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring通过FactoryBean来配置bean</title>
      <link href="/2020/03/08/spring-tong-guo-factorybean-lai-pei-zhi-bean/"/>
      <url>/2020/03/08/spring-tong-guo-factorybean-lai-pei-zhi-bean/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>通过实现FactoryBean接口来配置bean</p><ul><li>Car.java</li><li>CarFactoryBean.java</li><li>Main.java</li><li>beans-beanfactory.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factorybean<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CarFactoryBean-java"><a href="#CarFactoryBean-java" class="headerlink" title="CarFactoryBean.java"></a>CarFactoryBean.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factorybean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>FactoryBean<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自定义的FactoryBean需要实现FactoryBean接口</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CarFactoryBean</span> <span class="token keyword">implements</span> <span class="token class-name">FactoryBean</span><span class="token operator">&lt;</span>Car<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//返回bean的对象</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Car <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span>brand<span class="token punctuation">,</span> <span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//返回bean的类型</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Car<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//是否为单实例</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factorybean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-beanfactory.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-beanfactory-xml"><a href="#beans-beanfactory-xml" class="headerlink" title="beans-beanfactory.xml"></a>beans-beanfactory.xml</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--        通过FactoryBean来配置Bean的实例        class：指向FactoryBean的全类名        property：配置FactoryBean的属性        但实际返回的实例却是FactoryBean的getObject()方法返回的实例！    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.factorybean.CarFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BMW<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中使用工厂方法配置Bean(静态工厂,实例工厂)</title>
      <link href="/2020/03/08/spring-zhong-shi-yong-gong-han-fang-fa-pei-zhi-bean-jing-tai-gong-han-shi-li-gong-han/"/>
      <url>/2020/03/08/spring-zhong-shi-yong-gong-han-fang-fa-pei-zhi-bean-jing-tai-gong-han-shi-li-gong-han/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>通过静态工厂方法来配置bean，注意不是配置静态工厂方法实例，而是配置bean实例。<br>通过实例工厂方法来配置bean，先配置工厂的bean实例，再配置所需bean实例。</p><ul><li>Car.java</li><li>StaticCarFactory.java</li><li>InstanceCarFactory.java</li><li>Main.java</li><li>beans-factory.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="StaticCarFactory-java"><a href="#StaticCarFactory-java" class="headerlink" title="StaticCarFactory.java"></a>StaticCarFactory.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Description: 静态工厂方法：直接调用某个类的静态方法就可以返回Bean的实例 * @Author: ycz * @Date: 2020/3/5 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StaticCarFactory</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span> cars <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span><span class="token punctuation">{</span>        cars<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"audi"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">"audi"</span><span class="token punctuation">,</span> <span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cars<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ford"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">"ford"</span><span class="token punctuation">,</span><span class="token number">400000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//静态工厂方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cars<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="InstanceCarFactory-java"><a href="#InstanceCarFactory-java" class="headerlink" title="InstanceCarFactory.java"></a>InstanceCarFactory.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Description: 实例工厂的方法：即先需要创建工厂本身，再调用实例化后的工厂的方法返回bean实例 * @Author: ycz * @Date: 2020/3/5 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InstanceCarFactory</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span> cars <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">InstanceCarFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cars <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cars<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"audi"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">"audi"</span><span class="token punctuation">,</span> <span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cars<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ford"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">"ford"</span><span class="token punctuation">,</span> <span class="token number">400000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cars<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>brand<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-factory.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car1 <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"staticCar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"**********************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car2 <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"instanceCar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-factory-xml配置文件"><a href="#beans-factory-xml配置文件" class="headerlink" title="beans-factory.xml配置文件"></a>beans-factory.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--通过静态工厂方法来配置bean，注意不是配置静态工厂方法实例，而是配置bean实例--></span>    <span class="token comment" spellcheck="true">&lt;!--        class属性：指向静态工厂方法的全类名        factory-method：指向静态工厂方法的名字        constructor-arg：如果工厂方法需要传入参数，则使用constructor-arg来配置参数    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>staticCar<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.factory.StaticCarFactory<span class="token punctuation">"</span></span>          <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getCar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置工厂的实例--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>carFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.factory.InstanceCarFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--通过实例工厂的方法来配置bean--></span>    <span class="token comment" spellcheck="true">&lt;!--        class属性：不需要        factory-bean：指向工厂的实例bean        constructor-arg：如果工厂方法需要传入参数，则使用constructor-arg来配置参数    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>instanceCar<span class="token punctuation">"</span></span> <span class="token attr-name">factory-bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>carFactory<span class="token punctuation">"</span></span> <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getCar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ford<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring IOC容器对Bean生命周期的管理</title>
      <link href="/2020/03/08/spring-ioc-rong-qi-dui-bean-sheng-ming-zhou-qi-de-guan-li/"/>
      <url>/2020/03/08/spring-ioc-rong-qi-dui-bean-sheng-ming-zhou-qi-de-guan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring的IOC容器对Bean生命周期的管理，包括Bean的后置处理器、初始化和销毁等</p><ul><li>Car.java</li><li>MyBeanPostProcessor.java</li><li>Main.java</li><li>beans-cycle.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>cycle<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Car's Constructor..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"setBrand..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"init..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"destroy..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="MyBeanPostProcessor-java"><a href="#MyBeanPostProcessor-java" class="headerlink" title="MyBeanPostProcessor.java"></a>MyBeanPostProcessor.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>cycle<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>BeansException<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>config<span class="token punctuation">.</span>BeanPostProcessor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Object <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span>Object bean<span class="token punctuation">,</span> String beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> BeansException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"postProcessBeforeInitialization: "</span> <span class="token operator">+</span> bean <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//...</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Object <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span>Object bean<span class="token punctuation">,</span> String beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> BeansException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"postProcessAfterInitialization: "</span> <span class="token operator">+</span> bean <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//可以偷梁换柱</span>        Car car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        car<span class="token punctuation">.</span><span class="token function">setBrand</span><span class="token punctuation">(</span><span class="token string">"Ford"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>cycle<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ClassPathXmlApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-cycle.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关闭IOC容器</span>        context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-cycle-xml配置文件"><a href="#beans-cycle-xml配置文件" class="headerlink" title="beans-cycle.xml配置文件"></a>beans-cycle.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--Spring IOC容器对Bean生命周期进行管理的过程：            - 通过构造器或工厂方法创建Bean实例            - 为Bean的属性设置值和对其他Bean的引用            - 调用Bean的初始化方法            - 正常使用Bean            - 当容器关闭时，调用Bean的销毁方法    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.cycle.Car<span class="token punctuation">"</span></span>          <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>init<span class="token punctuation">"</span></span> <span class="token attr-name">destroy-method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>destroy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置Bean后置处理器，实现更细粒度的控制        实现BeanPostProcessor接口，并提供        postProcessBeforeInitialization(Object bean, String beanName)：在init-method之前被调用        postProcessAfterInitialization(Object bean, String beanName)：在destroy-method之后被调用        以上两个方法的实现        bean：bean实例本身        beanName：IOC容器配置的bean的名字，即唯一表示id        返回值：是实际上返回给用户的那个Bean，注意：可以在以上两个方法中修改返回的bean，甚至返回一个新的bean    --></span>    <span class="token comment" spellcheck="true">&lt;!--配置bean的后置处理器：不需要配置id，IOC容器自动识别是一个BeanPostProcesser--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.cycle.MyBeanPostProcessor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置了Bean后置处理器后，Spring IOC容器对Bean生命周期进行管理的过程：            - 通过构造器或工厂方法创建Bean实例            - 为Bean的属性设置值和对其他Bean的引用            - 将Bean实例传递给Bean后置处理器的postProcessBeforeInitialization()方法            - 调用Bean的初始化方法            - 将将Bean实例传递给Bean后置处理器的postProcessAfterInitialization()方法            - 正常使用Bean            - 当容器关闭时，调用Bean的销毁方法    --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring中使用SpEL为Bean的属性动态赋值</title>
      <link href="/2020/03/08/spring-zhong-shi-yong-spel-wei-bean-de-shu-xing-dong-tai-fu-zhi/"/>
      <url>/2020/03/08/spring-zhong-shi-yong-spel-wei-bean-de-shu-xing-dong-tai-fu-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>可以在Spring中使用SpEL语言为Bean的属性赋一个字面值，引用其他类的静态属性，引用其他的Bean，引用其他Bean的属性，还可以在SpEL中使用运算符。</p><ul><li>Address.java</li><li>Car.java</li><li>Person.java</li><li>Main.java</li><li>beans-spel.xml<a id="more"></a></li></ul><h3 id="Address-java"><a href="#Address-java" class="headerlink" title="Address.java###"></a>Address.java###</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>spel<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String city<span class="token punctuation">;</span>    <span class="token keyword">private</span> String street<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCity</span><span class="token punctuation">(</span>String city<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getStreet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> street<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStreet</span><span class="token punctuation">(</span>String street<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>street <span class="token operator">=</span> street<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Address{"</span> <span class="token operator">+</span>                <span class="token string">"city='"</span> <span class="token operator">+</span> city <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", street='"</span> <span class="token operator">+</span> street <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>spel<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//轮胎周长</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> tyrePerimeter<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getTyrePerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> tyrePerimeter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTyrePerimeter</span><span class="token punctuation">(</span><span class="token keyword">double</span> tyrePerimeter<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tyrePerimeter <span class="token operator">=</span> tyrePerimeter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">", tyrePerimeter="</span> <span class="token operator">+</span> tyrePerimeter <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>spel<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Car car<span class="token punctuation">;</span>    <span class="token keyword">private</span> String city<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//打算 引用address bean的city属性</span>    <span class="token keyword">private</span> String info<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//打算 根据car的price属性确定info。price>=300000,为金领；否则为白领</span>    <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCar</span><span class="token punctuation">(</span>Car car<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>car <span class="token operator">=</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCity</span><span class="token punctuation">(</span>String city<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> info<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInfo</span><span class="token punctuation">(</span>String info<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> info<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Person{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", car="</span> <span class="token operator">+</span> car <span class="token operator">+</span>                <span class="token string">", city='"</span> <span class="token operator">+</span> city <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", info='"</span> <span class="token operator">+</span> info <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>spel<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-spel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Address address <span class="token operator">=</span> <span class="token punctuation">(</span>Address<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"****************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"person"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-spel-xml"><a href="#beans-spel-xml" class="headerlink" title="beans-spel.xml"></a>beans-spel.xml</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.spel.Address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--使用SpEL为属性赋一个字面值--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{<span class="token punctuation">'</span>BeiJing<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>street<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WuDaoKou<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.spel.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--使用SpEL引用类的静态属性--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tyrePerimeter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{T(java.lang.Math).PI * 80}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>person<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.spel.Person<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--使用SpEL来引用其他的Bean--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{car}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--使用SpEL来引用其他Bean的属性--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{address.city}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 在SpEL中使用运算符 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{car.price <span class="token punctuation">></span> 300000 ? <span class="token punctuation">'</span>金领<span class="token punctuation">'</span>:<span class="token punctuation">'</span>白领<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tom<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring配置Bean时使用外部属性文件(比如配置数据库源)</title>
      <link href="/2020/03/08/spring-pei-zhi-bean-shi-shi-yong-wai-bu-shu-xing-wen-jian-bi-ru-pei-zhi-shu-ju-ku-yuan/"/>
      <url>/2020/03/08/spring-pei-zhi-bean-shi-shi-yong-wai-bu-shu-xing-wen-jian-bi-ru-pei-zhi-shu-ju-ku-yuan/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Spring在配置某些Bean时可以使用外部的属性文件。使用外部化属性文件中的属性，在之后开发过程中便于修改，只需修改外部的属性文件即可。比如配置数据库时。</p><ul><li>Main.java</li><li>beans-properties.xml</li><li>db.properties<a id="more"></a></li></ul><h3 id="需要在工程中添加如下的“-jar”包文件"><a href="#需要在工程中添加如下的“-jar”包文件" class="headerlink" title="需要在工程中添加如下的“.jar”包文件"></a>需要在工程中添加如下的“.jar”包文件</h3><ul><li><a href="c3p0-0.9.5.5.jar">c3p0-0.9.5.5.jar</a></li><li><a href="mysql-connector-java-8.0.18.jar">mysql-connector-java-8.0.18.jar</a></li><li><a href="mchange-commons-java-0.2.19.jar">mchange-commons-java-0.2.19.jar</a></li></ul><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>properties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-properties.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DataSource dataSource <span class="token operator">=</span> <span class="token punctuation">(</span>DataSource<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"dataSource"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*********************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DataSource dataSource1 <span class="token operator">=</span> <span class="token punctuation">(</span>DataSource<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"dataSource1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dataSource1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-properties-xml（src-目录下）"><a href="#beans-properties-xml（src-目录下）" class="headerlink" title="beans-properties.xml（src/目录下）"></a>beans-properties.xml（src/目录下）</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 导入属性文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:db.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--传统方式配置，在之后开发过程中的修改很麻烦--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--实际的数据库用户名--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--实际的数据库密码--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc:mysql:///spring_learning_test?serverTimezone<span class="token punctuation">=</span>UTC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--实际的数据库名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--使用外部化属性文件的属性，在之后开发过程中便于修改，只需修改外部的属性文件即可--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${driverClass}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbcUrl}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="db-properties（src-目录下）"><a href="#db-properties（src-目录下）" class="headerlink" title="db.properties（src/目录下）"></a>db.properties（src/目录下）</h3><pre><code># 实际的数据库用户名user=root# 实际的数据库密码password=123456driverClass=com.mysql.cj.jdbc.Driver# 实际的数据库名jdbcUrl=jdbc:mysql:///spring_learning_test?serverTimezone=UTC</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean的作用域(单例,原型)</title>
      <link href="/2020/03/07/bean-de-zuo-yong-yu-dan-li-yuan-xing/"/>
      <url>/2020/03/07/bean-de-zuo-yong-yu-dan-li-yuan-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>使用bean的scope属性来配置bean的作用域</p><ul><li>Car.java</li><li>Main.java</li><li>beans-scope.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>scope<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Car's Constructor..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>scope<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-scope.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car2 <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car2<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car <span class="token operator">==</span> car2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-scope-xml"><a href="#beans-scope-xml" class="headerlink" title="beans-scope.xml"></a>beans-scope.xml</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--        使用bean的scope属性来配置bean的作用域        singleton：默认值。容器初始化时创建Bean实例，在整个容器的生命周期内只创建这一个bean，单例的。        prototype：原型的。容器初始化时不创建Bean的实例，而在每次请求时都创建一个新的Bean实例，并返回。    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.scope.Car<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prototype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean之间的继承依赖关系</title>
      <link href="/2020/03/07/bean-zhi-jian-de-ji-cheng-yi-lai-guan-xi/"/>
      <url>/2020/03/07/bean-zhi-jian-de-ji-cheng-yi-lai-guan-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>bean的配置可以被继承，“子类bean”使用parent属性指定继承哪个“父类bean”的配置</p><ul><li>Address.java</li><li>Car.java</li><li>Person.java</li><li>Main.java</li><li>beans-relation.xml<a id="more"></a></li></ul><h3 id="Address-java"><a href="#Address-java" class="headerlink" title="Address.java"></a>Address.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String city<span class="token punctuation">;</span>    <span class="token keyword">private</span> String street<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCity</span><span class="token punctuation">(</span>String city<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getStreet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> street<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStreet</span><span class="token punctuation">(</span>String street<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>street <span class="token operator">=</span> street<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Address{"</span> <span class="token operator">+</span>                <span class="token string">"city='"</span> <span class="token operator">+</span> city <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", street='"</span> <span class="token operator">+</span> street <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Address address<span class="token punctuation">;</span>    <span class="token keyword">private</span> Car car<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Address <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span>Address address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCar</span><span class="token punctuation">(</span>Car car<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>car <span class="token operator">=</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Person{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", address="</span> <span class="token operator">+</span> address <span class="token operator">+</span>                <span class="token string">", car="</span> <span class="token operator">+</span> car <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>relation<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">.</span>Address<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">.</span>Person<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-relation.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//抽象Bean在IOC容器中不会被实例化</span>        <span class="token comment" spellcheck="true">//Address address = (Address) context.getBean("address");</span>        <span class="token comment" spellcheck="true">//System.out.println(address);</span>        Address address <span class="token operator">=</span> <span class="token punctuation">(</span>Address<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"address2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"******************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        address <span class="token operator">=</span> <span class="token punctuation">(</span>Address<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"address3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"******************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        address <span class="token operator">=</span> <span class="token punctuation">(</span>Address<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"address4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"******************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"person"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-relation-xml配置文件"><a href="#beans-relation-xml配置文件" class="headerlink" title="beans-relation.xml配置文件"></a>beans-relation.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--    抽象bean：bean的abstract属性为true的bean，这样的bean不能被IOC容器实例化，只用来继承配置，但是abstract属性不会被继承    若某一个bean的class属性没有指定，则该bean必须是一个抽象bean    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Address<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>city</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BeiJing^<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>street</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WuDaoKou<span class="token punctuation">"</span></span> <span class="token attr-name">abstract</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Address<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>city</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BeiJing<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>street</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DaZhongSi<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--bean配置的继承：使用bean的parent属性指定继承那个bean的配置，但是abstract属性并不会被继承--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Address<span class="token punctuation">"</span></span>          <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address4<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Address<span class="token punctuation">"</span></span>          <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address2<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>street</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DaZhongSi<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Car<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>brand</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>price</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--    depends-on属性：要求在配置Person时，必须有一个关联的car。换句话说person这个bean依赖于Car这个bean,但是并不会装配这个car    depends-on属性设置Bean前置依赖的Bean，前置依赖度Bean会在本Bean实例化之前创建好，如果依赖多个Bean，则通过逗号或空格隔开    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>person<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Person<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tom<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>address-ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address2<span class="token punctuation">"</span></span> <span class="token attr-name">depends-on</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean的自动装配autowire属性</title>
      <link href="/2020/03/07/bean-de-zi-dong-zhuang-pei-autowire-shu-xing/"/>
      <url>/2020/03/07/bean-de-zi-dong-zhuang-pei-autowire-shu-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>使用autowire属性，自动将IOC容器中的bean装配到当前所配置的bean的属性中</p><ul><li>Address.java</li><li>Car.java</li><li>Person.java</li><li>Main.java</li><li>beans-autowire.xml<a id="more"></a></li></ul><h3 id="Address-java"><a href="#Address-java" class="headerlink" title="Address.java"></a>Address.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String city<span class="token punctuation">;</span>    <span class="token keyword">private</span> String street<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getCity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCity</span><span class="token punctuation">(</span>String city<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getStreet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> street<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStreet</span><span class="token punctuation">(</span>String street<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>street <span class="token operator">=</span> street<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Address{"</span> <span class="token operator">+</span>                <span class="token string">"city='"</span> <span class="token operator">+</span> city <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", street='"</span> <span class="token operator">+</span> street <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Address address<span class="token punctuation">;</span>    <span class="token keyword">private</span> Car car<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Address <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span>Address address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCar</span><span class="token punctuation">(</span>Car car<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>car <span class="token operator">=</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Person{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", address="</span> <span class="token operator">+</span> address <span class="token operator">+</span>                <span class="token string">", car="</span> <span class="token operator">+</span> car <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>autowire<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"beans-autowire.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"person"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="beans-autowire-xml配置文件"><a href="#beans-autowire-xml配置文件" class="headerlink" title="beans-autowire.xml配置文件"></a>beans-autowire.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Address<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>city</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BeiJing<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>street</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HuiLongGuan<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Address<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>city</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DaLian<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>street</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ZhongShan<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Car<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>brand</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>price</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--    可以使用autowire属性指定自动装配的方式。    byName 根据bean的名字和当前bean的setter风格的属性名进行自动装配。若有匹配的，则进行自动装配；若没有匹配的，则不装配    byType 根据bean的类型和当前bean的属性的类型进行自动装配。若IOC容器中有1个以上的类型匹配的bean，则抛异常。    不能兼用2中自动装配方式。    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>person<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.autowire.Person<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tom<span class="token punctuation">"</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>byName<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean的属性配置细节(p命名空间为bean的属性赋值)</title>
      <link href="/2020/03/07/bean-de-shu-xing-pei-zhi-xi-jie-p-ming-ming-kong-jian-wei-bean-de-shu-xing-fu-zhi/"/>
      <url>/2020/03/07/bean-de-shu-xing-pei-zhi-xi-jie-p-ming-ming-kong-jian-wei-bean-de-shu-xing-fu-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>在配置文件中使用p命名空间为所配置的bean的属性赋值</p><ul><li>Car.java</li><li>ListPerson.java</li><li>Main.java</li><li>applicationContext.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> String corp<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCorp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCorp</span><span class="token punctuation">(</span>String corp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxSpeed</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", corp='"</span> <span class="token operator">+</span> corp <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">", maxSpeed="</span> <span class="token operator">+</span> maxSpeed <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ListPerson-java"><a href="#ListPerson-java" class="headerlink" title="ListPerson.java"></a>ListPerson.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>Car<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListPerson</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ListPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">ListPerson</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> <span class="token function">getCars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCars</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"ListPerson{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", cars="</span> <span class="token operator">+</span> cars <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ListPerson listPerson2 <span class="token operator">=</span> <span class="token punctuation">(</span>ListPerson<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"listPerson2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>listPerson2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>uitl</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/util<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--通过构造方法来配置bean的属性--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ShangHai<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>double<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Baoma<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--属性值也可以使用value子节点进行配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>ShanHai^<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>250<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置独立的集合Bean，以供多个Bean进行引用。需导入util命名空间--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">uitl:</span>list</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ref</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">uitl:</span>list</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通过 p 命名空间为bean的属性赋值，需要先导入 p 命名空间。相对于传统的配置方式更加的简洁。 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listPerson2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.collections.ListPerson<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">p:</span>age</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Queen<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>cars-ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean的属性配置细节(配置独立的集合Bean)</title>
      <link href="/2020/03/07/bean-de-shu-xing-pei-zhi-xi-jie-pei-zhi-du-li-de-ji-he-bean/"/>
      <url>/2020/03/07/bean-de-shu-xing-pei-zhi-xi-jie-pei-zhi-du-li-de-ji-he-bean/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>配置独立的集合Bean，以供多个Bean进行引用。需导入util命名空间</p><ul><li>Car.java</li><li>ListPerson.java</li><li>Main.java</li><li>applicationContext.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> String corp<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCorp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCorp</span><span class="token punctuation">(</span>String corp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxSpeed</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", corp='"</span> <span class="token operator">+</span> corp <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">", maxSpeed="</span> <span class="token operator">+</span> maxSpeed <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ListPerson-java"><a href="#ListPerson-java" class="headerlink" title="ListPerson.java"></a>ListPerson.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>Car<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListPerson</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ListPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">ListPerson</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> <span class="token function">getCars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCars</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"ListPerson{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", cars="</span> <span class="token operator">+</span> cars <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ListPerson listPerson <span class="token operator">=</span> <span class="token punctuation">(</span>ListPerson<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"listPerson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>listPerson<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>uitl</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/util<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--通过构造方法来配置bean的属性--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ShangHai<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>double<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Baoma<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--属性值也可以使用value子节点进行配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>ShanHai^<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>250<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置独立的集合Bean，以供多个Bean进行引用。需导入util命名空间--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">uitl:</span>list</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ref</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">uitl:</span>list</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listPerson<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.collections.ListPerson<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Jack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>29<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bean的属性配置细节(配置集合属性)</title>
      <link href="/2020/03/07/bean-de-shu-xing-pei-zhi-xi-jie-pei-zhi-ji-he-shu-xing/"/>
      <url>/2020/03/07/bean-de-shu-xing-pei-zhi-xi-jie-pei-zhi-ji-he-shu-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>为Spring中的Bean配置集合属性。</p><ul><li>Car.java</li><li>ListPerson.java</li><li>MapPerson.java</li><li>DataSource.java</li><li>Main.java</li><li>applicationContext.xml<a id="more"></a></li></ul><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> String corp<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCorp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCorp</span><span class="token punctuation">(</span>String corp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxSpeed</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", corp='"</span> <span class="token operator">+</span> corp <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">", maxSpeed="</span> <span class="token operator">+</span> maxSpeed <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ListPerson"><a href="#ListPerson" class="headerlink" title="ListPerson"></a>ListPerson</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>Car<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListPerson</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ListPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">ListPerson</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Car<span class="token operator">></span> <span class="token function">getCars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCars</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"ListPerson{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", cars="</span> <span class="token operator">+</span> cars <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="MapPerson"><a href="#MapPerson" class="headerlink" title="MapPerson"></a>MapPerson</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>Car<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapPerson</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span> cars<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">MapPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">MapPerson</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span> <span class="token function">getCars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCars</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Car<span class="token operator">></span> cars<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cars <span class="token operator">=</span> cars<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"MapPerson{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", cars="</span> <span class="token operator">+</span> cars <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="DataSource"><a href="#DataSource" class="headerlink" title="DataSource"></a>DataSource</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Properties<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSource</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Properties properties<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">DataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">DataSource</span><span class="token punctuation">(</span>Properties properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> properties<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Properties <span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> properties<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setProperties</span><span class="token punctuation">(</span>Properties properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> properties<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"DataSource{"</span> <span class="token operator">+</span>                <span class="token string">"properties="</span> <span class="token operator">+</span> properties <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>collections<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ListPerson listPerson <span class="token operator">=</span> <span class="token punctuation">(</span>ListPerson<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"listPerson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>listPerson<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        MapPerson mapPerson <span class="token operator">=</span> <span class="token punctuation">(</span>MapPerson<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"mapPerson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapPerson<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DataSource dataSource <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>DataSource<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--通过构造方法来配置bean的属性--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ShangHai<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>double<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Baoma<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--属性值也可以使用value子节点进行配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>ShanHai^<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>250<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 测试如何配置集合属性 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置List属性值 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listPerson<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.collections.ListPerson<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mike<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>27<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 使用list节点为List类型的属性赋值--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ref</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Ford<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ChangAn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200000<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>double<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置Map属性值 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapPerson<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.collections.MapPerson<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Rose<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>28<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--使用map节点及map的entry子节点配置Map类型的成员变量--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AA<span class="token punctuation">"</span></span> <span class="token attr-name">value-ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BB<span class="token punctuation">"</span></span> <span class="token attr-name">value-ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置Properties属性值 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.collections.DataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>properties<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--使用props和prop节点来为Properties属性赋值--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>props</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1234<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>jdbc:mysql:///test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>props</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring配置Bean</title>
      <link href="/2020/03/07/spring-pei-zhi-bean/"/>
      <url>/2020/03/07/spring-pei-zhi-bean/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>在Spring IOC容器中配置Bean，然后使用该Bean</p><a id="more"></a><h3 id="Car-java"><a href="#Car-java" class="headerlink" title="Car.java"></a>Car.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String brand<span class="token punctuation">;</span>    <span class="token keyword">private</span> String corp<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Car</span><span class="token punctuation">(</span>String brand<span class="token punctuation">,</span> String corp<span class="token punctuation">,</span> <span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span>String brand<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCorp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCorp</span><span class="token punctuation">(</span>String corp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>corp <span class="token operator">=</span> corp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxSpeed</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed <span class="token operator">=</span> maxSpeed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Car{"</span> <span class="token operator">+</span>                <span class="token string">"brand='"</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", corp='"</span> <span class="token operator">+</span> corp <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", price="</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">", maxSpeed="</span> <span class="token operator">+</span> maxSpeed <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> Car car<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> Car car<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>car <span class="token operator">=</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Car <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCar</span><span class="token punctuation">(</span>Car car<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>car <span class="token operator">=</span> car<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Person{"</span> <span class="token operator">+</span>                <span class="token string">"name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", car="</span> <span class="token operator">+</span> car <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HelloWorld-java"><a href="#HelloWorld-java" class="headerlink" title="HelloWorld.java"></a>HelloWorld.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWorld's Constructor..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">HelloWorld</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"setName: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>yczlab<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>beans<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*        HelloWorld helloWorld = new HelloWorld();        helloWorld.setName("yczlab");        helloWorld.hello();        */</span>        <span class="token comment" spellcheck="true">//1、创建Spring的IOC容器对象</span>        <span class="token comment" spellcheck="true">//ApplicationContext(接口) 代表IOC</span>        <span class="token comment" spellcheck="true">//ClassPathXmlApplicationContext 是ApplicationContext接口的实现类，从类路径下加载配置文件夹</span>        ApplicationContext ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2、从IOC容器中获取Bean实例</span>        <span class="token comment" spellcheck="true">//利用id定位到IOC容器中的bean</span>        HelloWorld helloWorld <span class="token operator">=</span> <span class="token punctuation">(</span>HelloWorld<span class="token punctuation">)</span>ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"helloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//利用类型放回IOC容器中的Bean，但要求IOC容器中必须只能有一个该类型的Bean</span>        <span class="token comment" spellcheck="true">//HelloWorld helloWorld = (HelloWorld) ctx.getBean(HelloWorld.class);</span>        <span class="token comment" spellcheck="true">//3、调用hello方法</span>        helloWorld<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Car car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        car <span class="token operator">=</span> <span class="token punctuation">(</span>Car<span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"car2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Person person <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"person"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>        person <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"person2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="applicationContext-xml配置文件（src-路径下）"><a href="#applicationContext-xml配置文件（src-路径下）" class="headerlink" title="applicationContext.xml配置文件（src/路径下）"></a>applicationContext.xml配置文件（src/路径下）</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--        配置bean：        class：bean的全类名，通过反射的方式在IOC容器中创建Bean，所以要求Bean中必须有无参的构造器        id：标识容器中的bean，di是唯一的。    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>helloWorld2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.HelloWorld<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yczlab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>helloWorld<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.HelloWorld<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yczlab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--通过构造方法来配置bean的属性--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Audi<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ShangHai<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300000<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>double<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Baoma<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--属性值也可以使用value子节点进行配置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>ShanHai^<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>250<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>person<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Person<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--可以使用property的ref属性或ref建立bean之间的引用关系--></span>        <span class="token comment" spellcheck="true">&lt;!-- &lt;property name="car" ref="car2">&lt;/property> --></span>        <span class="token comment" spellcheck="true">&lt;!--        &lt;property name="car">            &lt;ref bean="car2">&lt;/ref>        &lt;/property>        --></span>        <span class="token comment" spellcheck="true">&lt;!--也可以使用内部bean，内部bean不能被外部使用，只能在内部使用，所以id属性没必要--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Ford<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ChangAn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200000<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>double<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>person2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yczlab.spring.beans.Person<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Jerry<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- &lt;constructor-arg ref="car">&lt;/constructor-arg> --></span>        <span class="token comment" spellcheck="true">&lt;!--测试null值，属性为引用数据类型时，可以为其赋值为null，意义不大，因为这类数据默认初始化值就是null--></span>        <span class="token comment" spellcheck="true">&lt;!-- &lt;constructor-arg>&lt;null/>&lt;/constructor-arg> --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 为级联属性赋值。注意：属性（car）需要先初始化后才能为级联属性赋值，否则会有异常 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car.maxSpeed<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>250<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring项目的建立</title>
      <link href="/2020/03/07/spring-xiang-mu-de-jian-li/"/>
      <url>/2020/03/07/spring-xiang-mu-de-jian-li/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>这里的Spring项目并非Spring Boot项目，演示如何在IntelliJ IDEA中建立并初始化Spring项目</p><a id="more"></a><h3 id="1-打开IDEA-选择新建工程"><a href="#1-打开IDEA-选择新建工程" class="headerlink" title="1.打开IDEA,选择新建工程"></a>1.打开IDEA,选择新建工程</h3><p><img src="/2020/03/07/spring-xiang-mu-de-jian-li/1.png?v=1&amp;type=image" alt="image"></p><h3 id="2-选择Spring，勾选需要的配置，点击-Next"><a href="#2-选择Spring，勾选需要的配置，点击-Next" class="headerlink" title="2.选择Spring，勾选需要的配置，点击 Next"></a>2.选择Spring，勾选需要的配置，点击 Next</h3><p><img src="/2020/03/07/spring-xiang-mu-de-jian-li/2.png?v=1&amp;type=image" alt="image"></p><h3 id="3-设置项目的名称，点击-Finish"><a href="#3-设置项目的名称，点击-Finish" class="headerlink" title="3.设置项目的名称，点击 Finish"></a>3.设置项目的名称，点击 Finish</h3><p><img src="/2020/03/07/spring-xiang-mu-de-jian-li/3.png?v=1&amp;type=image" alt="image"></p><h3 id="4-等待下载所需依赖包文件"><a href="#4-等待下载所需依赖包文件" class="headerlink" title="4.等待下载所需依赖包文件"></a>4.等待下载所需依赖包文件</h3><p><img src="/2020/03/07/spring-xiang-mu-de-jian-li/4.png?v=1&amp;type=image" alt="image"></p><h3 id="5-若下载失败，选择重下"><a href="#5-若下载失败，选择重下" class="headerlink" title="5.若下载失败，选择重下"></a>5.若下载失败，选择重下</h3><p><img src="/2020/03/07/spring-xiang-mu-de-jian-li/5.png?v=1&amp;type=image" alt="image"></p><h3 id="6-成功创建Spring项目"><a href="#6-成功创建Spring项目" class="headerlink" title="6.成功创建Spring项目"></a>6.成功创建Spring项目</h3><p><img src="/2020/03/07/spring-xiang-mu-de-jian-li/6.png?v=1&amp;type=image" alt="image"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows中Node.js的安装配置</title>
      <link href="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/"/>
      <url>/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Window中Node.js及npm详细安装配置过程，npm是Nodejs下的包管理工具，在安装Nodejs时，会自动安装npm。</p><a id="more"></a><h3 id="一、安装过程"><a href="#一、安装过程" class="headerlink" title="一、安装过程"></a>一、安装过程</h3><h4 id="官网下载-Nodejs-的安装包："><a href="#官网下载-Nodejs-的安装包：" class="headerlink" title="官网下载 Nodejs 的安装包："></a>官网下载 Nodejs 的安装包：</h4><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/1.png?v=1&amp;type=image" alt="image"></p><h4 id="双击安装："><a href="#双击安装：" class="headerlink" title="双击安装："></a>双击安装：</h4><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/2.png?v=1&amp;type=image" alt="image"></p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/3.png?v=1&amp;type=image" alt="image"></p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/4.png?v=1&amp;type=image" alt="image"></p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/5.png?v=1&amp;type=image" alt="image"></p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/6.png?v=1&amp;type=image" alt="image"></p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/7.png?v=1&amp;type=image" alt="image"></p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/8.png?v=1&amp;type=image" alt="image"></p><p><strong>点击 Finish 完成安装。</strong></p><h4 id="安装完成后目录如下："><a href="#安装完成后目录如下：" class="headerlink" title="安装完成后目录如下："></a>安装完成后目录如下：</h4><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/9.png?v=1&amp;type=image" alt="image"></p><h4 id="安装完成后的环境变量："><a href="#安装完成后的环境变量：" class="headerlink" title="安装完成后的环境变量："></a>安装完成后的环境变量：</h4><p>安装完成后，环境变量会自动添加。此时系统环境变量的 Path 中会多出“D:\nodejs\”这么一条信息；用户环境变量的 Path 中会多出“C:\Users\Admin\AppData\Roaming\npm”这么一条信息。<br>windows+r键，打开cmd</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/10.png?v=1&amp;type=image" alt="image"></p><p>检查 node 和 npm 的版本，查看是否可用：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/11.png?v=1&amp;type=image" alt="image"></p><h3 id="二、环境配置详细过程"><a href="#二、环境配置详细过程" class="headerlink" title="二、环境配置详细过程"></a>二、环境配置详细过程</h3><p><strong>1、再看看另外2个目录，npm的本地仓库跑在系统盘c盘的用户目录了(没见到npm-cache是因为没有用过，一使用缓存目录就生成了)，这里我们将把这2个目录移动回到D:\nodejs中</strong><br><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/12.png?v=1&amp;type=image" alt="image"></p><p>先如下图，在D:\nodejs中建立2个目录</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/13.png?v=1&amp;type=image" alt="image"></p><p>运行以下两条命令，设置npm的本地仓库和缓存目录：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> prefix <span class="token string">"D:\nodejs\node_global"</span><span class="token function">npm</span> config <span class="token keyword">set</span> cache <span class="token string">"D:\ndoejs\node_cache"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上命令运行后，可以通过 <strong>npm config list</strong> 命令显示npm的所有配置信息：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/14.png?v=1&amp;type=image" alt="image"></p><p>也可以直接打开 npm 的配置文件，直接修改其中的内容：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/15.png?v=1&amp;type=image" alt="image"></p><p><strong>2、换源（因为此时通过 npm install 安装时速度会非常慢）</strong></p><p><strong>方法一：输入以下命令，直接对cnpm的镜像站进行配置。以后在进行插件的安装时还是直接使用 npm install 命令：</strong></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/16.png?v=1&amp;type=image" alt="image"></p><p><strong>方法二：使用阿里定制的 cnpm 命令行工具代替默认的 npm，输入下面代码进行安装：</strong></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/17.png?v=1&amp;type=image" alt="image"></p><p>安装 cnpm 后，D:\nodejs\node_global\目录下会增加如下内容，cnpm命令就是在该目录下：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/18.png?v=1&amp;type=image" alt="image"></p><p>以后安装插件时只需要使用 cnpm intall 命令即可。</p><p>但别忘了将 cnpm 的本地仓库和缓存目录也改成我们刚才新建的 D:\nodejs\node_global 和 D:\nodejs\node_cache ：</p><pre class="line-numbers language-bash"><code class="language-bash">cnpm config <span class="token keyword">set</span> prefix <span class="token string">"D:\nodejs\node_global"</span>cnpm config <span class="token keyword">set</span> cache <span class="token string">"D:\ndoejs\node_cache"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/19.png?v=1&amp;type=image" alt="image"></p><p>也可以直接打开 cnpm 的配置文件，直接修改其中的内容：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/20.png?v=1&amp;type=image" alt="image"></p><p><strong>注意：</strong> 这里运行 cnpm 命令时会出现如下图所示的情况：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/21.png?v=1&amp;type=image" alt="image"></p><p><strong>其实在运行 cnpm 命令前要修改环境变量的配置：</strong></p><p>增加环境变量NODE_PATH 内容是：D:\nodejs\node_global\node_modules</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/22.png?v=1&amp;type=image" alt="image"></p><p>然后点击Path进行修改，因为我们有些新的命令在“D:\nodejs\node_global\”目录中（以后通过npm或cnpm安装的插件的命令可能存在于此，包括刚才安装的cnpm的命令也在此），而该目录并没有在环境变量中，所以系统找不到所要执行的命令：</p><p><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/23.png?v=1&amp;type=image" alt="image"></p><p><strong>修改后记得重新打开 命令提示符 执行命令。</strong></p><p>通过以上的 环境配置 后，以后不管是通过 <strong>npm install</strong> 还是 <strong>cnpm install</strong> 来安装我们需要的模块，所安装的模块都会放入“D:\nodejs\node_global\node_modules\”目录中，包括刚才我们安装的 cnpm 也在该目录中，而并没有在“D:\nodejs\node_modules”中。因为我们执行了 npm config set prefix “D:\nodejs\node_global” 和 cnpm config set prefix “D:\nodejs\node_global”，这也是为什么在上面我们说模块目录会改变的原因。</p><h3 id="三、更新-npm"><a href="#三、更新-npm" class="headerlink" title="三、更新 npm"></a>三、更新 npm</h3><p>执行如下命令进行更新（该命令既是安装命令，又是更新命令）：</p><pre class="line-numbers language-bash"><code class="language-bash">cnpm <span class="token function">install</span> <span class="token function">npm</span> -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token function">npm</span> -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过 npm -v 命令查看 npm 的版本信息：<br><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/24.png?v=1&amp;type=image" alt="image"></p><p>与之前的6.13.4相比，确实更新了。</p><p>此时“D:\nodejs\node_global\node_modules\”目录中会存在我们已安装的如下模块：<br><img src="/2020/02/22/windows-zhong-node.js-de-an-zhuang-pei-zhi/25.png?v=1&amp;type=image" alt="image"></p><p>相当于新更新的 npm 模块也被安装到了该目录下。</p><p>至此，恭喜你所有的安装、配置、换源操作都已结束，可以开心的使用 npm 了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客系统的搭建</title>
      <link href="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/"/>
      <url>/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>Hexo可以理解为是基于node.js制作的一个博客工具，不是我们理解的一个开源的博客系统。通过markdown编写文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器，或上传到Github、Gitee等仓库托管平台，在开启该类仓库的Pages服务后便可使用。简而言之：hexo是个静态页面生成、上传的工具。</p><a id="more"></a><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub、Gitee或Coding上，是搭建博客的首选框架。</p><h3 id="Hexo的搭建步骤"><a href="#Hexo的搭建步骤" class="headerlink" title="Hexo的搭建步骤"></a>Hexo的搭建步骤</h3><ul><li>安装Git</li><li>安装Node.js(其中就包含了npm)</li><li>本地安装Hexo</li><li>验证是否能在本地浏览器访问Hexo博客系统</li><li>使用Github创建个人仓库</li><li>使用Gitee创建个人仓库</li><li>使用Coding创建个人仓库</li><li>生成SSH添加到Github,Gitee或Coding中</li><li>将本地的Hexo部署到以上创建的仓库中（可以同时上传到多个仓库中）</li><li>开启各个仓库的Pages服务（免费的）</li><li>访问个人博客（可以开始使用了）</li><li>本地写文章</li><li>同步上传到所需要部署的仓库中</li></ul><h3 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h3><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网地址</a></p><h3 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h3><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">nodejs官网地址</a></p><h3 id="三、本地安装Hexo"><a href="#三、本地安装Hexo" class="headerlink" title="三、本地安装Hexo"></a>三、本地安装Hexo</h3><p>前面的Git和Nodejs安装好之后，就可以正式安装Hexo了。</p><p>建议在执行后续的安装命令时将npm的安装源更换成国内的镜像（淘宝的镜像），不然后续用到的npm安装命令都会很缓慢，而且可能还会在中途卡死，所以建议换源。使用以命令设置npm的镜像源：(也可以手动打开“C:\Users\Administrator”目录下的“.npmrc”文件，增加“registry=<a href="https://registry.npm.taobao.org”" target="_blank" rel="noopener">https://registry.npm.taobao.org”</a> 即可，其中“Administrator”为你的用户名)</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用如下命令查看npm是否换源成功：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若显示“<a href="https://registry.npm.taobao.org”，则说明换源成功！" target="_blank" rel="noopener">https://registry.npm.taobao.org”，则说明换源成功！</a></p><p>npm换源成功后，使用如下命令安装Hexo到本地，别忘了“-g”这个参数：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后可以在任意文件目录中创建一个文件夹用来存放你的博客项目，比如名为 myblog,然后利用命令提示符的cd命令进入到该文件夹下，利用hexo来初始化你的博客系统：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo init  <span class="token comment" spellcheck="true"># 注意，该命令一定是要在你新建的那个文件夹目录下执行。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者你也可以直接使用“hexo init myblog”命令，该命令会直接在当前目录下创建名为“myblog-hexo”的文件，并初始化项目。（其实hexo init命令本质上是利用Git从远端克隆项目到本地）</p><p>如果初始化过程中没有出现“error”（忽略WARN），那么初始化后，你的文件目录看起来应该是这样的：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/1.png?v=1&amp;type=image" alt="image"><br>如果以上步骤一切正常，那么Hexo在本地的安装就成功了。</p><h3 id="四、验证是否能在本地浏览器访问Hexo博客系统"><a href="#四、验证是否能在本地浏览器访问Hexo博客系统" class="headerlink" title="四、验证是否能在本地浏览器访问Hexo博客系统"></a>四、验证是否能在本地浏览器访问Hexo博客系统</h3><p>继续在以上该项目目录下，运行以下命令：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>hexo clean 命令用来删除之前生成的前端页面，即public文件夹，此时由于还没有任何前端界面，该目录下没有public文件夹。</li><li>hexo g 命令全称hexo generate，用来生成前端访问的界面，生成的文件会存放在“public”文件夹中</li><li>hexo s 命令全称hexo server 用来开启本地的Hexo服务，开启后可在本地通过浏览器访问生成的页面</li></ul><p>运行以上三条命令后，可在本地打开浏览器，输入网址<strong>127.0.0.1:4000</strong>即可看到你生成的博客页面了，大概长这样：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/2.png?v=1&amp;type=image" alt="image"><br>可以使用 Ctrl+c 把hexo服务关掉。<br>至此，Hexo博客系统才算真正在本地安装成功了。</p><h3 id="五、使用Github创建个人仓库"><a href="#五、使用Github创建个人仓库" class="headerlink" title="五、使用Github创建个人仓库"></a>五、使用Github创建个人仓库</h3><p>到 <a href="https://github.com/" target="_blank" rel="noopener">Github官网</a> 注册账号，并记住你的username和邮箱，username最好起得有个性，后面会用到。注册后应该是可以使用 “<a href="https://github.com/你的username”" target="_blank" rel="noopener">https://github.com/你的username”</a> 访问到你的个人主页，该主页会显示出你的代码提交量情况和公开仓库等个人信息。比如我的username为yczlab,那么可以通过<a href="https://github.com/yczlab" target="_blank" rel="noopener">https://github.com/yczlab</a> 访问到我的个人主页。<br><strong>注册并登录你的Github后，如下图，点击右上角 New repository，新建仓库：</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/3.png?v=1&amp;type=image" alt="image"><br><strong>进行仓库创建时的设置：</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/4.png?v=1&amp;type=image" alt="image"><br><strong>创建好该仓库后，进入该仓库,里面暂时只有一个README文件：</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/5.png?v=1&amp;type=image" alt="image"><br><strong>点击该仓库右上角的Settings，找到Github Pages:</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/6.png?v=1&amp;type=image" alt="image"></p><h3 id="六、使用Gitee创建个人仓库"><a href="#六、使用Gitee创建个人仓库" class="headerlink" title="六、使用Gitee创建个人仓库"></a>六、使用Gitee创建个人仓库</h3><p>到 <a href="https://gitee.com/" target="_blank" rel="noopener">Gitee官网</a> 注册账号(Gitee是中国的类似于Github的代码托管平台，访问速度会比Github快很多，建议使用该平台来搭建Hexo)，并记住你的个人空间地址和邮箱，个人空间地址最好起得有个性，后面会用到，这里的个人空间地址并不是你的姓名。（个人空间可以在登录后，点击右上角头像选择“设置”，再选择“个人空间地址”查看并修改）注册后应该是可以使用 “<a href="https://gitee.com/你的个人地址空间”" target="_blank" rel="noopener">https://gitee.com/你的个人地址空间”</a> 访问到你的个人主页，该主页会显示出你的代码提交量情况和公开仓库等个人信息。比如我的个人地址空间为yczlab,那么可以通过<a href="https://gitee.com/yczlab" target="_blank" rel="noopener">https://gitee.com/yczlab</a> 访问到我的个人主页。<br><strong>注册并登录你的Gitee后，如下图，点击右上角，新建仓库：</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/7.png?v=1&amp;type=image" alt="image"><br><strong>进行仓库创建时的设置：</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/8.png?v=1&amp;type=image" alt="image"><br><strong>同样创建好该仓库后，进入该仓库，里面暂时只README文件：</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/9.png?v=1&amp;type=image" alt="image"><br><strong>点击该仓库右上角的“服务”，再点击“Gitee Pages”:</strong><br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/10.png?v=1&amp;type=image" alt="image"></p><h3 id="七、使用Coding创建个人仓库"><a href="#七、使用Coding创建个人仓库" class="headerlink" title="七、使用Coding创建个人仓库"></a>七、使用Coding创建个人仓库</h3><p><a href="https://coding.net/" target="_blank" rel="noopener">Coding的官网</a>，在Coding中注册、登录、创建仓库，步骤与上面大同小异，这里就不在继续介绍了。本文主要介绍如何利用Hexo将博客系统同时部署到Github和Gitee中。</p><h3 id="八、生成SSH公钥添加到Github-Gitee或Coding中"><a href="#八、生成SSH公钥添加到Github-Gitee或Coding中" class="headerlink" title="八、生成SSH公钥添加到Github,Gitee或Coding中"></a>八、生成SSH公钥添加到Github,Gitee或Coding中</h3><p>以下方法为在Windows中生成并使用SSH工具</p><ul><li><p><strong>生成ssh公钥添加到Github</strong><br>保证 Git 已经正确安装好。进入“C:\Users\Administrator.ssh”目录下（其中Administrator为你的用户名），鼠标右键点击打开“Git Bash Here”，输入以下命令，并连续按三次回车键：</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"你的邮箱名称"</span> -f <span class="token string">"产生的公私钥名称"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中“你的邮箱”为你注册Github时使用的邮箱地址，比如QQ邮箱；“产生的公私钥名称”为你想要为其命名的名称，若不命名，则会使用默认的名称，会覆盖以前也使用默认名称的公私钥文件。比如我执行 ‘ssh-keygen -t rsa -C “<a href="mailto:2685733832@qq.com">2685733832@qq.com</a>“ -f “github_rsa” ‘，结果如下：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/11.png?v=1&amp;type=image" alt="image"><br>此时会在当前目录下生成两个文件“github_rsa”和“github_ras.pub”，一个为私钥（不要公开），另一个为私钥（可以公开）：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/12.png?v=1&amp;type=image" alt="image"><br>用自己注册的账号登录Github官网，点击右上角的”Settings”——&gt;点击”SSH and GPG keys”——&gt;点击“New SSH key”，添加刚刚生成的公钥：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/13.png?v=1&amp;type=image" alt="image"><br>现在还不能正常使用，因为在新生成这个公私钥文件的时候不是采用的默认命名，而是带了“-f”参数对该公私钥文件进行了重命名，所以本地的ssh服务可能就找不到我们新生成的公私钥文件，所以还需要在本地配置一下，才能正常使用。在该公私钥文件所在的目录下新建一个名为“config”的文件(注意该文件没有后缀)，往该文件中写入以下的信息，并保存：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Github的公钥配置</span>Host github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/github_rsa <span class="token comment" spellcheck="true">#注意，最后这个地方换成你在生成该公私钥时的命名，比如我刚刚在生成时用的github_rsa，这里我就写成github_rsa</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输入以下命令，验证是否可用：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T -v git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示以下信息，说明验证成功，可以使用：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/14.png?v=1&amp;type=image" alt="image"><br>如果该过程没有成功，建议百度自行解决一下。<br>至此，SSH公钥就成功添加到Github，并可以使用了。可以使用git命令对Github中的仓库进行克隆和上传代码。</p></li><li><p><strong>生成ssh公钥添加到Gitee</strong><br>方法和上面的差不多，只是在生成的公私钥的时候注意命名不要和上面已有的公私钥名称重复了，邮箱（注册Gitee账号时用的邮箱）可以重复。比如：</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"2685733832@qq.com"</span> -f <span class="token string">"gitee_rsa"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/15.png?v=1&amp;type=image" alt="image"><br>此时会在当前目录下生成两个文件“gitee_rsa”和“gitee_ras.pub”，一个为私钥（不要公开），另一个为私钥（可以公开）：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/16.png?v=1&amp;type=image" alt="image"><br>用自己注册的账号登录Gitee官网，点击右上角的”头像”——&gt;点击”设置”——&gt;点击“SSH公钥”，添加刚刚生成的公钥：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/17.png?v=1&amp;type=image" alt="image"><br>同样，现在还不能正常使用，还需要在本地配置一下，才能正常使用。在该公私钥文件所在的目录下新建一个名为“config”的文件(注意该文件没有后缀)，如果已有那就不用新建，往该文件中写入以下的信息，并保存：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Gitee的公钥配置</span>Host gitee.comHostName gitee.comPreferredAuthentications publickeyIdentityFile ~/.ssh/gitee_rsa <span class="token comment" spellcheck="true">#注意，最后这个地方换成你在生成该公私钥时的命名，比如我刚刚在生成时用的gitee_rsa，这里我就写成gitee_rsa</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输入以下命令，验证是否可用：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T -v git@gitee.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示以下信息，说明验证成功，可以使用：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/18.png?v=1&amp;type=image" alt="image"><br>如果该过程没有成功，建议百度自行解决一下。<br>至此，SSH公钥就成功添加到Gitee，并可以使用了。可以使用git命令对Gitee中的仓库进行克隆和上传代码。</p></li><li><p><strong>生成ssh公钥添加到Coding</strong><br>该过程基本和上面的步骤一样，如有需要，请参照上面的步骤自行添加ssh公钥到Coding中。</p></li></ul><h3 id="九、将本地的Hexo部署到以上创建的仓库中（可以同时上传到多个仓库中）"><a href="#九、将本地的Hexo部署到以上创建的仓库中（可以同时上传到多个仓库中）" class="headerlink" title="九、将本地的Hexo部署到以上创建的仓库中（可以同时上传到多个仓库中）"></a>九、将本地的Hexo部署到以上创建的仓库中（可以同时上传到多个仓库中）</h3><p>在创建好Hexo想要部署到的平台的相应仓库后，便可以配置本地已安装好的Hexo博客系统，使本地的博客系统可以上传到相应的仓库，并供大家访问博客。</p><p>打开本地本地Hexo项目中的配置文件，即“_config.yml”文件，修改其中的以下内容，添加自己想要上传到的平台仓库中（这里我添加了两个,gitee和github）：<br><img src="/2020/02/20/hexo-bo-ke-xi-tong-de-da-jian/19.png?v=1&amp;type=image" alt="image"><br>然后打开命令提示符，利用cd命令进入该目录下，输入以下命令将本地项目上传到以上指定的仓库中：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo g <span class="token comment" spellcheck="true">#生成静态页面至public目录</span>hexo d <span class="token comment" spellcheck="true">#将.deploy_git目录部署到指定仓库地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可能 “hexo d” 命令初次运行时会报错，那是因为该项目缺少”hexo-deployer-git”插件，在该项目中使用以下命令安装即可：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-depoyer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再运行“hexo d”命令，该命令的执行速度可能有点慢，该命令本质是将本地的文件通过git上传到远端，可能中途还会失败。如果失败，就一直执行，直到成功即可。</p><h3 id="十、开启各个仓库的Pages服务（免费的）"><a href="#十、开启各个仓库的Pages服务（免费的）" class="headerlink" title="十、开启各个仓库的Pages服务（免费的）"></a>十、开启各个仓库的Pages服务（免费的）</h3><p>关于各个仓库如何开启Pages服务，在上面创建仓库的步骤中就已说明，这里就不在重复。Github时默认开启Pages的，而Gitee在每次上传后都需要手动刷新。</p><h3 id="十一、访问个人博客（可以开始使用了）"><a href="#十一、访问个人博客（可以开始使用了）" class="headerlink" title="十一、访问个人博客（可以开始使用了）"></a>十一、访问个人博客（可以开始使用了）</h3><p>成功上传后，就可以根据Pages服务中提供的地址访问你的博客了。<br>比如我的地址：<br>Gitee地址：<a href="https://yczlab.gitee.io/" target="_blank" rel="noopener">https://yczlab.gitee.io/</a><br>Github地址：<a href="https://yczlab.github.io/" target="_blank" rel="noopener">https://yczlab.github.io/</a></p><h3 id="十二、本地写文章"><a href="#十二、本地写文章" class="headerlink" title="十二、本地写文章"></a>十二、本地写文章</h3><p>在本地的Hexo项目文件中利用一下命令生成一篇新的博客：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo n <span class="token string">"博客名称"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上命令执行后便会在“source_posts\”目录中生成一篇博客文章，可利用MarkDown语法来书写你的博客文章。</p><h3 id="十三、同步上传到所需要部署的仓库中"><a href="#十三、同步上传到所需要部署的仓库中" class="headerlink" title="十三、同步上传到所需要部署的仓库中"></a>十三、同步上传到所需要部署的仓库中</h3><p>在你的文章写好后，执行以下命令同步上传到部署平台上：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：Gitee的Pages服务需要每次上传后手动刷新。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
